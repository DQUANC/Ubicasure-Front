{"ast":null,"code":"import { __decorate, __metadata, __param, __awaiter } from 'tslib';\nimport { Injectable, NgZone, Input, Directive, EventEmitter, Output, Self, ElementRef, Component, Inject, PLATFORM_ID, QueryList, ContentChildren, forwardRef, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Optional, LOCALE_ID, NgModule } from '@angular/core';\nimport { Observable, BehaviorSubject, from, timer, Subject, fromEventPattern, merge, ReplaySubject, bindCallback, of, throwError } from 'rxjs';\nimport { flatMap, sample, switchMap, map, shareReplay, distinctUntilChanged, takeUntil, startWith, skip, multicast } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nlet MapsAPILoader = class MapsAPILoader {};\nMapsAPILoader = __decorate([Injectable()], MapsAPILoader);\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\n\nlet GoogleMapsAPIWrapper = class GoogleMapsAPIWrapper {\n  constructor(_loader, _zone) {\n    this._loader = _loader;\n    this._zone = _zone;\n    this._map = new Promise(resolve => {\n      this._mapResolver = resolve;\n    });\n  }\n\n  createMap(el, mapOptions) {\n    return this._zone.runOutsideAngular(() => {\n      return this._loader.load().then(() => {\n        const map = new google.maps.Map(el, mapOptions);\n\n        this._mapResolver(map);\n\n        return;\n      });\n    });\n  }\n\n  setMapOptions(options) {\n    return this._zone.runOutsideAngular(() => {\n      this._map.then(m => {\n        m.setOptions(options);\n      });\n    });\n  }\n  /**\n   * Creates a google map marker with the map context\n   */\n\n\n  createMarker(options = {}, addToMap = true) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => {\n        if (addToMap) {\n          options.map = map;\n        }\n\n        return new google.maps.Marker(options);\n      });\n    });\n  }\n\n  createInfoWindow(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(() => {\n        return new google.maps.InfoWindow(options);\n      });\n    });\n  }\n  /**\n   * Creates a google.map.Circle for the current map.\n   */\n\n\n  createCircle(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => {\n        if (typeof options.strokePosition === 'string') {\n          options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n        }\n\n        options.map = map;\n        return new google.maps.Circle(options);\n      });\n    });\n  }\n  /**\n   * Creates a google.map.Rectangle for the current map.\n   */\n\n\n  createRectangle(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => {\n        options.map = map;\n        return new google.maps.Rectangle(options);\n      });\n    });\n  }\n\n  createPolyline(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this.getNativeMap().then(map => {\n        let line = new google.maps.Polyline(options);\n        line.setMap(map);\n        return line;\n      });\n    });\n  }\n\n  createPolygon(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this.getNativeMap().then(map => {\n        let polygon = new google.maps.Polygon(options);\n        polygon.setMap(map);\n        return polygon;\n      });\n    });\n  }\n  /**\n   * Creates a new google.map.Data layer for the current map\n   */\n\n\n  createDataLayer(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(m => {\n        let data = new google.maps.Data(options);\n        data.setMap(m);\n        return data;\n      });\n    });\n  }\n  /**\n   * Creates a TransitLayer instance for a map\n   * @param {TransitLayerOptions} options - used for setting layer options\n   * @returns {Promise<TransitLayer>} a new transit layer object\n   */\n\n\n  createTransitLayer(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => {\n        let newLayer = new google.maps.TransitLayer();\n        newLayer.setMap(options.visible ? map : null);\n        return newLayer;\n      });\n    });\n  }\n  /**\n   * Creates a BicyclingLayer instance for a map\n   * @param {BicyclingLayerOptions} options - used for setting layer options\n   * @returns {Promise<BicyclingLayer>} a new bicycling layer object\n   */\n\n\n  createBicyclingLayer(options) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => {\n        let newLayer = new google.maps.BicyclingLayer();\n        newLayer.setMap(options.visible ? map : null);\n        return newLayer;\n      });\n    });\n  }\n  /**\n   * Determines if given coordinates are insite a Polygon path.\n   */\n\n\n  containsLocation(latLng, polygon) {\n    return google.maps.geometry.poly.containsLocation(latLng, polygon);\n  }\n\n  subscribeToMapEvent(eventName) {\n    return new Observable(observer => {\n      this._map.then(m => {\n        m.addListener(eventName, arg => {\n          this._zone.run(() => observer.next(arg));\n        });\n      });\n    });\n  }\n\n  clearInstanceListeners() {\n    return this._zone.runOutsideAngular(() => {\n      this._map.then(map => {\n        google.maps.event.clearInstanceListeners(map);\n      });\n    });\n  }\n\n  setCenter(latLng) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.setCenter(latLng));\n    });\n  }\n\n  getZoom() {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.getZoom());\n    });\n  }\n\n  getBounds() {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.getBounds());\n    });\n  }\n\n  getMapTypeId() {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.getMapTypeId());\n    });\n  }\n\n  setZoom(zoom) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.setZoom(zoom));\n    });\n  }\n\n  getCenter() {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.getCenter());\n    });\n  }\n\n  panTo(latLng) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.panTo(latLng));\n    });\n  }\n\n  panBy(x, y) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.panBy(x, y));\n    });\n  }\n\n  fitBounds(latLng, padding) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.fitBounds(latLng, padding));\n    });\n  }\n\n  panToBounds(latLng, padding) {\n    return this._zone.runOutsideAngular(() => {\n      return this._map.then(map => map.panToBounds(latLng, padding));\n    });\n  }\n  /**\n   * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n   */\n\n\n  getNativeMap() {\n    return this._map;\n  }\n  /**\n   * Triggers the given event name on the map instance.\n   */\n\n\n  triggerMapEvent(eventName) {\n    return this._map.then(m => google.maps.event.trigger(m, eventName));\n  }\n\n};\n\nGoogleMapsAPIWrapper.ctorParameters = () => [{\n  type: MapsAPILoader\n}, {\n  type: NgZone\n}];\n\nGoogleMapsAPIWrapper = __decorate([Injectable(), __metadata(\"design:paramtypes\", [MapsAPILoader, NgZone])], GoogleMapsAPIWrapper);\n/**\n * This class manages Transit and Bicycling Layers for a Google Map instance.\n */\n\nlet LayerManager = class LayerManager {\n  constructor(_wrapper) {\n    this._wrapper = _wrapper;\n    this._layers = new Map();\n  }\n  /**\n   * Adds a transit layer to a map instance.\n   * @param {AgmTransitLayer} layer - a TransitLayer object\n   * @param {TransitLayerOptions} options - TransitLayerOptions options\n   * @returns void\n   */\n\n\n  addTransitLayer(layer, options) {\n    const newLayer = this._wrapper.createTransitLayer(options);\n\n    this._layers.set(layer, newLayer);\n  }\n  /**\n   * Adds a bicycling layer to a map instance.\n   * @param {AgmBicyclingLayer} layer - a bicycling layer object\n   * @param {BicyclingLayerOptions} options - BicyclingLayer options\n   * @returns void\n   */\n\n\n  addBicyclingLayer(layer, options) {\n    const newLayer = this._wrapper.createBicyclingLayer(options);\n\n    this._layers.set(layer, newLayer);\n  }\n  /**\n   * Deletes a map layer\n   * @param {AgmTransitLayer|AgmBicyclingLayer} layer - the layer to delete\n   * @returns  Promise<void>\n   */\n\n\n  deleteLayer(layer) {\n    return this._layers.get(layer).then(currentLayer => {\n      currentLayer.setMap(null);\n\n      this._layers.delete(layer);\n    });\n  }\n  /**\n   * Hide/Show a google map layer\n   * @param { AgmTransitLayer|AgmBicyclingLayer} layer - the layer to hide/show\n   * @param {TransitLayerOptions|BicyclingLayerOptions} options - used to set visibility of the layer\n   * @returns Promise<void>\n   */\n\n\n  toggleLayerVisibility(layer, options) {\n    return this._layers.get(layer).then(currentLayer => {\n      if (!options.visible) {\n        currentLayer.setMap(null);\n        return;\n      } else {\n        return this._wrapper.getNativeMap().then(map => {\n          currentLayer.setMap(map);\n        });\n      }\n    });\n  }\n\n};\n\nLayerManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}];\n\nLayerManager = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper])], LayerManager);\nlet layerId = 0;\n/*\n * This directive adds a bicycling layer to a google map instance\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\n * */\n\nlet AgmBicyclingLayer = class AgmBicyclingLayer {\n  constructor(_manager) {\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId++).toString();\n    /**\n     * Hide/show bicycling layer\n     */\n\n    this.visible = true;\n  }\n\n  ngOnInit() {\n    if (this._addedToManager) {\n      return;\n    }\n\n    this._manager.addBicyclingLayer(this, {\n      visible: this.visible\n    });\n\n    this._addedToManager = true;\n  }\n\n  ngOnChanges(changes) {\n    if (!this._addedToManager) {\n      return;\n    }\n\n    if (changes['visible'] != null) {\n      this._manager.toggleLayerVisibility(this, {\n        visible: changes['visible'].currentValue\n      });\n    }\n  }\n  /** @internal */\n\n\n  id() {\n    return this._id;\n  }\n  /** @internal */\n\n\n  toString() {\n    return `AgmBicyclingLayer-${this._id.toString()}`;\n  }\n  /** @internal */\n\n\n  ngOnDestroy() {\n    this._manager.deleteLayer(this);\n  }\n\n};\n\nAgmBicyclingLayer.ctorParameters = () => [{\n  type: LayerManager\n}];\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmBicyclingLayer.prototype, \"visible\", void 0);\n\nAgmBicyclingLayer = __decorate([Directive({\n  selector: 'agm-bicycling-layer'\n}), __metadata(\"design:paramtypes\", [LayerManager])], AgmBicyclingLayer);\nlet CircleManager = class CircleManager {\n  constructor(_apiWrapper, _zone) {\n    this._apiWrapper = _apiWrapper;\n    this._zone = _zone;\n    this._circles = new Map();\n  }\n\n  addCircle(circle) {\n    this._circles.set(circle, this._apiWrapper.createCircle({\n      center: {\n        lat: circle.latitude,\n        lng: circle.longitude\n      },\n      clickable: circle.clickable,\n      draggable: circle.draggable,\n      editable: circle.editable,\n      fillColor: circle.fillColor,\n      fillOpacity: circle.fillOpacity,\n      radius: circle.radius,\n      strokeColor: circle.strokeColor,\n      strokeOpacity: circle.strokeOpacity,\n      strokePosition: circle.strokePosition,\n      strokeWeight: circle.strokeWeight,\n      visible: circle.visible,\n      zIndex: circle.zIndex\n    }));\n  }\n  /**\n   * Removes the given circle from the map.\n   */\n\n\n  removeCircle(circle) {\n    return this._circles.get(circle).then(c => {\n      c.setMap(null);\n\n      this._circles.delete(circle);\n    });\n  }\n\n  setOptions(circle, options) {\n    return this._circles.get(circle).then(c => {\n      if (typeof options.strokePosition === 'string') {\n        options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n      }\n\n      c.setOptions(options);\n    });\n  }\n\n  getBounds(circle) {\n    return this._circles.get(circle).then(c => c.getBounds());\n  }\n\n  getCenter(circle) {\n    return this._circles.get(circle).then(c => c.getCenter());\n  }\n\n  getRadius(circle) {\n    return this._circles.get(circle).then(c => c.getRadius());\n  }\n\n  setCenter(circle) {\n    return this._circles.get(circle).then(c => {\n      return c.setCenter({\n        lat: circle.latitude,\n        lng: circle.longitude\n      });\n    });\n  }\n\n  setEditable(circle) {\n    return this._circles.get(circle).then(c => {\n      return c.setEditable(circle.editable);\n    });\n  }\n\n  setDraggable(circle) {\n    return this._circles.get(circle).then(c => {\n      return c.setDraggable(circle.draggable);\n    });\n  }\n\n  setVisible(circle) {\n    return this._circles.get(circle).then(c => {\n      return c.setVisible(circle.visible);\n    });\n  }\n\n  setRadius(circle) {\n    return this._circles.get(circle).then(c => {\n      return c.setRadius(circle.radius);\n    });\n  }\n\n  getNativeCircle(circle) {\n    return this._circles.get(circle);\n  }\n\n  createEventObservable(eventName, circle) {\n    return new Observable(observer => {\n      let listener = null;\n\n      this._circles.get(circle).then(c => {\n        listener = c.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n\n};\n\nCircleManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\n\nCircleManager = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], CircleManager);\nvar AgmCircle_1;\nlet AgmCircle = AgmCircle_1 = class AgmCircle {\n  constructor(_manager) {\n    this._manager = _manager;\n    /**\n     * Indicates whether this Circle handles mouse events. Defaults to true.\n     */\n\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this circle over the map. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this circle by dragging the control points shown at\n     * the center and around the circumference of the circle. Defaults to false.\n     */\n\n    this.editable = false;\n    /**\n     * The radius in meters on the Earth's surface.\n     */\n\n    this.radius = 0;\n    /**\n     * The stroke position. Defaults to CENTER.\n     * This property is not supported on Internet Explorer 8 and earlier.\n     */\n\n    this.strokePosition = 'CENTER';\n    /**\n     * The stroke width in pixels.\n     */\n\n    this.strokeWeight = 0;\n    /**\n     * Whether this circle is visible on the map. Defaults to true.\n     */\n\n    this.visible = true;\n    /**\n     * This event is fired when the circle's center is changed.\n     */\n\n    this.centerChange = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the circle.\n     */\n\n    this.circleClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the circle.\n     */\n\n    this.circleDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the circle.\n     */\n\n    this.drag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the circle.\n     */\n\n    this.dragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the circle.\n     */\n\n    this.dragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the circle.\n     */\n\n    this.mouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the circle.\n     */\n\n    this.mouseMove = new EventEmitter();\n    /**\n     * This event is fired on circle mouseout.\n     */\n\n    this.mouseOut = new EventEmitter();\n    /**\n     * This event is fired on circle mouseover.\n     */\n\n    this.mouseOver = new EventEmitter();\n    /**\n     * This event is fired when the DOM mouseup event is fired on the circle.\n     */\n\n    this.mouseUp = new EventEmitter();\n    /**\n     * This event is fired when the circle's radius is changed.\n     */\n\n    this.radiusChange = new EventEmitter();\n    /**\n     * This event is fired when the circle is right-clicked on.\n     */\n\n    this.rightClick = new EventEmitter();\n    this._circleAddedToManager = false;\n    this._eventSubscriptions = [];\n  }\n  /** @internal */\n\n\n  ngOnInit() {\n    this._manager.addCircle(this);\n\n    this._circleAddedToManager = true;\n\n    this._registerEventListeners();\n  }\n  /** @internal */\n\n\n  ngOnChanges(changes) {\n    if (!this._circleAddedToManager) {\n      return;\n    }\n\n    if (changes['latitude'] || changes['longitude']) {\n      this._manager.setCenter(this);\n    }\n\n    if (changes['editable']) {\n      this._manager.setEditable(this);\n    }\n\n    if (changes['draggable']) {\n      this._manager.setDraggable(this);\n    }\n\n    if (changes['visible']) {\n      this._manager.setVisible(this);\n    }\n\n    if (changes['radius']) {\n      this._manager.setRadius(this);\n    }\n\n    this._updateCircleOptionsChanges(changes);\n  }\n\n  _updateCircleOptionsChanges(changes) {\n    let options = {};\n    let optionKeys = Object.keys(changes).filter(k => AgmCircle_1._mapOptions.indexOf(k) !== -1);\n    optionKeys.forEach(k => {\n      options[k] = changes[k].currentValue;\n    });\n\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  _registerEventListeners() {\n    let events = new Map();\n    events.set('center_changed', this.centerChange);\n    events.set('click', this.circleClick);\n    events.set('dblclick', this.circleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragstart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('radius_changed', this.radiusChange);\n    events.set('rightclick', this.rightClick);\n    events.forEach((eventEmitter, eventName) => {\n      this._eventSubscriptions.push(this._manager.createEventObservable(eventName, this).subscribe(value => {\n        switch (eventName) {\n          case 'radius_changed':\n            this._manager.getRadius(this).then(radius => eventEmitter.emit(radius));\n\n            break;\n\n          case 'center_changed':\n            this._manager.getCenter(this).then(center => eventEmitter.emit({\n              lat: center.lat(),\n              lng: center.lng()\n            }));\n\n            break;\n\n          default:\n            eventEmitter.emit({\n              coords: {\n                lat: value.latLng.lat(),\n                lng: value.latLng.lng()\n              }\n            });\n        }\n      }));\n    });\n  }\n  /** @internal */\n\n\n  ngOnDestroy() {\n    this._eventSubscriptions.forEach(function (s) {\n      s.unsubscribe();\n    });\n\n    this._eventSubscriptions = null;\n\n    this._manager.removeCircle(this);\n  }\n  /**\n   * Gets the LatLngBounds of this Circle.\n   */\n\n\n  getBounds() {\n    return this._manager.getBounds(this);\n  }\n\n  getCenter() {\n    return this._manager.getCenter(this);\n  }\n\n};\nAgmCircle._mapOptions = ['fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'clickable'];\n\nAgmCircle.ctorParameters = () => [{\n  type: CircleManager\n}];\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"latitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"longitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"clickable\", void 0);\n\n__decorate([Input('circleDraggable'), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"draggable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"editable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmCircle.prototype, \"fillColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"fillOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"radius\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmCircle.prototype, \"strokeColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"strokeOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmCircle.prototype, \"strokePosition\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"strokeWeight\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmCircle.prototype, \"visible\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmCircle.prototype, \"zIndex\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"centerChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"circleClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"circleDblClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"drag\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"dragEnd\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"dragStart\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseDown\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseMove\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseOut\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseOver\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"mouseUp\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"radiusChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmCircle.prototype, \"rightClick\", void 0);\n\nAgmCircle = AgmCircle_1 = __decorate([Directive({\n  selector: 'agm-circle'\n}), __metadata(\"design:paramtypes\", [CircleManager])], AgmCircle);\n/**\n * Manages all Data Layers for a Google Map instance.\n */\n\nlet DataLayerManager = class DataLayerManager {\n  constructor(_wrapper, _zone) {\n    this._wrapper = _wrapper;\n    this._zone = _zone;\n    this._layers = new Map();\n  }\n  /**\n   * Adds a new Data Layer to the map.\n   */\n\n\n  addDataLayer(layer) {\n    const newLayer = this._wrapper.createDataLayer({\n      style: layer.style\n    }).then(d => {\n      if (layer.geoJson) {\n        this.getDataFeatures(d, layer.geoJson).then(features => d.features = features);\n      }\n\n      return d;\n    });\n\n    this._layers.set(layer, newLayer);\n  }\n\n  deleteDataLayer(layer) {\n    this._layers.get(layer).then(l => {\n      l.setMap(null);\n\n      this._layers.delete(layer);\n    });\n  }\n\n  updateGeoJson(layer, geoJson) {\n    this._layers.get(layer).then(l => {\n      l.forEach(function (feature) {\n        l.remove(feature);\n        var index = l.features.indexOf(feature, 0);\n\n        if (index > -1) {\n          l.features.splice(index, 1);\n        }\n      });\n      this.getDataFeatures(l, geoJson).then(features => l.features = features);\n    });\n  }\n\n  setDataOptions(layer, options) {\n    this._layers.get(layer).then(l => {\n      l.setControlPosition(options.controlPosition);\n      l.setControls(options.controls);\n      l.setDrawingMode(options.drawingMode);\n      l.setStyle(options.style);\n    });\n  }\n  /**\n   * Creates a Google Maps event listener for the given DataLayer as an Observable\n   */\n\n\n  createEventObservable(eventName, layer) {\n    return new Observable(observer => {\n      this._layers.get(layer).then(d => {\n        d.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n  /**\n   * Extract features from a geoJson using google.maps Data Class\n   * @param d : google.maps.Data class instance\n   * @param geoJson : url or geojson object\n   */\n\n\n  getDataFeatures(d, geoJson) {\n    return new Promise((resolve, reject) => {\n      if (typeof geoJson === 'object') {\n        try {\n          const features = d.addGeoJson(geoJson);\n          resolve(features);\n        } catch (e) {\n          reject(e);\n        }\n      } else if (typeof geoJson === 'string') {\n        d.loadGeoJson(geoJson, null, resolve);\n      } else {\n        reject(`Impossible to extract features from geoJson: wrong argument type`);\n      }\n    });\n  }\n\n};\n\nDataLayerManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\n\nDataLayerManager = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], DataLayerManager);\nvar AgmDataLayer_1;\nlet layerId$1 = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\n\nlet AgmDataLayer = AgmDataLayer_1 = class AgmDataLayer {\n  constructor(_manager) {\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId$1++).toString();\n    this._subscriptions = [];\n    /**\n     * This event is fired when a feature in the layer is clicked.\n     */\n\n    this.layerClick = new EventEmitter();\n    /**\n     * The geoJson to be displayed\n     */\n\n    this.geoJson = null;\n  }\n\n  ngOnInit() {\n    if (this._addedToManager) {\n      return;\n    }\n\n    this._manager.addDataLayer(this);\n\n    this._addedToManager = true;\n\n    this._addEventListeners();\n  }\n\n  _addEventListeners() {\n    const listeners = [{\n      name: 'click',\n      handler: ev => this.layerClick.emit(ev)\n    }];\n    listeners.forEach(obj => {\n      const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n\n      this._subscriptions.push(os);\n    });\n  }\n  /** @internal */\n\n\n  id() {\n    return this._id;\n  }\n  /** @internal */\n\n\n  toString() {\n    return `AgmDataLayer-${this._id.toString()}`;\n  }\n  /** @internal */\n\n\n  ngOnDestroy() {\n    this._manager.deleteDataLayer(this); // unsubscribe all registered observable subscriptions\n\n\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n  /** @internal */\n\n\n  ngOnChanges(changes) {\n    if (!this._addedToManager) {\n      return;\n    }\n\n    var geoJsonChange = changes['geoJson'];\n\n    if (geoJsonChange) {\n      this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n    }\n\n    let dataOptions = {};\n\n    AgmDataLayer_1._dataOptionsAttributes.forEach(k => dataOptions[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : this[k]);\n\n    this._manager.setDataOptions(this, dataOptions);\n  }\n\n};\nAgmDataLayer._dataOptionsAttributes = ['style'];\n\nAgmDataLayer.ctorParameters = () => [{\n  type: DataLayerManager\n}];\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmDataLayer.prototype, \"layerClick\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmDataLayer.prototype, \"geoJson\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Function)], AgmDataLayer.prototype, \"style\", void 0);\n\nAgmDataLayer = AgmDataLayer_1 = __decorate([Directive({\n  selector: 'agm-data-layer'\n}), __metadata(\"design:paramtypes\", [DataLayerManager])], AgmDataLayer);\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\n\nclass FitBoundsAccessor {}\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\n\n\nlet FitBoundsService = class FitBoundsService {\n  constructor(loader) {\n    this._boundsChangeSampleTime$ = new BehaviorSubject(200);\n    this._includeInBounds$ = new BehaviorSubject(new Map());\n    this.bounds$ = from(loader.load()).pipe(flatMap(() => this._includeInBounds$), sample(this._boundsChangeSampleTime$.pipe(switchMap(time => timer(0, time)))), map(includeInBounds => this._generateBounds(includeInBounds)), shareReplay(1));\n  }\n\n  _generateBounds(includeInBounds) {\n    const bounds = new google.maps.LatLngBounds();\n    includeInBounds.forEach(b => bounds.extend(b));\n    return bounds;\n  }\n\n  addToBounds(latLng) {\n    const id = this._createIdentifier(latLng);\n\n    if (this._includeInBounds$.value.has(id)) {\n      return;\n    }\n\n    const map = this._includeInBounds$.value;\n    map.set(id, latLng);\n\n    this._includeInBounds$.next(map);\n  }\n\n  removeFromBounds(latLng) {\n    const map = this._includeInBounds$.value;\n    map.delete(this._createIdentifier(latLng));\n\n    this._includeInBounds$.next(map);\n  }\n\n  changeFitBoundsChangeSampleTime(timeMs) {\n    this._boundsChangeSampleTime$.next(timeMs);\n  }\n\n  getBounds$() {\n    return this.bounds$;\n  }\n\n  _createIdentifier(latLng) {\n    return `${latLng.lat}+${latLng.lng}`;\n  }\n\n};\n\nFitBoundsService.ctorParameters = () => [{\n  type: MapsAPILoader\n}];\n\nFitBoundsService = __decorate([Injectable(), __metadata(\"design:paramtypes\", [MapsAPILoader])], FitBoundsService);\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\n\nlet AgmFitBounds = class AgmFitBounds {\n  constructor(_fitBoundsAccessor, _fitBoundsService) {\n    this._fitBoundsAccessor = _fitBoundsAccessor;\n    this._fitBoundsService = _fitBoundsService;\n    /**\n     * If the value is true, the element gets added to the bounds of the map.\n     * Default: true.\n     */\n\n    this.agmFitBounds = true;\n    this._destroyed$ = new Subject();\n    this._latestFitBoundsDetails = null;\n  }\n  /**\n   * @internal\n   */\n\n\n  ngOnChanges() {\n    this._updateBounds();\n  }\n  /**\n   * @internal\n   */\n\n\n  ngOnInit() {\n    this._fitBoundsAccessor.getFitBoundsDetails$().pipe(distinctUntilChanged((x, y) => x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng), takeUntil(this._destroyed$)).subscribe(details => this._updateBounds(details));\n  }\n  /*\n   Either the location changed, or visible status changed.\n   Possible state changes are\n   invisible -> visible\n   visible -> invisible\n   visible -> visible (new location)\n  */\n\n\n  _updateBounds(newFitBoundsDetails) {\n    // either visibility will change, or location, so remove the old one anyway\n    if (this._latestFitBoundsDetails) {\n      this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng); // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n      // true -> false -> true, in which case we still need old value cached here\n\n    }\n\n    if (newFitBoundsDetails) {\n      this._latestFitBoundsDetails = newFitBoundsDetails;\n    }\n\n    if (!this._latestFitBoundsDetails) {\n      return;\n    }\n\n    if (this.agmFitBounds === true) {\n      this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  ngOnDestroy() {\n    this._destroyed$.next();\n\n    this._destroyed$.complete();\n\n    if (this._latestFitBoundsDetails !== null) {\n      this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n    }\n  }\n\n};\n\nAgmFitBounds.ctorParameters = () => [{\n  type: FitBoundsAccessor,\n  decorators: [{\n    type: Self\n  }]\n}, {\n  type: FitBoundsService\n}];\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmFitBounds.prototype, \"agmFitBounds\", void 0);\n\nAgmFitBounds = __decorate([Directive({\n  selector: '[agmFitBounds]'\n}), __param(0, Self()), __metadata(\"design:paramtypes\", [FitBoundsAccessor, FitBoundsService])], AgmFitBounds);\nlet MarkerManager = class MarkerManager {\n  constructor(_mapsWrapper, _zone) {\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._markers = new Map();\n  }\n\n  convertAnimation(uiAnim) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (uiAnim === null) {\n        return null;\n      } else {\n        return this._mapsWrapper.getNativeMap().then(() => google.maps.Animation[uiAnim]);\n      }\n    });\n  }\n\n  deleteMarker(marker) {\n    const m = this._markers.get(marker);\n\n    if (m == null) {\n      // marker already deleted\n      return Promise.resolve();\n    }\n\n    return m.then(m => {\n      return this._zone.run(() => {\n        m.setMap(null);\n\n        this._markers.delete(marker);\n      });\n    });\n  }\n\n  updateMarkerPosition(marker) {\n    return this._markers.get(marker).then(m => m.setPosition({\n      lat: marker.latitude,\n      lng: marker.longitude\n    }));\n  }\n\n  updateTitle(marker) {\n    return this._markers.get(marker).then(m => m.setTitle(marker.title));\n  }\n\n  updateLabel(marker) {\n    return this._markers.get(marker).then(m => {\n      m.setLabel(marker.label);\n    });\n  }\n\n  updateDraggable(marker) {\n    return this._markers.get(marker).then(m => m.setDraggable(marker.draggable));\n  }\n\n  updateIcon(marker) {\n    return this._markers.get(marker).then(m => m.setIcon(marker.iconUrl));\n  }\n\n  updateOpacity(marker) {\n    return this._markers.get(marker).then(m => m.setOpacity(marker.opacity));\n  }\n\n  updateVisible(marker) {\n    return this._markers.get(marker).then(m => m.setVisible(marker.visible));\n  }\n\n  updateZIndex(marker) {\n    return this._markers.get(marker).then(m => m.setZIndex(marker.zIndex));\n  }\n\n  updateClickable(marker) {\n    return this._markers.get(marker).then(m => m.setClickable(marker.clickable));\n  }\n\n  updateAnimation(marker) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const m = yield this._markers.get(marker);\n      m.setAnimation(yield this.convertAnimation(marker.animation));\n    });\n  }\n\n  addMarker(marker) {\n    const markerPromise = new Promise(resolve => __awaiter(this, void 0, void 0, function* () {\n      return this._mapsWrapper.createMarker({\n        position: {\n          lat: marker.latitude,\n          lng: marker.longitude\n        },\n        label: marker.label,\n        draggable: marker.draggable,\n        icon: marker.iconUrl,\n        opacity: marker.opacity,\n        visible: marker.visible,\n        zIndex: marker.zIndex,\n        title: marker.title,\n        clickable: marker.clickable,\n        animation: yield this.convertAnimation(marker.animation)\n      }).then(resolve);\n    }));\n\n    this._markers.set(marker, markerPromise);\n  }\n\n  getNativeMarker(marker) {\n    return this._markers.get(marker);\n  }\n\n  createEventObservable(eventName, marker) {\n    return new Observable(observer => {\n      this._markers.get(marker).then(m => {\n        m.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n\n};\n\nMarkerManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\n\nMarkerManager = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], MarkerManager);\nlet InfoWindowManager = class InfoWindowManager {\n  constructor(_mapsWrapper, _zone, _markerManager) {\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._markerManager = _markerManager;\n    this._infoWindows = new Map();\n  }\n\n  deleteInfoWindow(infoWindow) {\n    const iWindow = this._infoWindows.get(infoWindow);\n\n    if (iWindow == null) {\n      // info window already deleted\n      return Promise.resolve();\n    }\n\n    return iWindow.then(i => {\n      return this._zone.run(() => {\n        i.close();\n\n        this._infoWindows.delete(infoWindow);\n      });\n    });\n  }\n\n  setPosition(infoWindow) {\n    return this._infoWindows.get(infoWindow).then(i => i.setPosition({\n      lat: infoWindow.latitude,\n      lng: infoWindow.longitude\n    }));\n  }\n\n  setZIndex(infoWindow) {\n    return this._infoWindows.get(infoWindow).then(i => i.setZIndex(infoWindow.zIndex));\n  }\n\n  open(infoWindow) {\n    return this._infoWindows.get(infoWindow).then(w => {\n      if (infoWindow.hostMarker != null) {\n        return this._markerManager.getNativeMarker(infoWindow.hostMarker).then(marker => {\n          return this._mapsWrapper.getNativeMap().then(map => w.open(map, marker));\n        });\n      }\n\n      return this._mapsWrapper.getNativeMap().then(map => w.open(map));\n    });\n  }\n\n  close(infoWindow) {\n    return this._infoWindows.get(infoWindow).then(w => w.close());\n  }\n\n  setOptions(infoWindow, options) {\n    return this._infoWindows.get(infoWindow).then(i => i.setOptions(options));\n  }\n\n  addInfoWindow(infoWindow) {\n    const options = {\n      content: infoWindow.content,\n      maxWidth: infoWindow.maxWidth,\n      zIndex: infoWindow.zIndex,\n      disableAutoPan: infoWindow.disableAutoPan\n    };\n\n    if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n      options.position = {\n        lat: infoWindow.latitude,\n        lng: infoWindow.longitude\n      };\n    }\n\n    const infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n\n    this._infoWindows.set(infoWindow, infoWindowPromise);\n  }\n  /**\n   * Creates a Google Maps event listener for the given InfoWindow as an Observable\n   */\n\n\n  createEventObservable(eventName, infoWindow) {\n    return new Observable(observer => {\n      this._infoWindows.get(infoWindow).then(i => {\n        i.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n\n};\n\nInfoWindowManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}, {\n  type: MarkerManager\n}];\n\nInfoWindowManager = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone, MarkerManager])], InfoWindowManager);\nvar AgmInfoWindow_1;\nlet infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\n\nlet AgmInfoWindow = AgmInfoWindow_1 = class AgmInfoWindow {\n  constructor(_infoWindowManager, _el) {\n    this._infoWindowManager = _infoWindowManager;\n    this._el = _el;\n    /**\n     * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n     */\n\n    this.isOpen = false;\n    /**\n     * Emits an event when the info window is closed.\n     */\n\n    this.infoWindowClose = new EventEmitter();\n    this._infoWindowAddedToManager = false;\n    this._id = (infoWindowId++).toString();\n  }\n\n  ngOnInit() {\n    this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n\n    this._infoWindowManager.addInfoWindow(this);\n\n    this._infoWindowAddedToManager = true;\n\n    this._updateOpenState();\n\n    this._registerEventListeners();\n  }\n  /** @internal */\n\n\n  ngOnChanges(changes) {\n    if (!this._infoWindowAddedToManager) {\n      return;\n    }\n\n    if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' && typeof this.longitude === 'number') {\n      this._infoWindowManager.setPosition(this);\n    }\n\n    if (changes['zIndex']) {\n      this._infoWindowManager.setZIndex(this);\n    }\n\n    if (changes['isOpen']) {\n      this._updateOpenState();\n    }\n\n    this._setInfoWindowOptions(changes);\n  }\n\n  _registerEventListeners() {\n    this._infoWindowManager.createEventObservable('closeclick', this).subscribe(() => {\n      this.isOpen = false;\n      this.infoWindowClose.emit();\n    });\n  }\n\n  _updateOpenState() {\n    this.isOpen ? this.open() : this.close();\n  }\n\n  _setInfoWindowOptions(changes) {\n    let options = {};\n    let optionKeys = Object.keys(changes).filter(k => AgmInfoWindow_1._infoWindowOptionsInputs.indexOf(k) !== -1);\n    optionKeys.forEach(k => {\n      options[k] = changes[k].currentValue;\n    });\n\n    this._infoWindowManager.setOptions(this, options);\n  }\n  /**\n   * Opens the info window.\n   */\n\n\n  open() {\n    return this._infoWindowManager.open(this);\n  }\n  /**\n   * Closes the info window.\n   */\n\n\n  close() {\n    return this._infoWindowManager.close(this).then(() => {\n      this.infoWindowClose.emit();\n    });\n  }\n  /** @internal */\n\n\n  id() {\n    return this._id;\n  }\n  /** @internal */\n\n\n  toString() {\n    return 'AgmInfoWindow-' + this._id.toString();\n  }\n  /** @internal */\n\n\n  ngOnDestroy() {\n    this._infoWindowManager.deleteInfoWindow(this);\n  }\n\n};\nAgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\n\nAgmInfoWindow.ctorParameters = () => [{\n  type: InfoWindowManager\n}, {\n  type: ElementRef\n}];\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmInfoWindow.prototype, \"latitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmInfoWindow.prototype, \"longitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmInfoWindow.prototype, \"disableAutoPan\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmInfoWindow.prototype, \"zIndex\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmInfoWindow.prototype, \"maxWidth\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmInfoWindow.prototype, \"isOpen\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmInfoWindow.prototype, \"infoWindowClose\", void 0);\n\nAgmInfoWindow = AgmInfoWindow_1 = __decorate([Component({\n  selector: 'agm-info-window',\n  template: `<div class='agm-info-window-content'>\n      <ng-content></ng-content>\n    </div>\n  `\n}), __metadata(\"design:paramtypes\", [InfoWindowManager, ElementRef])], AgmInfoWindow);\n/**\n * Manages all KML Layers for a Google Map instance.\n */\n\nlet KmlLayerManager = class KmlLayerManager {\n  constructor(_wrapper, _zone) {\n    this._wrapper = _wrapper;\n    this._zone = _zone;\n    this._layers = new Map();\n  }\n  /**\n   * Adds a new KML Layer to the map.\n   */\n\n\n  addKmlLayer(layer) {\n    const newLayer = this._wrapper.getNativeMap().then(m => {\n      return new google.maps.KmlLayer({\n        clickable: layer.clickable,\n        map: m,\n        preserveViewport: layer.preserveViewport,\n        screenOverlays: layer.screenOverlays,\n        suppressInfoWindows: layer.suppressInfoWindows,\n        url: layer.url,\n        zIndex: layer.zIndex\n      });\n    });\n\n    this._layers.set(layer, newLayer);\n  }\n\n  setOptions(layer, options) {\n    this._layers.get(layer).then(l => l.setOptions(options));\n  }\n\n  deleteKmlLayer(layer) {\n    this._layers.get(layer).then(l => {\n      l.setMap(null);\n\n      this._layers.delete(layer);\n    });\n  }\n  /**\n   * Creates a Google Maps event listener for the given KmlLayer as an Observable\n   */\n\n\n  createEventObservable(eventName, layer) {\n    return new Observable(observer => {\n      this._layers.get(layer).then(m => {\n        m.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n\n};\n\nKmlLayerManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\n\nKmlLayerManager = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], KmlLayerManager);\nvar AgmKmlLayer_1;\nlet layerId$2 = 0;\nlet AgmKmlLayer = AgmKmlLayer_1 = class AgmKmlLayer {\n  constructor(_manager) {\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId$2++).toString();\n    this._subscriptions = [];\n    /**\n     * If true, the layer receives mouse events. Default value is true.\n     */\n\n    this.clickable = true;\n    /**\n     * By default, the input map is centered and zoomed to the bounding box of the contents of the\n     * layer.\n     * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n     * were never set.\n     */\n\n    this.preserveViewport = false;\n    /**\n     * Whether to render the screen overlays. Default true.\n     */\n\n    this.screenOverlays = true;\n    /**\n     * Suppress the rendering of info windows when layer features are clicked.\n     */\n\n    this.suppressInfoWindows = false;\n    /**\n     * The URL of the KML document to display.\n     */\n\n    this.url = null;\n    /**\n     * The z-index of the layer.\n     */\n\n    this.zIndex = null;\n    /**\n     * This event is fired when a feature in the layer is clicked.\n     */\n\n    this.layerClick = new EventEmitter();\n    /**\n     * This event is fired when the KML layers default viewport has changed.\n     */\n\n    this.defaultViewportChange = new EventEmitter();\n    /**\n     * This event is fired when the KML layer has finished loading.\n     * At this point it is safe to read the status property to determine if the layer loaded\n     * successfully.\n     */\n\n    this.statusChange = new EventEmitter();\n  }\n\n  ngOnInit() {\n    if (this._addedToManager) {\n      return;\n    }\n\n    this._manager.addKmlLayer(this);\n\n    this._addedToManager = true;\n\n    this._addEventListeners();\n  }\n\n  ngOnChanges(changes) {\n    if (!this._addedToManager) {\n      return;\n    }\n\n    this._updatePolygonOptions(changes);\n  }\n\n  _updatePolygonOptions(changes) {\n    const options = Object.keys(changes).filter(k => AgmKmlLayer_1._kmlLayerOptions.indexOf(k) !== -1).reduce((obj, k) => {\n      obj[k] = changes[k].currentValue;\n      return obj;\n    }, {});\n\n    if (Object.keys(options).length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  _addEventListeners() {\n    const listeners = [{\n      name: 'click',\n      handler: ev => this.layerClick.emit(ev)\n    }, {\n      name: 'defaultviewport_changed',\n      handler: () => this.defaultViewportChange.emit()\n    }, {\n      name: 'status_changed',\n      handler: () => this.statusChange.emit()\n    }];\n    listeners.forEach(obj => {\n      const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n\n      this._subscriptions.push(os);\n    });\n  }\n  /** @internal */\n\n\n  id() {\n    return this._id;\n  }\n  /** @internal */\n\n\n  toString() {\n    return `AgmKmlLayer-${this._id.toString()}`;\n  }\n  /** @internal */\n\n\n  ngOnDestroy() {\n    this._manager.deleteKmlLayer(this); // unsubscribe all registered observable subscriptions\n\n\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n\n};\nAgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\n\nAgmKmlLayer.ctorParameters = () => [{\n  type: KmlLayerManager\n}];\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmKmlLayer.prototype, \"clickable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmKmlLayer.prototype, \"preserveViewport\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmKmlLayer.prototype, \"screenOverlays\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmKmlLayer.prototype, \"suppressInfoWindows\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmKmlLayer.prototype, \"url\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmKmlLayer.prototype, \"zIndex\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmKmlLayer.prototype, \"layerClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmKmlLayer.prototype, \"defaultViewportChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmKmlLayer.prototype, \"statusChange\", void 0);\n\nAgmKmlLayer = AgmKmlLayer_1 = __decorate([Directive({\n  selector: 'agm-kml-layer'\n}), __metadata(\"design:paramtypes\", [KmlLayerManager])], AgmKmlLayer);\n\nfunction createMVCEventObservable(array) {\n  const eventNames = ['insert_at', 'remove_at', 'set_at'];\n  return fromEventPattern(handler => eventNames.map(evName => array.addListener(evName, (index, previous) => handler.apply(array, [{\n    'newArr': array.getArray(),\n    evName,\n    index,\n    previous\n  }]))), (_handler, evListeners) => evListeners.forEach(evListener => evListener.remove()));\n}\n\nclass MvcArrayMock {\n  constructor() {\n    this.vals = [];\n    this.listeners = {\n      'remove_at': [],\n      'insert_at': [],\n      'set_at': []\n    };\n  }\n\n  clear() {\n    for (let i = this.vals.length - 1; i >= 0; i--) {\n      this.removeAt(i);\n    }\n  }\n\n  getArray() {\n    return [...this.vals];\n  }\n\n  getAt(i) {\n    return this.vals[i];\n  }\n\n  getLength() {\n    return this.vals.length;\n  }\n\n  insertAt(i, elem) {\n    this.vals.splice(i, 0, elem);\n    this.listeners.insert_at.map(listener => listener(i));\n  }\n\n  pop() {\n    const deleted = this.vals.pop();\n    this.listeners.remove_at.map(listener => listener(this.vals.length, deleted));\n    return deleted;\n  }\n\n  push(elem) {\n    this.vals.push(elem);\n    this.listeners.insert_at.map(listener => listener(this.vals.length - 1));\n    return this.vals.length;\n  }\n\n  removeAt(i) {\n    const deleted = this.vals.splice(i, 1)[0];\n    this.listeners.remove_at.map(listener => listener(i, deleted));\n    return deleted;\n  }\n\n  setAt(i, elem) {\n    const deleted = this.vals[i];\n    this.vals[i] = elem;\n    this.listeners.set_at.map(listener => listener(i, deleted));\n  }\n\n  forEach(callback) {\n    this.vals.forEach(callback);\n  }\n\n  addListener(eventName, handler) {\n    const listenerArr = this.listeners[eventName];\n    listenerArr.push(handler);\n    return {\n      remove: () => {\n        listenerArr.splice(listenerArr.indexOf(handler), 1);\n      }\n    };\n  }\n\n}\n\nlet PolygonManager = class PolygonManager {\n  constructor(_mapsWrapper, _zone) {\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._polygons = new Map();\n  }\n\n  addPolygon(path) {\n    const polygonPromise = this._mapsWrapper.createPolygon({\n      clickable: path.clickable,\n      draggable: path.draggable,\n      editable: path.editable,\n      fillColor: path.fillColor,\n      fillOpacity: path.fillOpacity,\n      geodesic: path.geodesic,\n      paths: path.paths,\n      strokeColor: path.strokeColor,\n      strokeOpacity: path.strokeOpacity,\n      strokeWeight: path.strokeWeight,\n      visible: path.visible,\n      zIndex: path.zIndex\n    });\n\n    this._polygons.set(path, polygonPromise);\n  }\n\n  updatePolygon(polygon) {\n    const m = this._polygons.get(polygon);\n\n    if (m == null) {\n      return Promise.resolve();\n    }\n\n    return m.then(l => this._zone.run(() => {\n      l.setPaths(polygon.paths);\n    }));\n  }\n\n  setPolygonOptions(path, options) {\n    return this._polygons.get(path).then(l => {\n      l.setOptions(options);\n    });\n  }\n\n  deletePolygon(paths) {\n    const m = this._polygons.get(paths);\n\n    if (m == null) {\n      return Promise.resolve();\n    }\n\n    return m.then(l => {\n      return this._zone.run(() => {\n        l.setMap(null);\n\n        this._polygons.delete(paths);\n      });\n    });\n  }\n\n  getPath(polygon) {\n    return this._polygons.get(polygon).then(polygon => polygon.getPath().getArray());\n  }\n\n  getPaths(polygon) {\n    return this._polygons.get(polygon).then(polygon => polygon.getPaths().getArray().map(p => p.getArray()));\n  }\n\n  createEventObservable(eventName, path) {\n    return new Observable(observer => {\n      this._polygons.get(path).then(l => {\n        l.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n\n  createPathEventObservable(agmPolygon) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const polygon = yield this._polygons.get(agmPolygon);\n      const paths = polygon.getPaths();\n      const pathsChanges$ = createMVCEventObservable(paths);\n      return pathsChanges$.pipe(startWith({\n        newArr: paths.getArray()\n      }), // in order to subscribe to them all\n      switchMap(parentMVEvent => merge(... // rest parameter\n      parentMVEvent.newArr.map((chMVC, index) => createMVCEventObservable(chMVC).pipe(map(chMVCEvent => ({\n        parentMVEvent,\n        chMVCEvent,\n        pathIndex: index\n      }))))).pipe(startWith({\n        parentMVEvent,\n        chMVCEvent: null,\n        pathIndex: null\n      }))), // start the merged ob with an event signinifing change to parent\n      skip(1), // skip the manually added event\n      map(({\n        parentMVEvent,\n        chMVCEvent,\n        pathIndex\n      }) => {\n        let retVal;\n\n        if (!chMVCEvent) {\n          retVal = {\n            newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n            eventName: parentMVEvent.evName,\n            index: parentMVEvent.index\n          };\n\n          if (parentMVEvent.previous) {\n            retVal.previous = parentMVEvent.previous.getArray();\n          }\n        } else {\n          retVal = {\n            newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n            pathIndex,\n            eventName: chMVCEvent.evName,\n            index: chMVCEvent.index\n          };\n\n          if (chMVCEvent.previous) {\n            retVal.previous = chMVCEvent.previous;\n          }\n        }\n\n        return retVal;\n      }));\n    });\n  }\n\n};\n\nPolygonManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\n\nPolygonManager = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], PolygonManager);\nvar PolylineManager_1;\nlet PolylineManager = PolylineManager_1 = class PolylineManager {\n  constructor(_mapsWrapper, _zone) {\n    this._mapsWrapper = _mapsWrapper;\n    this._zone = _zone;\n    this._polylines = new Map();\n  }\n\n  static _convertPoints(line) {\n    const path = line._getPoints().map(point => {\n      return {\n        lat: point.latitude,\n        lng: point.longitude\n      };\n    });\n\n    return path;\n  }\n\n  static _convertPath(path) {\n    const symbolPath = google.maps.SymbolPath[path];\n\n    if (typeof symbolPath === 'number') {\n      return symbolPath;\n    } else {\n      return path;\n    }\n  }\n\n  static _convertIcons(line) {\n    const icons = line._getIcons().map(agmIcon => ({\n      fixedRotation: agmIcon.fixedRotation,\n      offset: agmIcon.offset,\n      repeat: agmIcon.repeat,\n      icon: {\n        anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\n        fillColor: agmIcon.fillColor,\n        fillOpacity: agmIcon.fillOpacity,\n        path: PolylineManager_1._convertPath(agmIcon.path),\n        rotation: agmIcon.rotation,\n        scale: agmIcon.scale,\n        strokeColor: agmIcon.strokeColor,\n        strokeOpacity: agmIcon.strokeOpacity,\n        strokeWeight: agmIcon.strokeWeight\n      }\n    })); // prune undefineds;\n\n\n    icons.forEach(icon => {\n      Object.entries(icon).forEach(([key, val]) => {\n        if (typeof val === 'undefined') {\n          delete icon[key];\n        }\n      });\n\n      if (typeof icon.icon.anchor.x === 'undefined' || typeof icon.icon.anchor.y === 'undefined') {\n        delete icon.icon.anchor;\n      }\n    });\n    return icons;\n  }\n\n  addPolyline(line) {\n    const polylinePromise = this._mapsWrapper.getNativeMap().then(() => [PolylineManager_1._convertPoints(line), PolylineManager_1._convertIcons(line)]).then(([path, icons]) => this._mapsWrapper.createPolyline({\n      clickable: line.clickable,\n      draggable: line.draggable,\n      editable: line.editable,\n      geodesic: line.geodesic,\n      strokeColor: line.strokeColor,\n      strokeOpacity: line.strokeOpacity,\n      strokeWeight: line.strokeWeight,\n      visible: line.visible,\n      zIndex: line.zIndex,\n      path: path,\n      icons: icons\n    }));\n\n    this._polylines.set(line, polylinePromise);\n  }\n\n  updatePolylinePoints(line) {\n    const path = PolylineManager_1._convertPoints(line);\n\n    const m = this._polylines.get(line);\n\n    if (m == null) {\n      return Promise.resolve();\n    }\n\n    return m.then(l => {\n      return this._zone.run(() => {\n        l.setPath(path);\n      });\n    });\n  }\n\n  updateIconSequences(line) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._mapsWrapper.getNativeMap();\n\n      const icons = PolylineManager_1._convertIcons(line);\n\n      const m = this._polylines.get(line);\n\n      if (m == null) {\n        return;\n      }\n\n      return m.then(l => this._zone.run(() => l.setOptions({\n        icons: icons\n      })));\n    });\n  }\n\n  setPolylineOptions(line, options) {\n    return this._polylines.get(line).then(l => {\n      l.setOptions(options);\n    });\n  }\n\n  deletePolyline(line) {\n    const m = this._polylines.get(line);\n\n    if (m == null) {\n      return Promise.resolve();\n    }\n\n    return m.then(l => {\n      return this._zone.run(() => {\n        l.setMap(null);\n\n        this._polylines.delete(line);\n      });\n    });\n  }\n\n  getMVCPath(agmPolyline) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const polyline = yield this._polylines.get(agmPolyline);\n      return polyline.getPath();\n    });\n  }\n\n  getPath(agmPolyline) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return (yield this.getMVCPath(agmPolyline)).getArray();\n    });\n  }\n\n  createEventObservable(eventName, line) {\n    return new Observable(observer => {\n      this._polylines.get(line).then(l => {\n        l.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n    });\n  }\n\n  createPathEventObservable(line) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const mvcPath = yield this.getMVCPath(line);\n      return createMVCEventObservable(mvcPath);\n    });\n  }\n\n};\n\nPolylineManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\n\nPolylineManager = PolylineManager_1 = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], PolylineManager);\nlet RectangleManager = class RectangleManager {\n  constructor(_apiWrapper, _zone) {\n    this._apiWrapper = _apiWrapper;\n    this._zone = _zone;\n    this._rectangles = new Map();\n  }\n\n  addRectangle(rectangle) {\n    this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n      bounds: {\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west\n      },\n      clickable: rectangle.clickable,\n      draggable: rectangle.draggable,\n      editable: rectangle.editable,\n      fillColor: rectangle.fillColor,\n      fillOpacity: rectangle.fillOpacity,\n      strokeColor: rectangle.strokeColor,\n      strokeOpacity: rectangle.strokeOpacity,\n      strokePosition: rectangle.strokePosition,\n      strokeWeight: rectangle.strokeWeight,\n      visible: rectangle.visible,\n      zIndex: rectangle.zIndex\n    }));\n  }\n  /**\n   * Removes the given rectangle from the map.\n   */\n\n\n  removeRectangle(rectangle) {\n    return this._rectangles.get(rectangle).then(r => {\n      r.setMap(null);\n\n      this._rectangles.delete(rectangle);\n    });\n  }\n\n  setOptions(rectangle, options) {\n    return this._rectangles.get(rectangle).then(r => r.setOptions(options));\n  }\n\n  getBounds(rectangle) {\n    return this._rectangles.get(rectangle).then(r => r.getBounds());\n  }\n\n  setBounds(rectangle) {\n    return this._rectangles.get(rectangle).then(r => {\n      return r.setBounds({\n        north: rectangle.north,\n        east: rectangle.east,\n        south: rectangle.south,\n        west: rectangle.west\n      });\n    });\n  }\n\n  setEditable(rectangle) {\n    return this._rectangles.get(rectangle).then(r => {\n      return r.setEditable(rectangle.editable);\n    });\n  }\n\n  setDraggable(rectangle) {\n    return this._rectangles.get(rectangle).then(r => {\n      return r.setDraggable(rectangle.draggable);\n    });\n  }\n\n  setVisible(rectangle) {\n    return this._rectangles.get(rectangle).then(r => {\n      return r.setVisible(rectangle.visible);\n    });\n  }\n\n  createEventObservable(eventName, rectangle) {\n    return Observable.create(observer => {\n      let listener = null;\n\n      this._rectangles.get(rectangle).then(r => {\n        listener = r.addListener(eventName, e => this._zone.run(() => observer.next(e)));\n      });\n\n      return () => {\n        if (listener !== null) {\n          listener.remove();\n        }\n      };\n    });\n  }\n\n};\n\nRectangleManager.ctorParameters = () => [{\n  type: GoogleMapsAPIWrapper\n}, {\n  type: NgZone\n}];\n\nRectangleManager = __decorate([Injectable(), __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])], RectangleManager);\nvar AgmMap_1;\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\n\nlet AgmMap = AgmMap_1 = class AgmMap {\n  constructor(_elem, _mapsWrapper, _platformId, _fitBoundsService, _zone) {\n    this._elem = _elem;\n    this._mapsWrapper = _mapsWrapper;\n    this._platformId = _platformId;\n    this._fitBoundsService = _fitBoundsService;\n    this._zone = _zone;\n    /**\n     * The longitude that defines the center of the map.\n     */\n\n    this.longitude = 0;\n    /**\n     * The latitude that defines the center of the map.\n     */\n\n    this.latitude = 0;\n    /**\n     * The zoom level of the map. The default zoom level is 8.\n     */\n\n    this.zoom = 8;\n    /**\n     * Enables/disables if map is draggable.\n     */\n    // tslint:disable-next-line:no-input-rename\n\n    this.draggable = true;\n    /**\n     * Enables/disables zoom and center on double click. Enabled by default.\n     */\n\n    this.disableDoubleClickZoom = false;\n    /**\n     * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n     * value cannot get updated.\n     */\n\n    this.disableDefaultUI = false;\n    /**\n     * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n     */\n\n    this.scrollwheel = true;\n    /**\n     * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n     * enabled by default.\n     */\n\n    this.keyboardShortcuts = true;\n    /**\n     * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n     * modes, these styles will only apply to labels and geometry.\n     */\n\n    this.styles = [];\n    /**\n     * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n     * used to\n     * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n     */\n\n    this.usePanning = false;\n    /**\n     * Sets the viewport to contain the given bounds.\n     * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n     */\n\n    this.fitBounds = false;\n    /**\n     * The initial enabled/disabled state of the Scale control. This is disabled by default.\n     */\n\n    this.scaleControl = false;\n    /**\n     * The initial enabled/disabled state of the Map type control.\n     */\n\n    this.mapTypeControl = false;\n    /**\n     * The initial enabled/disabled state of the Pan control.\n     */\n\n    this.panControl = false;\n    /**\n     * The initial enabled/disabled state of the Rotate control.\n     */\n\n    this.rotateControl = false;\n    /**\n     * The initial enabled/disabled state of the Fullscreen control.\n     */\n\n    this.fullscreenControl = false;\n    /**\n     * The map mapTypeId. Defaults to 'roadmap'.\n     */\n\n    this.mapTypeId = 'roadmap';\n    /**\n     * When false, map icons are not clickable. A map icon represents a point of interest,\n     * also known as a POI. By default map icons are clickable.\n     */\n\n    this.clickableIcons = true;\n    /**\n     * A map icon represents a point of interest, also known as a POI.\n     * When map icons are clickable by default, an info window is displayed.\n     * When this property is set to false, the info window will not be shown but the click event\n     * will still fire\n     */\n\n    this.showDefaultInfoWindow = true;\n    /**\n     * This setting controls how gestures on the map are handled.\n     * Allowed values:\n     * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n     * - 'greedy'      (All touch gestures pan or zoom the map.)\n     * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n     * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n     */\n\n    this.gestureHandling = 'auto';\n    /**\n     * Controls the automatic switching behavior for the angle of incidence of\n     * the map. The only allowed values are 0 and 45. The value 0 causes the map\n     * to always use a 0° overhead view regardless of the zoom level and\n     * viewport. The value 45 causes the tilt angle to automatically switch to\n     * 45 whenever 45° imagery is available for the current zoom level and\n     * viewport, and switch back to 0 whenever 45° imagery is not available\n     * (this is the default behavior). 45° imagery is only available for\n     * satellite and hybrid map types, within some locations, and at some zoom\n     * levels. Note: getTilt returns the current tilt angle, not the value\n     * specified by this option. Because getTilt and this option refer to\n     * different things, do not bind() the tilt property; doing so may yield\n     * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\n     */\n\n    this.tilt = 0;\n    this._observableSubscriptions = [];\n    /**\n     * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n     * marker or infoWindow).\n     */\n\n    this.mapClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n     * on a marker or infoWindow).\n     */\n\n    this.mapRightClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n     * on a marker or infoWindow).\n     */\n\n    this.mapDblClick = new EventEmitter();\n    /**\n     * This event emitter is fired when the map center changes.\n     */\n\n    this.centerChange = new EventEmitter();\n    /**\n     * This event is fired when the viewport bounds have changed.\n     */\n\n    this.boundsChange = new EventEmitter();\n    /**\n     * This event is fired when the mapTypeId property changes.\n     */\n\n    this.mapTypeIdChange = new EventEmitter();\n    /**\n     * This event is fired when the map becomes idle after panning or zooming.\n     */\n\n    this.idle = new EventEmitter();\n    /**\n     * This event is fired when the zoom level has changed.\n     */\n\n    this.zoomChange = new EventEmitter();\n    /**\n     * This event is fired when the google map is fully initialized.\n     * You get the google.maps.Map instance as a result of this EventEmitter.\n     */\n\n    this.mapReady = new EventEmitter();\n    /**\n     * This event is fired when the visible tiles have finished loading.\n     */\n\n    this.tilesLoaded = new EventEmitter();\n  }\n  /** @internal */\n\n\n  ngOnInit() {\n    if (isPlatformServer(this._platformId)) {\n      // The code is running on the server, do nothing\n      return;\n    } // todo: this should be solved with a new component and a viewChild decorator\n\n\n    const container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n\n    this._initMapInstance(container);\n  }\n\n  _initMapInstance(el) {\n    this._mapsWrapper.createMap(el, {\n      center: {\n        lat: this.latitude || 0,\n        lng: this.longitude || 0\n      },\n      zoom: this.zoom,\n      minZoom: this.minZoom,\n      maxZoom: this.maxZoom,\n      controlSize: this.controlSize,\n      disableDefaultUI: this.disableDefaultUI,\n      disableDoubleClickZoom: this.disableDoubleClickZoom,\n      scrollwheel: this.scrollwheel,\n      backgroundColor: this.backgroundColor,\n      draggable: this.draggable,\n      draggableCursor: this.draggableCursor,\n      draggingCursor: this.draggingCursor,\n      keyboardShortcuts: this.keyboardShortcuts,\n      styles: this.styles,\n      zoomControl: this.zoomControl,\n      zoomControlOptions: this.zoomControlOptions,\n      streetViewControl: this.streetViewControl,\n      streetViewControlOptions: this.streetViewControlOptions,\n      scaleControl: this.scaleControl,\n      scaleControlOptions: this.scaleControlOptions,\n      mapTypeControl: this.mapTypeControl,\n      mapTypeControlOptions: this.mapTypeControlOptions,\n      panControl: this.panControl,\n      panControlOptions: this.panControlOptions,\n      rotateControl: this.rotateControl,\n      rotateControlOptions: this.rotateControlOptions,\n      fullscreenControl: this.fullscreenControl,\n      fullscreenControlOptions: this.fullscreenControlOptions,\n      mapTypeId: this.mapTypeId,\n      clickableIcons: this.clickableIcons,\n      gestureHandling: this.gestureHandling,\n      tilt: this.tilt,\n      restriction: this.restriction\n    }).then(() => this._mapsWrapper.getNativeMap()).then(map => this.mapReady.emit(map)); // register event listeners\n\n\n    this._handleMapCenterChange();\n\n    this._handleMapZoomChange();\n\n    this._handleMapMouseEvents();\n\n    this._handleBoundsChange();\n\n    this._handleMapTypeIdChange();\n\n    this._handleTilesLoadedEvent();\n\n    this._handleIdleEvent();\n  }\n  /** @internal */\n\n\n  ngOnDestroy() {\n    // unsubscribe all registered observable subscriptions\n    this._observableSubscriptions.forEach(s => s.unsubscribe()); // remove all listeners from the map instance\n\n\n    this._mapsWrapper.clearInstanceListeners();\n\n    if (this._fitBoundsSubscription) {\n      this._fitBoundsSubscription.unsubscribe();\n    }\n  }\n  /* @internal */\n\n\n  ngOnChanges(changes) {\n    this._updateMapOptionsChanges(changes);\n\n    this._updatePosition(changes);\n  }\n\n  _updateMapOptionsChanges(changes) {\n    let options = {};\n    let optionKeys = Object.keys(changes).filter(k => AgmMap_1._mapOptionsAttributes.indexOf(k) !== -1);\n    optionKeys.forEach(k => {\n      options[k] = changes[k].currentValue;\n    });\n\n    this._mapsWrapper.setMapOptions(options);\n  }\n  /**\n   * Triggers a resize event on the google map instance.\n   * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n   * Returns a promise that gets resolved after the event was triggered.\n   */\n\n\n  triggerResize(recenter = true) {\n    // Note: When we would trigger the resize event and show the map in the same turn (which is a\n    // common case for triggering a resize event), then the resize event would not\n    // work (to show the map), so we trigger the event in a timeout.\n    return new Promise(resolve => {\n      setTimeout(() => {\n        return this._mapsWrapper.triggerMapEvent('resize').then(() => {\n          if (recenter) {\n            this.fitBounds != null ? this._fitBounds() : this._setCenter();\n          }\n\n          resolve();\n        });\n      });\n    });\n  }\n\n  _updatePosition(changes) {\n    if (changes['latitude'] == null && changes['longitude'] == null && !changes['fitBounds']) {\n      // no position update needed\n      return;\n    } // we prefer fitBounds in changes\n\n\n    if ('fitBounds' in changes) {\n      this._fitBounds();\n\n      return;\n    }\n\n    if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n      return;\n    }\n\n    this._setCenter();\n  }\n\n  _setCenter() {\n    let newCenter = {\n      lat: this.latitude,\n      lng: this.longitude\n    };\n\n    if (this.usePanning) {\n      this._mapsWrapper.panTo(newCenter);\n    } else {\n      this._mapsWrapper.setCenter(newCenter);\n    }\n  }\n\n  _fitBounds() {\n    switch (this.fitBounds) {\n      case true:\n        this._subscribeToFitBoundsUpdates();\n\n        break;\n\n      case false:\n        if (this._fitBoundsSubscription) {\n          this._fitBoundsSubscription.unsubscribe();\n        }\n\n        break;\n\n      default:\n        this._updateBounds(this.fitBounds, this.fitBoundsPadding);\n\n    }\n  }\n\n  _subscribeToFitBoundsUpdates() {\n    this._zone.runOutsideAngular(() => {\n      this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(b => {\n        this._zone.run(() => this._updateBounds(b, this.fitBoundsPadding));\n      });\n    });\n  }\n\n  _updateBounds(bounds, padding) {\n    if (!bounds) {\n      return;\n    }\n\n    if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\n      const newBounds = new google.maps.LatLngBounds();\n      newBounds.union(bounds);\n      bounds = newBounds;\n    }\n\n    if (this.usePanning) {\n      this._mapsWrapper.panToBounds(bounds, padding);\n\n      return;\n    }\n\n    this._mapsWrapper.fitBounds(bounds, padding);\n  }\n\n  _isLatLngBoundsLiteral(bounds) {\n    return bounds != null && bounds.extend === undefined;\n  }\n\n  _handleMapCenterChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(() => {\n      this._mapsWrapper.getCenter().then(center => {\n        this.latitude = center.lat();\n        this.longitude = center.lng();\n        this.centerChange.emit({\n          lat: this.latitude,\n          lng: this.longitude\n        });\n      });\n    });\n\n    this._observableSubscriptions.push(s);\n  }\n\n  _handleBoundsChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(() => {\n      this._mapsWrapper.getBounds().then(bounds => {\n        this.boundsChange.emit(bounds);\n      });\n    });\n\n    this._observableSubscriptions.push(s);\n  }\n\n  _handleMapTypeIdChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent('maptypeid_changed').subscribe(() => {\n      this._mapsWrapper.getMapTypeId().then(mapTypeId => {\n        this.mapTypeIdChange.emit(mapTypeId);\n      });\n    });\n\n    this._observableSubscriptions.push(s);\n  }\n\n  _handleMapZoomChange() {\n    const s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(() => {\n      this._mapsWrapper.getZoom().then(z => {\n        this.zoom = z;\n        this.zoomChange.emit(z);\n      });\n    });\n\n    this._observableSubscriptions.push(s);\n  }\n\n  _handleIdleEvent() {\n    const s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(() => {\n      this.idle.emit(void 0);\n    });\n\n    this._observableSubscriptions.push(s);\n  }\n\n  _handleTilesLoadedEvent() {\n    const s = this._mapsWrapper.subscribeToMapEvent('tilesloaded').subscribe(() => this.tilesLoaded.emit(void 0));\n\n    this._observableSubscriptions.push(s);\n  }\n\n  _handleMapMouseEvents() {\n    const events = [{\n      name: 'click',\n      emitter: this.mapClick\n    }, {\n      name: 'rightclick',\n      emitter: this.mapRightClick\n    }, {\n      name: 'dblclick',\n      emitter: this.mapDblClick\n    }];\n    events.forEach(e => {\n      const s = this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(event => {\n        let value = {\n          coords: {\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng()\n          },\n          placeId: event.placeId\n        }; // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\n\n        if (value.placeId && !this.showDefaultInfoWindow) {\n          event.stop();\n        }\n\n        e.emitter.emit(value);\n      });\n\n      this._observableSubscriptions.push(s);\n    });\n  }\n\n};\n/**\n * Map option attributes that can change over time\n */\n\nAgmMap._mapOptionsAttributes = ['disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor', 'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl', 'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom', 'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions', 'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions', 'mapTypeId', 'clickableIcons', 'gestureHandling', 'tilt', 'restriction'];\n\nAgmMap.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: GoogleMapsAPIWrapper\n}, {\n  type: Object,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}, {\n  type: FitBoundsService\n}, {\n  type: NgZone\n}];\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"longitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"latitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"zoom\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMap.prototype, \"minZoom\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMap.prototype, \"maxZoom\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMap.prototype, \"controlSize\", void 0);\n\n__decorate([Input('mapDraggable'), __metadata(\"design:type\", Object)], AgmMap.prototype, \"draggable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"disableDoubleClickZoom\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"disableDefaultUI\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"scrollwheel\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"backgroundColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"draggableCursor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"draggingCursor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"keyboardShortcuts\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmMap.prototype, \"zoomControl\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"zoomControlOptions\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Array)], AgmMap.prototype, \"styles\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"usePanning\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmMap.prototype, \"streetViewControl\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"streetViewControlOptions\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"fitBounds\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"fitBoundsPadding\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"scaleControl\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"scaleControlOptions\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"mapTypeControl\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"mapTypeControlOptions\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"panControl\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"panControlOptions\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"rotateControl\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"rotateControlOptions\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"fullscreenControl\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"fullscreenControlOptions\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"mapTypeId\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"clickableIcons\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"showDefaultInfoWindow\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMap.prototype, \"gestureHandling\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"tilt\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMap.prototype, \"restriction\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapRightClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapDblClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"centerChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"boundsChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapTypeIdChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"idle\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"zoomChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"mapReady\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMap.prototype, \"tilesLoaded\", void 0);\n\nAgmMap = AgmMap_1 = __decorate([Component({\n  selector: 'agm-map',\n  providers: [CircleManager, DataLayerManager, DataLayerManager, FitBoundsService, GoogleMapsAPIWrapper, InfoWindowManager, KmlLayerManager, LayerManager, MarkerManager, PolygonManager, PolylineManager, RectangleManager],\n  host: {\n    // todo: deprecated - we will remove it with the next version\n    '[class.sebm-google-map-container]': 'true'\n  },\n  template: `\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\n              <div class='agm-map-content'>\n                <ng-content></ng-content>\n              </div>\n  `,\n  styles: [`\n    .agm-map-container-inner {\n      width: inherit;\n      height: inherit;\n    }\n    .agm-map-content {\n      display:none;\n    }\n  `]\n}), __param(2, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, GoogleMapsAPIWrapper, Object, FitBoundsService, NgZone])], AgmMap);\nvar AgmMarker_1;\nlet markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\n\nlet AgmMarker = AgmMarker_1 = class AgmMarker {\n  constructor(_markerManager) {\n    this._markerManager = _markerManager;\n    /**\n     * If true, the marker can be dragged. Default value is false.\n     */\n    // tslint:disable-next-line:no-input-rename\n\n    this.draggable = false;\n    /**\n     * If true, the marker is visible\n     */\n\n    this.visible = true;\n    /**\n     * Whether to automatically open the child info window when the marker is clicked.\n     */\n\n    this.openInfoWindow = true;\n    /**\n     * The marker's opacity between 0.0 and 1.0.\n     */\n\n    this.opacity = 1;\n    /**\n     * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n     * front of markers with lower values. By default, markers are displayed according to their\n     * vertical position on screen, with lower markers appearing in front of markers further up the\n     * screen.\n     */\n\n    this.zIndex = 1;\n    /**\n     * If true, the marker can be clicked. Default value is true.\n     */\n    // tslint:disable-next-line:no-input-rename\n\n    this.clickable = true;\n    /**\n     * This event is fired when the marker's animation property changes.\n     *\n     * @memberof AgmMarker\n     */\n\n    this.animationChange = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the marker.\n     */\n\n    this.markerClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks twice on the marker.\n     */\n\n    this.markerDblClick = new EventEmitter();\n    /**\n     * This event is fired when the user rightclicks on the marker.\n     */\n\n    this.markerRightClick = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the marker.\n     */\n\n    this.dragStart = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the marker.\n     */\n\n    this.drag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the marker.\n     */\n\n    this.dragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user mouses over the marker.\n     */\n\n    this.mouseOver = new EventEmitter();\n    /**\n     * This event is fired when the user mouses outside the marker.\n     */\n\n    this.mouseOut = new EventEmitter();\n    /** @internal */\n\n    this.infoWindow = new QueryList();\n    this._markerAddedToManger = false;\n    this._observableSubscriptions = [];\n    this._fitBoundsDetails$ = new ReplaySubject(1);\n    this._id = (markerId++).toString();\n  }\n  /* @internal */\n\n\n  ngAfterContentInit() {\n    this.handleInfoWindowUpdate();\n    this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n  }\n\n  handleInfoWindowUpdate() {\n    if (this.infoWindow.length > 1) {\n      throw new Error('Expected no more than one info window.');\n    }\n\n    this.infoWindow.forEach(marker => {\n      marker.hostMarker = this;\n    });\n  }\n  /** @internal */\n\n\n  ngOnChanges(changes) {\n    if (typeof this.latitude === 'string') {\n      this.latitude = Number(this.latitude);\n    }\n\n    if (typeof this.longitude === 'string') {\n      this.longitude = Number(this.longitude);\n    }\n\n    if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n      return;\n    }\n\n    if (!this._markerAddedToManger) {\n      this._markerManager.addMarker(this);\n\n      this._updateFitBoundsDetails();\n\n      this._markerAddedToManger = true;\n\n      this._addEventListeners();\n\n      return;\n    }\n\n    if (changes['latitude'] || changes['longitude']) {\n      this._markerManager.updateMarkerPosition(this);\n\n      this._updateFitBoundsDetails();\n    }\n\n    if (changes['title']) {\n      this._markerManager.updateTitle(this);\n    }\n\n    if (changes['label']) {\n      this._markerManager.updateLabel(this);\n    }\n\n    if (changes['draggable']) {\n      this._markerManager.updateDraggable(this);\n    }\n\n    if (changes['iconUrl']) {\n      this._markerManager.updateIcon(this);\n    }\n\n    if (changes['opacity']) {\n      this._markerManager.updateOpacity(this);\n    }\n\n    if (changes['visible']) {\n      this._markerManager.updateVisible(this);\n    }\n\n    if (changes['zIndex']) {\n      this._markerManager.updateZIndex(this);\n    }\n\n    if (changes['clickable']) {\n      this._markerManager.updateClickable(this);\n    }\n\n    if (changes['animation']) {\n      this._markerManager.updateAnimation(this);\n    }\n  }\n  /** @internal */\n\n\n  getFitBoundsDetails$() {\n    return this._fitBoundsDetails$.asObservable();\n  }\n\n  _updateFitBoundsDetails() {\n    this._fitBoundsDetails$.next({\n      latLng: {\n        lat: this.latitude,\n        lng: this.longitude\n      }\n    });\n  }\n\n  _addEventListeners() {\n    const cs = this._markerManager.createEventObservable('click', this).subscribe(() => {\n      if (this.openInfoWindow) {\n        this.infoWindow.forEach(infoWindow => infoWindow.open());\n      }\n\n      this.markerClick.emit(this);\n    });\n\n    this._observableSubscriptions.push(cs);\n\n    const dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(() => {\n      this.markerDblClick.emit(null);\n    });\n\n    this._observableSubscriptions.push(dcs);\n\n    const rc = this._markerManager.createEventObservable('rightclick', this).subscribe(() => {\n      this.markerRightClick.emit(null);\n    });\n\n    this._observableSubscriptions.push(rc);\n\n    const ds = this._markerManager.createEventObservable('dragstart', this).subscribe(e => {\n      this.dragStart.emit({\n        coords: {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng()\n        }\n      });\n    });\n\n    this._observableSubscriptions.push(ds);\n\n    const d = this._markerManager.createEventObservable('drag', this).subscribe(e => {\n      this.drag.emit({\n        coords: {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng()\n        }\n      });\n    });\n\n    this._observableSubscriptions.push(d);\n\n    const de = this._markerManager.createEventObservable('dragend', this).subscribe(e => {\n      this.dragEnd.emit({\n        coords: {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng()\n        }\n      });\n    });\n\n    this._observableSubscriptions.push(de);\n\n    const mover = this._markerManager.createEventObservable('mouseover', this).subscribe(e => {\n      this.mouseOver.emit({\n        coords: {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng()\n        }\n      });\n    });\n\n    this._observableSubscriptions.push(mover);\n\n    const mout = this._markerManager.createEventObservable('mouseout', this).subscribe(e => {\n      this.mouseOut.emit({\n        coords: {\n          lat: e.latLng.lat(),\n          lng: e.latLng.lng()\n        }\n      });\n    });\n\n    this._observableSubscriptions.push(mout);\n\n    const anChng = this._markerManager.createEventObservable('animation_changed', this).subscribe(() => {\n      this.animationChange.emit(this.animation);\n    });\n\n    this._observableSubscriptions.push(anChng);\n  }\n  /** @internal */\n\n\n  id() {\n    return this._id;\n  }\n  /** @internal */\n\n\n  toString() {\n    return 'AgmMarker-' + this._id.toString();\n  }\n  /** @internal */\n\n\n  ngOnDestroy() {\n    this._markerManager.deleteMarker(this); // unsubscribe all registered observable subscriptions\n\n\n    this._observableSubscriptions.forEach(s => s.unsubscribe());\n  }\n\n};\n\nAgmMarker.ctorParameters = () => [{\n  type: MarkerManager\n}];\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMarker.prototype, \"latitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmMarker.prototype, \"longitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMarker.prototype, \"title\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"label\", void 0);\n\n__decorate([Input('markerDraggable'), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"draggable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMarker.prototype, \"iconUrl\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"visible\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"openInfoWindow\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"opacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"zIndex\", void 0);\n\n__decorate([Input('markerClickable'), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"clickable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmMarker.prototype, \"animation\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], AgmMarker.prototype, \"animationChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"markerClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"markerDblClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"markerRightClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"dragStart\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"drag\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"dragEnd\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"mouseOver\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmMarker.prototype, \"mouseOut\", void 0);\n\n__decorate([ContentChildren(AgmInfoWindow), __metadata(\"design:type\", QueryList)], AgmMarker.prototype, \"infoWindow\", void 0);\n\nAgmMarker = AgmMarker_1 = __decorate([Directive({\n  selector: 'agm-marker',\n  providers: [{\n    provide: FitBoundsAccessor,\n    useExisting: forwardRef(() => AgmMarker_1)\n  }],\n  inputs: ['latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl', 'openInfoWindow', 'opacity', 'visible', 'zIndex', 'animation'],\n  outputs: ['markerClick', 'dragStart', 'drag', 'dragEnd', 'mouseOver', 'mouseOut']\n}), __metadata(\"design:paramtypes\", [MarkerManager])], AgmMarker);\nvar AgmPolygon_1;\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array<LatLngLiteral> = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\n\nlet AgmPolygon = AgmPolygon_1 = class AgmPolygon {\n  constructor(_polygonManager) {\n    this._polygonManager = _polygonManager;\n    /**\n     * Indicates whether this Polygon handles mouse events. Defaults to true.\n     */\n\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this shape over the map. The geodesic\n     * property defines the mode of dragging. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this shape by dragging the control\n     * points shown at the vertices and on each segment. Defaults to false.\n     */\n\n    this.editable = false;\n    /**\n     * When true, edges of the polygon are interpreted as geodesic and will\n     * follow the curvature of the Earth. When false, edges of the polygon are\n     * rendered as straight lines in screen space. Note that the shape of a\n     * geodesic polygon may appear to change when dragged, as the dimensions\n     * are maintained relative to the surface of the earth. Defaults to false.\n     */\n\n    this.geodesic = false;\n    /**\n     * The ordered sequence of coordinates that designates a closed loop.\n     * Unlike polylines, a polygon may consist of one or more paths.\n     *  As a result, the paths property may specify one or more arrays of\n     * LatLng coordinates. Paths are closed automatically; do not repeat the\n     * first vertex of the path as the last vertex. Simple polygons may be\n     * defined using a single array of LatLngs. More complex polygons may\n     * specify an array of arrays. Any simple arrays are converted into Arrays.\n     * Inserting or removing LatLngs from the Array will automatically update\n     * the polygon on the map.\n     */\n\n    this.paths = [];\n    /**\n     * This event is fired when the DOM click event is fired on the Polygon.\n     */\n\n    this.polyClick = new EventEmitter();\n    /**\n     * This event is fired when the DOM dblclick event is fired on the Polygon.\n     */\n\n    this.polyDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the polygon.\n     */\n\n    this.polyDrag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the polygon.\n     */\n\n    this.polyDragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the polygon.\n     */\n\n    this.polyDragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the Polygon.\n     */\n\n    this.polyMouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the Polygon.\n     */\n\n    this.polyMouseMove = new EventEmitter();\n    /**\n     * This event is fired on Polygon mouseout.\n     */\n\n    this.polyMouseOut = new EventEmitter();\n    /**\n     * This event is fired on Polygon mouseover.\n     */\n\n    this.polyMouseOver = new EventEmitter();\n    /**\n     * This event is fired whe the DOM mouseup event is fired on the Polygon\n     */\n\n    this.polyMouseUp = new EventEmitter();\n    /**\n     * This event is fired when the Polygon is right-clicked on.\n     */\n\n    this.polyRightClick = new EventEmitter();\n    /**\n     * This event is fired after Polygon first path changes.\n     */\n\n    this.polyPathsChange = new EventEmitter();\n    this._polygonAddedToManager = false;\n    this._subscriptions = [];\n  }\n  /** @internal */\n\n\n  ngAfterContentInit() {\n    if (!this._polygonAddedToManager) {\n      this._init();\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (!this._polygonAddedToManager) {\n      this._init();\n\n      return;\n    }\n\n    this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n  }\n\n  _init() {\n    this._polygonManager.addPolygon(this);\n\n    this._polygonAddedToManager = true;\n\n    this._addEventListeners();\n  }\n\n  _addEventListeners() {\n    const handlers = [{\n      name: 'click',\n      handler: ev => this.polyClick.emit(ev)\n    }, {\n      name: 'dblclick',\n      handler: ev => this.polyDblClick.emit(ev)\n    }, {\n      name: 'drag',\n      handler: ev => this.polyDrag.emit(ev)\n    }, {\n      name: 'dragend',\n      handler: ev => this.polyDragEnd.emit(ev)\n    }, {\n      name: 'dragstart',\n      handler: ev => this.polyDragStart.emit(ev)\n    }, {\n      name: 'mousedown',\n      handler: ev => this.polyMouseDown.emit(ev)\n    }, {\n      name: 'mousemove',\n      handler: ev => this.polyMouseMove.emit(ev)\n    }, {\n      name: 'mouseout',\n      handler: ev => this.polyMouseOut.emit(ev)\n    }, {\n      name: 'mouseover',\n      handler: ev => this.polyMouseOver.emit(ev)\n    }, {\n      name: 'mouseup',\n      handler: ev => this.polyMouseUp.emit(ev)\n    }, {\n      name: 'rightclick',\n      handler: ev => this.polyRightClick.emit(ev)\n    }];\n    handlers.forEach(obj => {\n      const os = this._polygonManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n\n      this._subscriptions.push(os);\n    });\n\n    this._polygonManager.createPathEventObservable(this).then(paths$ => {\n      const os = paths$.subscribe(pathEvent => this.polyPathsChange.emit(pathEvent));\n\n      this._subscriptions.push(os);\n    });\n  }\n\n  _updatePolygonOptions(changes) {\n    return Object.keys(changes).filter(k => AgmPolygon_1._polygonOptionsAttributes.indexOf(k) !== -1).reduce((obj, k) => {\n      obj[k] = changes[k].currentValue;\n      return obj;\n    }, {});\n  }\n  /** @internal */\n\n\n  id() {\n    return this._id;\n  }\n  /** @internal */\n\n\n  ngOnDestroy() {\n    this._polygonManager.deletePolygon(this); // unsubscribe all registered observable subscriptions\n\n\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  getPath() {\n    return this._polygonManager.getPath(this);\n  }\n\n  getPaths() {\n    return this._polygonManager.getPaths(this);\n  }\n\n};\nAgmPolygon._polygonOptionsAttributes = ['clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map', 'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable', 'editable', 'visible'];\n\nAgmPolygon.ctorParameters = () => [{\n  type: PolygonManager\n}];\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"clickable\", void 0);\n\n__decorate([Input('polyDraggable'), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"draggable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"editable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolygon.prototype, \"fillColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolygon.prototype, \"fillOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"geodesic\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Array)], AgmPolygon.prototype, \"paths\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolygon.prototype, \"strokeColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolygon.prototype, \"strokeOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolygon.prototype, \"strokeWeight\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmPolygon.prototype, \"visible\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolygon.prototype, \"zIndex\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyDblClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyDrag\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyDragEnd\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyDragStart\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseDown\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseMove\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseOut\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseOver\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyMouseUp\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolygon.prototype, \"polyRightClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], AgmPolygon.prototype, \"polyPathsChange\", void 0);\n\nAgmPolygon = AgmPolygon_1 = __decorate([Directive({\n  selector: 'agm-polygon'\n}), __metadata(\"design:paramtypes\", [PolygonManager])], AgmPolygon);\n/**\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\n * or custom icons either along the entire line, or in a specific part of it.\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\n *\n * ### Example\n * ```html\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\n *          </agm-icon-sequence>\n *      </agm-polyline>\n *    </agm-map>\n * ```\n *\n * @export\n * @class AgmPolylineIcon\n */\n\nlet AgmPolylineIcon = class AgmPolylineIcon {\n  ngOnInit() {\n    if (this.path == null) {\n      throw new Error('Icon Sequence path is required');\n    }\n  }\n\n};\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], AgmPolylineIcon.prototype, \"fixedRotation\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"offset\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"repeat\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"anchorX\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"anchorY\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"fillColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"fillOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"path\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"rotation\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"scale\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolylineIcon.prototype, \"strokeColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"strokeOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylineIcon.prototype, \"strokeWeight\", void 0);\n\nAgmPolylineIcon = __decorate([Directive({\n  selector: 'agm-polyline agm-icon-sequence'\n})], AgmPolylineIcon);\nvar AgmPolylinePoint_1;\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * AgmPolyline}\n */\n\nlet AgmPolylinePoint = AgmPolylinePoint_1 = class AgmPolylinePoint {\n  constructor() {\n    /**\n     * This event emitter gets emitted when the position of the point changed.\n     */\n    this.positionChanged = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    if (changes['latitude'] || changes['longitude']) {\n      const position = {\n        lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\n        lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude\n      };\n      this.positionChanged.emit(position);\n    }\n  }\n  /** @internal */\n\n\n  getFitBoundsDetails$() {\n    return this.positionChanged.pipe(startWith({\n      lat: this.latitude,\n      lng: this.longitude\n    }), map(position => ({\n      latLng: position\n    })));\n  }\n\n};\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylinePoint.prototype, \"latitude\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolylinePoint.prototype, \"longitude\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolylinePoint.prototype, \"positionChanged\", void 0);\n\nAgmPolylinePoint = AgmPolylinePoint_1 = __decorate([Directive({\n  selector: 'agm-polyline-point',\n  providers: [{\n    provide: FitBoundsAccessor,\n    useExisting: forwardRef(() => AgmPolylinePoint_1)\n  }]\n}), __metadata(\"design:paramtypes\", [])], AgmPolylinePoint);\nvar AgmPolyline_1;\nlet polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\n\nlet AgmPolyline = AgmPolyline_1 = class AgmPolyline {\n  constructor(_polylineManager) {\n    this._polylineManager = _polylineManager;\n    /**\n     * Indicates whether this Polyline handles mouse events. Defaults to true.\n     */\n\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this shape over the map. The geodesic property defines the\n     * mode of dragging. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this shape by dragging the control points shown at the\n     * vertices and on each segment. Defaults to false.\n     */\n\n    this.editable = false;\n    /**\n     * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n     * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n     * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n     * are maintained relative to the surface of the earth. Defaults to false.\n     */\n\n    this.geodesic = false;\n    /**\n     * Whether this polyline is visible on the map. Defaults to true.\n     */\n\n    this.visible = true;\n    /**\n     * This event is fired when the DOM click event is fired on the Polyline.\n     */\n\n    this.lineClick = new EventEmitter();\n    /**\n     * This event is fired when the DOM dblclick event is fired on the Polyline.\n     */\n\n    this.lineDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the polyline.\n     */\n\n    this.lineDrag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the polyline.\n     */\n\n    this.lineDragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the polyline.\n     */\n\n    this.lineDragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the Polyline.\n     */\n\n    this.lineMouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the Polyline.\n     */\n\n    this.lineMouseMove = new EventEmitter();\n    /**\n     * This event is fired on Polyline mouseout.\n     */\n\n    this.lineMouseOut = new EventEmitter();\n    /**\n     * This event is fired on Polyline mouseover.\n     */\n\n    this.lineMouseOver = new EventEmitter();\n    /**\n     * This event is fired whe the DOM mouseup event is fired on the Polyline\n     */\n\n    this.lineMouseUp = new EventEmitter();\n    /**\n     * This event is fired when the Polyline is right-clicked on.\n     */\n\n    this.lineRightClick = new EventEmitter();\n    /**\n     * This event is fired after Polyline's path changes.\n     */\n\n    this.polyPathChange = new EventEmitter();\n    this._polylineAddedToManager = false;\n    this._subscriptions = [];\n    this._id = (polylineId++).toString();\n  }\n  /** @internal */\n\n\n  ngAfterContentInit() {\n    if (this.points.length) {\n      this.points.forEach(point => {\n        const s = point.positionChanged.subscribe(() => {\n          this._polylineManager.updatePolylinePoints(this);\n        });\n\n        this._subscriptions.push(s);\n      });\n    }\n\n    if (!this._polylineAddedToManager) {\n      this._init();\n    }\n\n    const pointSub = this.points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\n\n    this._subscriptions.push(pointSub);\n\n    this._polylineManager.updatePolylinePoints(this);\n\n    const iconSub = this.iconSequences.changes.subscribe(() => this._polylineManager.updateIconSequences(this));\n\n    this._subscriptions.push(iconSub);\n  }\n\n  ngOnChanges(changes) {\n    if (!this._polylineAddedToManager) {\n      this._init();\n\n      return;\n    }\n\n    let options = {};\n    const optionKeys = Object.keys(changes).filter(k => AgmPolyline_1._polylineOptionsAttributes.indexOf(k) !== -1);\n    optionKeys.forEach(k => options[k] = changes[k].currentValue);\n\n    this._polylineManager.setPolylineOptions(this, options);\n  }\n\n  getPath() {\n    return this._polylineManager.getPath(this);\n  }\n\n  _init() {\n    this._polylineManager.addPolyline(this);\n\n    this._polylineAddedToManager = true;\n\n    this._addEventListeners();\n  }\n\n  _addEventListeners() {\n    const handlers = [{\n      name: 'click',\n      handler: ev => this.lineClick.emit(ev)\n    }, {\n      name: 'dblclick',\n      handler: ev => this.lineDblClick.emit(ev)\n    }, {\n      name: 'drag',\n      handler: ev => this.lineDrag.emit(ev)\n    }, {\n      name: 'dragend',\n      handler: ev => this.lineDragEnd.emit(ev)\n    }, {\n      name: 'dragstart',\n      handler: ev => this.lineDragStart.emit(ev)\n    }, {\n      name: 'mousedown',\n      handler: ev => this.lineMouseDown.emit(ev)\n    }, {\n      name: 'mousemove',\n      handler: ev => this.lineMouseMove.emit(ev)\n    }, {\n      name: 'mouseout',\n      handler: ev => this.lineMouseOut.emit(ev)\n    }, {\n      name: 'mouseover',\n      handler: ev => this.lineMouseOver.emit(ev)\n    }, {\n      name: 'mouseup',\n      handler: ev => this.lineMouseUp.emit(ev)\n    }, {\n      name: 'rightclick',\n      handler: ev => this.lineRightClick.emit(ev)\n    }];\n    handlers.forEach(obj => {\n      const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n\n      this._subscriptions.push(os);\n    });\n\n    this._polylineManager.createPathEventObservable(this).then(ob$ => {\n      const os = ob$.subscribe(pathEvent => this.polyPathChange.emit(pathEvent));\n\n      this._subscriptions.push(os);\n    });\n  }\n  /** @internal */\n\n\n  _getPoints() {\n    if (this.points) {\n      return this.points.toArray();\n    }\n\n    return [];\n  }\n\n  _getIcons() {\n    if (this.iconSequences) {\n      return this.iconSequences.toArray();\n    }\n\n    return [];\n  }\n  /** @internal */\n\n\n  id() {\n    return this._id;\n  }\n  /** @internal */\n\n\n  ngOnDestroy() {\n    this._polylineManager.deletePolyline(this); // unsubscribe all registered observable subscriptions\n\n\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n\n};\nAgmPolyline._polylineOptionsAttributes = ['draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'zIndex'];\n\nAgmPolyline.ctorParameters = () => [{\n  type: PolylineManager\n}];\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"clickable\", void 0);\n\n__decorate([Input('polylineDraggable'), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"draggable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"editable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"geodesic\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmPolyline.prototype, \"strokeColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolyline.prototype, \"strokeOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolyline.prototype, \"strokeWeight\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"visible\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmPolyline.prototype, \"zIndex\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineDblClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineDrag\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineDragEnd\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineDragStart\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseDown\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseMove\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseOut\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseOver\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineMouseUp\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmPolyline.prototype, \"lineRightClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], AgmPolyline.prototype, \"polyPathChange\", void 0);\n\n__decorate([ContentChildren(AgmPolylinePoint), __metadata(\"design:type\", QueryList)], AgmPolyline.prototype, \"points\", void 0);\n\n__decorate([ContentChildren(AgmPolylineIcon), __metadata(\"design:type\", QueryList)], AgmPolyline.prototype, \"iconSequences\", void 0);\n\nAgmPolyline = AgmPolyline_1 = __decorate([Directive({\n  selector: 'agm-polyline'\n}), __metadata(\"design:paramtypes\", [PolylineManager])], AgmPolyline);\nvar AgmRectangle_1;\nlet AgmRectangle = AgmRectangle_1 = class AgmRectangle {\n  constructor(_manager) {\n    this._manager = _manager;\n    /**\n     * Indicates whether this Rectangle handles mouse events. Defaults to true.\n     */\n\n    this.clickable = true;\n    /**\n     * If set to true, the user can drag this rectangle over the map. Defaults to false.\n     */\n    // tslint:disable-next-line:no-input-rename\n\n    this.draggable = false;\n    /**\n     * If set to true, the user can edit this rectangle by dragging the control points shown at\n     * the center and around the circumference of the rectangle. Defaults to false.\n     */\n\n    this.editable = false;\n    /**\n     * The stroke position. Defaults to CENTER.\n     * This property is not supported on Internet Explorer 8 and earlier.\n     */\n\n    this.strokePosition = 'CENTER';\n    /**\n     * The stroke width in pixels.\n     */\n\n    this.strokeWeight = 0;\n    /**\n     * Whether this rectangle is visible on the map. Defaults to true.\n     */\n\n    this.visible = true;\n    /**\n     * This event is fired when the rectangle's is changed.\n     */\n\n    this.boundsChange = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the rectangle.\n     */\n\n    this.rectangleClick = new EventEmitter();\n    /**\n     * This event emitter gets emitted when the user clicks on the rectangle.\n     */\n\n    this.rectangleDblClick = new EventEmitter();\n    /**\n     * This event is repeatedly fired while the user drags the rectangle.\n     */\n\n    this.drag = new EventEmitter();\n    /**\n     * This event is fired when the user stops dragging the rectangle.\n     */\n\n    this.dragEnd = new EventEmitter();\n    /**\n     * This event is fired when the user starts dragging the rectangle.\n     */\n\n    this.dragStart = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousedown event is fired on the rectangle.\n     */\n\n    this.mouseDown = new EventEmitter();\n    /**\n     * This event is fired when the DOM mousemove event is fired on the rectangle.\n     */\n\n    this.mouseMove = new EventEmitter();\n    /**\n     * This event is fired on rectangle mouseout.\n     */\n\n    this.mouseOut = new EventEmitter();\n    /**\n     * This event is fired on rectangle mouseover.\n     */\n\n    this.mouseOver = new EventEmitter();\n    /**\n     * This event is fired when the DOM mouseup event is fired on the rectangle.\n     */\n\n    this.mouseUp = new EventEmitter();\n    /**\n     * This event is fired when the rectangle is right-clicked on.\n     */\n\n    this.rightClick = new EventEmitter();\n    this._rectangleAddedToManager = false;\n    this._eventSubscriptions = [];\n  }\n  /** @internal */\n\n\n  ngOnInit() {\n    this._manager.addRectangle(this);\n\n    this._rectangleAddedToManager = true;\n\n    this._registerEventListeners();\n  }\n  /** @internal */\n\n\n  ngOnChanges(changes) {\n    if (!this._rectangleAddedToManager) {\n      return;\n    }\n\n    if (changes['north'] || changes['east'] || changes['south'] || changes['west']) {\n      this._manager.setBounds(this);\n    }\n\n    if (changes['editable']) {\n      this._manager.setEditable(this);\n    }\n\n    if (changes['draggable']) {\n      this._manager.setDraggable(this);\n    }\n\n    if (changes['visible']) {\n      this._manager.setVisible(this);\n    }\n\n    this._updateRectangleOptionsChanges(changes);\n  }\n\n  _updateRectangleOptionsChanges(changes) {\n    let options = {};\n    let optionKeys = Object.keys(changes).filter(k => AgmRectangle_1._mapOptions.indexOf(k) !== -1);\n    optionKeys.forEach(k => {\n      options[k] = changes[k].currentValue;\n    });\n\n    if (optionKeys.length > 0) {\n      this._manager.setOptions(this, options);\n    }\n  }\n\n  _registerEventListeners() {\n    let events = new Map();\n    events.set('bounds_changed', this.boundsChange);\n    events.set('click', this.rectangleClick);\n    events.set('dblclick', this.rectangleDblClick);\n    events.set('drag', this.drag);\n    events.set('dragend', this.dragEnd);\n    events.set('dragStart', this.dragStart);\n    events.set('mousedown', this.mouseDown);\n    events.set('mousemove', this.mouseMove);\n    events.set('mouseout', this.mouseOut);\n    events.set('mouseover', this.mouseOver);\n    events.set('mouseup', this.mouseUp);\n    events.set('rightclick', this.rightClick);\n    events.forEach((eventEmitter, eventName) => {\n      this._eventSubscriptions.push(this._manager.createEventObservable(eventName, this).subscribe(value => {\n        switch (eventName) {\n          case 'bounds_changed':\n            this._manager.getBounds(this).then(bounds => eventEmitter.emit({\n              north: bounds.getNorthEast().lat(),\n              east: bounds.getNorthEast().lng(),\n              south: bounds.getSouthWest().lat(),\n              west: bounds.getSouthWest().lng()\n            }));\n\n            break;\n\n          default:\n            eventEmitter.emit({\n              coords: {\n                lat: value.latLng.lat(),\n                lng: value.latLng.lng()\n              }\n            });\n        }\n      }));\n    });\n  }\n  /** @internal */\n\n\n  ngOnDestroy() {\n    this._eventSubscriptions.forEach(function (s) {\n      s.unsubscribe();\n    });\n\n    this._eventSubscriptions = null;\n\n    this._manager.removeRectangle(this);\n  }\n  /**\n   * Gets the LatLngBounds of this Rectangle.\n   */\n\n\n  getBounds() {\n    return this._manager.getBounds(this);\n  }\n\n};\nAgmRectangle._mapOptions = ['fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight', 'visible', 'zIndex', 'clickable'];\n\nAgmRectangle.ctorParameters = () => [{\n  type: RectangleManager\n}];\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"north\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"east\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"south\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"west\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"clickable\", void 0);\n\n__decorate([Input('rectangleDraggable'), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"draggable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"editable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmRectangle.prototype, \"fillColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"fillOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmRectangle.prototype, \"strokeColor\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"strokeOpacity\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], AgmRectangle.prototype, \"strokePosition\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"strokeWeight\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmRectangle.prototype, \"visible\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], AgmRectangle.prototype, \"zIndex\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"boundsChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"rectangleClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"rectangleDblClick\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"drag\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"dragEnd\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"dragStart\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseDown\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseMove\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseOut\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseOver\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"mouseUp\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], AgmRectangle.prototype, \"rightClick\", void 0);\n\nAgmRectangle = AgmRectangle_1 = __decorate([Directive({\n  selector: 'agm-rectangle'\n}), __metadata(\"design:paramtypes\", [RectangleManager])], AgmRectangle);\nlet layerId$3 = 0;\n/*\n * This directive adds a transit layer to a google map instance\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\n * */\n\nlet AgmTransitLayer = class AgmTransitLayer {\n  constructor(_manager) {\n    this._manager = _manager;\n    this._addedToManager = false;\n    this._id = (layerId$3++).toString();\n    /**\n     * Hide/show transit layer\n     */\n\n    this.visible = true;\n  }\n\n  ngOnInit() {\n    if (this._addedToManager) {\n      return;\n    }\n\n    this._manager.addTransitLayer(this, {\n      visible: this.visible\n    });\n\n    this._addedToManager = true;\n  }\n\n  ngOnChanges(changes) {\n    if (!this._addedToManager) {\n      return;\n    }\n\n    if (changes['visible'] != null) {\n      this._manager.toggleLayerVisibility(this, {\n        visible: changes['visible'].currentValue\n      });\n    }\n  }\n  /** @internal */\n\n\n  id() {\n    return this._id;\n  }\n  /** @internal */\n\n\n  toString() {\n    return `AgmTransitLayer-${this._id.toString()}`;\n  }\n  /** @internal */\n\n\n  ngOnDestroy() {\n    this._manager.deleteLayer(this);\n  }\n\n};\n\nAgmTransitLayer.ctorParameters = () => [{\n  type: LayerManager\n}];\n\n__decorate([Input(), __metadata(\"design:type\", Object)], AgmTransitLayer.prototype, \"visible\", void 0);\n\nAgmTransitLayer = __decorate([Directive({\n  selector: 'agm-transit-layer'\n}), __metadata(\"design:paramtypes\", [LayerManager])], AgmTransitLayer);\nvar google$1;\nvar SymbolPath;\n\n(function (SymbolPath) {\n  SymbolPath[SymbolPath[\"BACKWARD_CLOSED_ARROW\"] = 3] = \"BACKWARD_CLOSED_ARROW\";\n  SymbolPath[SymbolPath[\"BACKWARD_OPEN_ARROW\"] = 4] = \"BACKWARD_OPEN_ARROW\";\n  SymbolPath[SymbolPath[\"CIRCLE\"] = 0] = \"CIRCLE\";\n  SymbolPath[SymbolPath[\"FORWARD_CLOSED_ARROW\"] = 1] = \"FORWARD_CLOSED_ARROW\";\n  SymbolPath[SymbolPath[\"FORWARD_OPEN_ARROW\"] = 2] = \"FORWARD_OPEN_ARROW\";\n})(SymbolPath || (SymbolPath = {}));\n/**\n * Identifiers used to specify the placement of controls on the map. Controls are\n * positioned relative to other controls in the same layout position. Controls that\n * are added first are positioned closer to the edge of the map.\n */\n\n\nvar ControlPosition;\n\n(function (ControlPosition) {\n  ControlPosition[ControlPosition[\"RIGHT_BOTTOM\"] = 0] = \"RIGHT_BOTTOM\";\n  ControlPosition[ControlPosition[\"TOP_LEFT\"] = 1] = \"TOP_LEFT\";\n  ControlPosition[ControlPosition[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n  ControlPosition[ControlPosition[\"TOP_RIGHT\"] = 3] = \"TOP_RIGHT\";\n  ControlPosition[ControlPosition[\"LEFT_CENTER\"] = 4] = \"LEFT_CENTER\";\n  ControlPosition[ControlPosition[\"LEFT_TOP\"] = 5] = \"LEFT_TOP\";\n  ControlPosition[ControlPosition[\"LEFT_BOTTOM\"] = 6] = \"LEFT_BOTTOM\";\n  ControlPosition[ControlPosition[\"RIGHT_TOP\"] = 7] = \"RIGHT_TOP\";\n  ControlPosition[ControlPosition[\"RIGHT_CENTER\"] = 8] = \"RIGHT_CENTER\";\n  ControlPosition[ControlPosition[\"BOTTOM_RIGHT\"] = 9] = \"BOTTOM_RIGHT\";\n  ControlPosition[ControlPosition[\"BOTTOM_LEFT\"] = 10] = \"BOTTOM_LEFT\";\n  ControlPosition[ControlPosition[\"BOTTOM_CENTER\"] = 11] = \"BOTTOM_CENTER\";\n})(ControlPosition || (ControlPosition = {}));\n\nvar MapTypeId;\n\n(function (MapTypeId) {\n  /** This map type displays a transparent layer of major streets on satellite images. */\n  MapTypeId[MapTypeId[\"HYBRID\"] = 0] = \"HYBRID\";\n  /** This map type displays a normal street map. */\n\n  MapTypeId[MapTypeId[\"ROADMAP\"] = 1] = \"ROADMAP\";\n  /** This map type displays satellite images. */\n\n  MapTypeId[MapTypeId[\"SATELLITE\"] = 2] = \"SATELLITE\";\n  /** This map type displays maps with physical features such as terrain and vegetation. */\n\n  MapTypeId[MapTypeId[\"TERRAIN\"] = 3] = \"TERRAIN\";\n})(MapTypeId || (MapTypeId = {}));\n\nvar MapTypeControlStyle;\n\n(function (MapTypeControlStyle) {\n  MapTypeControlStyle[MapTypeControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n  MapTypeControlStyle[MapTypeControlStyle[\"DROPDOWN_MENU\"] = 2] = \"DROPDOWN_MENU\";\n  MapTypeControlStyle[MapTypeControlStyle[\"HORIZONTAL_BAR\"] = 1] = \"HORIZONTAL_BAR\";\n})(MapTypeControlStyle || (MapTypeControlStyle = {}));\n\nvar ScaleControlStyle;\n\n(function (ScaleControlStyle) {\n  ScaleControlStyle[ScaleControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(ScaleControlStyle || (ScaleControlStyle = {}));\n\nvar ZoomControlStyle;\n\n(function (ZoomControlStyle) {\n  ZoomControlStyle[ZoomControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n  ZoomControlStyle[ZoomControlStyle[\"LARGE\"] = 1] = \"LARGE\";\n  ZoomControlStyle[ZoomControlStyle[\"SMALL\"] = 2] = \"SMALL\";\n})(ZoomControlStyle || (ZoomControlStyle = {}));\n\nvar GeocoderLocationType;\n\n(function (GeocoderLocationType) {\n  GeocoderLocationType[\"APPROXIMATE\"] = \"APPROXIMATE\";\n  GeocoderLocationType[\"GEOMETRIC_CENTER\"] = \"GEOMETRIC_CENTER\";\n  GeocoderLocationType[\"RANGE_INTERPOLATED\"] = \"RANGE_INTERPOLATED\";\n  GeocoderLocationType[\"ROOFTOP\"] = \"ROOFTOP\";\n})(GeocoderLocationType || (GeocoderLocationType = {}));\n\nvar GeocoderStatus;\n\n(function (GeocoderStatus) {\n  GeocoderStatus[\"ERROR\"] = \"ERROR\";\n  GeocoderStatus[\"INVALID_REQUEST\"] = \"INVALID_REQUEST\";\n  GeocoderStatus[\"OK\"] = \"OK\";\n  GeocoderStatus[\"OVER_QUERY_LIMIT\"] = \"OVER_QUERY_LIMIT\";\n  GeocoderStatus[\"REQUEST_DENIED\"] = \"REQUEST_DENIED\";\n  GeocoderStatus[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n  GeocoderStatus[\"ZERO_RESULTS\"] = \"ZERO_RESULTS\";\n})(GeocoderStatus || (GeocoderStatus = {}));\n\nlet AgmGeocoder = class AgmGeocoder {\n  constructor(loader) {\n    const connectableGeocoder$ = new Observable(subscriber => {\n      loader.load().then(() => subscriber.next());\n    }).pipe(map(() => this._createGeocoder()), multicast(new ReplaySubject(1)));\n    connectableGeocoder$.connect(); // ignore the subscription\n    // since we will remain subscribed till application exits\n\n    this.geocoder$ = connectableGeocoder$;\n  }\n\n  geocode(request) {\n    return this.geocoder$.pipe(switchMap(geocoder => this._getGoogleResults(geocoder, request)));\n  }\n\n  _getGoogleResults(geocoder, request) {\n    const geocodeObservable = bindCallback(geocoder.geocode);\n    return geocodeObservable(request).pipe(switchMap(([results, status]) => {\n      if (status === GeocoderStatus.OK) {\n        return of(results);\n      }\n\n      return throwError(status);\n    }));\n  }\n\n  _createGeocoder() {\n    return new google.maps.Geocoder();\n  }\n\n};\n\nAgmGeocoder.ctorParameters = () => [{\n  type: MapsAPILoader\n}];\n\nAgmGeocoder.ngInjectableDef = ɵɵdefineInjectable({\n  factory: function AgmGeocoder_Factory() {\n    return new AgmGeocoder(ɵɵinject(MapsAPILoader));\n  },\n  token: AgmGeocoder,\n  providedIn: \"root\"\n});\nAgmGeocoder = __decorate([Injectable({\n  providedIn: 'root'\n}), __metadata(\"design:paramtypes\", [MapsAPILoader])], AgmGeocoder);\n\nclass WindowRef {\n  getNativeWindow() {\n    return window;\n  }\n\n}\n\nclass DocumentRef {\n  getNativeDocument() {\n    return document;\n  }\n\n}\n\nconst BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\nvar GoogleMapsScriptProtocol;\n\n(function (GoogleMapsScriptProtocol) {\n  GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n  GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n  GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\n\n\nconst LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\nlet LazyMapsAPILoader = class LazyMapsAPILoader extends MapsAPILoader {\n  constructor(config = null, w, d, localeId) {\n    super();\n    this.localeId = localeId;\n    this._SCRIPT_ID = 'agmGoogleMapsApiScript';\n    this.callbackName = `agmLazyMapsAPILoader`;\n    this._config = config || {};\n    this._windowRef = w;\n    this._documentRef = d;\n  }\n\n  load() {\n    const window = this._windowRef.getNativeWindow();\n\n    if (window.google && window.google.maps) {\n      // Google maps already loaded on the page.\n      return Promise.resolve();\n    }\n\n    if (this._scriptLoadingPromise) {\n      return this._scriptLoadingPromise;\n    } // this can happen in HMR situations or Stackblitz.io editors.\n\n\n    const scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n\n    if (scriptOnPage) {\n      this._assignScriptLoadingPromise(scriptOnPage);\n\n      return this._scriptLoadingPromise;\n    }\n\n    const script = this._documentRef.getNativeDocument().createElement('script');\n\n    script.type = 'text/javascript';\n    script.async = true;\n    script.defer = true;\n    script.id = this._SCRIPT_ID;\n    script.src = this._getScriptSrc(this.callbackName);\n\n    this._assignScriptLoadingPromise(script);\n\n    this._documentRef.getNativeDocument().body.appendChild(script);\n\n    return this._scriptLoadingPromise;\n  }\n\n  _assignScriptLoadingPromise(scriptElem) {\n    this._scriptLoadingPromise = new Promise((resolve, reject) => {\n      this._windowRef.getNativeWindow()[this.callbackName] = () => {\n        resolve();\n      };\n\n      scriptElem.onerror = error => {\n        reject(error);\n      };\n    });\n  }\n\n  _getScriptSrc(callbackName) {\n    let protocolType = this._config && this._config.protocol || GoogleMapsScriptProtocol.HTTPS;\n    let protocol;\n\n    switch (protocolType) {\n      case GoogleMapsScriptProtocol.AUTO:\n        protocol = '';\n        break;\n\n      case GoogleMapsScriptProtocol.HTTP:\n        protocol = 'http:';\n        break;\n\n      case GoogleMapsScriptProtocol.HTTPS:\n        protocol = 'https:';\n        break;\n    }\n\n    const hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n    const queryParams = {\n      v: this._config.apiVersion || 'quarterly',\n      callback: callbackName,\n      key: this._config.apiKey,\n      client: this._config.clientId,\n      channel: this._config.channel,\n      libraries: this._config.libraries,\n      region: this._config.region,\n      language: this._config.language || this.localeId !== 'en-US' ? this.localeId : null\n    };\n    const params = Object.keys(queryParams).filter(k => queryParams[k] != null).filter(k => {\n      // remove empty arrays\n      return !Array.isArray(queryParams[k]) || Array.isArray(queryParams[k]) && queryParams[k].length > 0;\n    }).map(k => {\n      // join arrays as comma seperated strings\n      let i = queryParams[k];\n\n      if (Array.isArray(i)) {\n        return {\n          key: k,\n          value: i.join(',')\n        };\n      }\n\n      return {\n        key: k,\n        value: queryParams[k]\n      };\n    }).map(entry => {\n      return `${entry.key}=${entry.value}`;\n    }).join('&');\n    return `${protocol}//${hostAndPath}?${params}`;\n  }\n\n};\n\nLazyMapsAPILoader.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [LAZY_MAPS_API_CONFIG]\n  }]\n}, {\n  type: WindowRef\n}, {\n  type: DocumentRef\n}, {\n  type: String,\n  decorators: [{\n    type: Inject,\n    args: [LOCALE_ID]\n  }]\n}];\n\nLazyMapsAPILoader = __decorate([Injectable(), __param(0, Optional()), __param(0, Inject(LAZY_MAPS_API_CONFIG)), __param(3, Inject(LOCALE_ID)), __metadata(\"design:paramtypes\", [Object, WindowRef, DocumentRef, String])], LazyMapsAPILoader);\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\n\nclass NoOpMapsAPILoader {\n  load() {\n    if (!window.google || !window.google.maps) {\n      throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n    }\n\n    return Promise.resolve();\n  }\n\n} // exported map types\n\n\nvar AgmCoreModule_1;\n/**\n * @internal\n */\n\nfunction coreDirectives() {\n  return [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer];\n}\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\n\n\nlet AgmCoreModule = AgmCoreModule_1 = class AgmCoreModule {\n  /**\n   * Please use this method when you register the module at the root level.\n   */\n  static forRoot(lazyMapsAPILoaderConfig) {\n    return {\n      ngModule: AgmCoreModule_1,\n      providers: [...BROWSER_GLOBALS_PROVIDERS, {\n        provide: MapsAPILoader,\n        useClass: LazyMapsAPILoader\n      }, {\n        provide: LAZY_MAPS_API_CONFIG,\n        useValue: lazyMapsAPILoaderConfig\n      }]\n    };\n  }\n\n};\nAgmCoreModule = AgmCoreModule_1 = __decorate([NgModule({\n  declarations: coreDirectives(),\n  exports: coreDirectives()\n})], AgmCoreModule); // main modules\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AgmBicyclingLayer, AgmCircle, AgmCoreModule, AgmDataLayer, AgmFitBounds, AgmGeocoder, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer, CircleManager, ControlPosition, DataLayerManager, FitBoundsAccessor, GeocoderLocationType, GeocoderStatus, GoogleMapsAPIWrapper, GoogleMapsScriptProtocol, InfoWindowManager, KmlLayerManager, LAZY_MAPS_API_CONFIG, LayerManager, LazyMapsAPILoader, MapTypeId, MapsAPILoader, MarkerManager, NoOpMapsAPILoader, PolygonManager, PolylineManager, RectangleManager, ScaleControlStyle, ZoomControlStyle, FitBoundsService as ɵa, coreDirectives as ɵb, WindowRef as ɵc, DocumentRef as ɵd, BROWSER_GLOBALS_PROVIDERS as ɵe };","map":{"version":3,"names":["__decorate","__metadata","__param","__awaiter","Injectable","NgZone","Input","Directive","EventEmitter","Output","Self","ElementRef","Component","Inject","PLATFORM_ID","QueryList","ContentChildren","forwardRef","ɵɵdefineInjectable","ɵɵinject","InjectionToken","Optional","LOCALE_ID","NgModule","Observable","BehaviorSubject","from","timer","Subject","fromEventPattern","merge","ReplaySubject","bindCallback","of","throwError","flatMap","sample","switchMap","map","shareReplay","distinctUntilChanged","takeUntil","startWith","skip","multicast","isPlatformServer","MapsAPILoader","GoogleMapsAPIWrapper","constructor","_loader","_zone","_map","Promise","resolve","_mapResolver","createMap","el","mapOptions","runOutsideAngular","load","then","google","maps","Map","setMapOptions","options","m","setOptions","createMarker","addToMap","Marker","createInfoWindow","InfoWindow","createCircle","strokePosition","StrokePosition","Circle","createRectangle","Rectangle","createPolyline","getNativeMap","line","Polyline","setMap","createPolygon","polygon","Polygon","createDataLayer","data","Data","createTransitLayer","newLayer","TransitLayer","visible","createBicyclingLayer","BicyclingLayer","containsLocation","latLng","geometry","poly","subscribeToMapEvent","eventName","observer","addListener","arg","run","next","clearInstanceListeners","event","setCenter","getZoom","getBounds","getMapTypeId","setZoom","zoom","getCenter","panTo","panBy","x","y","fitBounds","padding","panToBounds","triggerMapEvent","trigger","ctorParameters","type","LayerManager","_wrapper","_layers","addTransitLayer","layer","set","addBicyclingLayer","deleteLayer","get","currentLayer","delete","toggleLayerVisibility","layerId","AgmBicyclingLayer","_manager","_addedToManager","_id","toString","ngOnInit","ngOnChanges","changes","currentValue","id","ngOnDestroy","Object","prototype","selector","CircleManager","_apiWrapper","_circles","addCircle","circle","center","lat","latitude","lng","longitude","clickable","draggable","editable","fillColor","fillOpacity","radius","strokeColor","strokeOpacity","strokeWeight","zIndex","removeCircle","c","getRadius","setEditable","setDraggable","setVisible","setRadius","getNativeCircle","createEventObservable","listener","e","remove","AgmCircle_1","AgmCircle","centerChange","circleClick","circleDblClick","drag","dragEnd","dragStart","mouseDown","mouseMove","mouseOut","mouseOver","mouseUp","radiusChange","rightClick","_circleAddedToManager","_eventSubscriptions","_registerEventListeners","_updateCircleOptionsChanges","optionKeys","keys","filter","k","_mapOptions","indexOf","forEach","length","events","eventEmitter","push","subscribe","value","emit","coords","s","unsubscribe","Number","String","DataLayerManager","addDataLayer","style","d","geoJson","getDataFeatures","features","deleteDataLayer","l","updateGeoJson","feature","index","splice","setDataOptions","setControlPosition","controlPosition","setControls","controls","setDrawingMode","drawingMode","setStyle","reject","addGeoJson","loadGeoJson","AgmDataLayer_1","layerId$1","AgmDataLayer","_subscriptions","layerClick","_addEventListeners","listeners","name","handler","ev","obj","os","geoJsonChange","dataOptions","_dataOptionsAttributes","hasOwnProperty","Function","FitBoundsAccessor","FitBoundsService","loader","_boundsChangeSampleTime$","_includeInBounds$","bounds$","pipe","time","includeInBounds","_generateBounds","bounds","LatLngBounds","b","extend","addToBounds","_createIdentifier","has","removeFromBounds","changeFitBoundsChangeSampleTime","timeMs","getBounds$","AgmFitBounds","_fitBoundsAccessor","_fitBoundsService","agmFitBounds","_destroyed$","_latestFitBoundsDetails","_updateBounds","getFitBoundsDetails$","details","newFitBoundsDetails","complete","decorators","MarkerManager","_mapsWrapper","_markers","convertAnimation","uiAnim","Animation","deleteMarker","marker","updateMarkerPosition","setPosition","updateTitle","setTitle","title","updateLabel","setLabel","label","updateDraggable","updateIcon","setIcon","iconUrl","updateOpacity","setOpacity","opacity","updateVisible","updateZIndex","setZIndex","updateClickable","setClickable","updateAnimation","setAnimation","animation","addMarker","markerPromise","position","icon","getNativeMarker","InfoWindowManager","_markerManager","_infoWindows","deleteInfoWindow","infoWindow","iWindow","i","close","open","w","hostMarker","addInfoWindow","content","maxWidth","disableAutoPan","infoWindowPromise","AgmInfoWindow_1","infoWindowId","AgmInfoWindow","_infoWindowManager","_el","isOpen","infoWindowClose","_infoWindowAddedToManager","nativeElement","querySelector","_updateOpenState","_setInfoWindowOptions","_infoWindowOptionsInputs","Boolean","template","KmlLayerManager","addKmlLayer","KmlLayer","preserveViewport","screenOverlays","suppressInfoWindows","url","deleteKmlLayer","AgmKmlLayer_1","layerId$2","AgmKmlLayer","defaultViewportChange","statusChange","_updatePolygonOptions","_kmlLayerOptions","reduce","createMVCEventObservable","array","eventNames","evName","previous","apply","getArray","_handler","evListeners","evListener","MvcArrayMock","vals","clear","removeAt","getAt","getLength","insertAt","elem","insert_at","pop","deleted","remove_at","setAt","set_at","callback","listenerArr","PolygonManager","_polygons","addPolygon","path","polygonPromise","geodesic","paths","updatePolygon","setPaths","setPolygonOptions","deletePolygon","getPath","getPaths","p","createPathEventObservable","agmPolygon","pathsChanges$","newArr","parentMVEvent","chMVC","chMVCEvent","pathIndex","retVal","subArr","toJSON","PolylineManager_1","PolylineManager","_polylines","_convertPoints","_getPoints","point","_convertPath","symbolPath","SymbolPath","_convertIcons","icons","_getIcons","agmIcon","fixedRotation","offset","repeat","anchor","Point","anchorX","anchorY","rotation","scale","entries","key","val","addPolyline","polylinePromise","updatePolylinePoints","setPath","updateIconSequences","setPolylineOptions","deletePolyline","getMVCPath","agmPolyline","polyline","mvcPath","RectangleManager","_rectangles","addRectangle","rectangle","north","east","south","west","removeRectangle","r","setBounds","create","AgmMap_1","AgmMap","_elem","_platformId","disableDoubleClickZoom","disableDefaultUI","scrollwheel","keyboardShortcuts","styles","usePanning","scaleControl","mapTypeControl","panControl","rotateControl","fullscreenControl","mapTypeId","clickableIcons","showDefaultInfoWindow","gestureHandling","tilt","_observableSubscriptions","mapClick","mapRightClick","mapDblClick","boundsChange","mapTypeIdChange","idle","zoomChange","mapReady","tilesLoaded","container","_initMapInstance","minZoom","maxZoom","controlSize","backgroundColor","draggableCursor","draggingCursor","zoomControl","zoomControlOptions","streetViewControl","streetViewControlOptions","scaleControlOptions","mapTypeControlOptions","panControlOptions","rotateControlOptions","fullscreenControlOptions","restriction","_handleMapCenterChange","_handleMapZoomChange","_handleMapMouseEvents","_handleBoundsChange","_handleMapTypeIdChange","_handleTilesLoadedEvent","_handleIdleEvent","_fitBoundsSubscription","_updateMapOptionsChanges","_updatePosition","_mapOptionsAttributes","triggerResize","recenter","setTimeout","_fitBounds","_setCenter","newCenter","_subscribeToFitBoundsUpdates","fitBoundsPadding","_isLatLngBoundsLiteral","newBounds","union","undefined","z","emitter","placeId","stop","args","Array","providers","host","AgmMarker_1","markerId","AgmMarker","openInfoWindow","animationChange","markerClick","markerDblClick","markerRightClick","_markerAddedToManger","_fitBoundsDetails$","ngAfterContentInit","handleInfoWindowUpdate","Error","_updateFitBoundsDetails","asObservable","cs","dcs","rc","ds","de","mover","mout","anChng","provide","useExisting","inputs","outputs","AgmPolygon_1","AgmPolygon","_polygonManager","polyClick","polyDblClick","polyDrag","polyDragEnd","polyDragStart","polyMouseDown","polyMouseMove","polyMouseOut","polyMouseOver","polyMouseUp","polyRightClick","polyPathsChange","_polygonAddedToManager","_init","handlers","paths$","pathEvent","_polygonOptionsAttributes","AgmPolylineIcon","AgmPolylinePoint_1","AgmPolylinePoint","positionChanged","AgmPolyline_1","polylineId","AgmPolyline","_polylineManager","lineClick","lineDblClick","lineDrag","lineDragEnd","lineDragStart","lineMouseDown","lineMouseMove","lineMouseOut","lineMouseOver","lineMouseUp","lineRightClick","polyPathChange","_polylineAddedToManager","points","pointSub","iconSub","iconSequences","_polylineOptionsAttributes","ob$","toArray","AgmRectangle_1","AgmRectangle","rectangleClick","rectangleDblClick","_rectangleAddedToManager","_updateRectangleOptionsChanges","getNorthEast","getSouthWest","layerId$3","AgmTransitLayer","google$1","ControlPosition","MapTypeId","MapTypeControlStyle","ScaleControlStyle","ZoomControlStyle","GeocoderLocationType","GeocoderStatus","AgmGeocoder","connectableGeocoder$","subscriber","_createGeocoder","connect","geocoder$","geocode","request","geocoder","_getGoogleResults","geocodeObservable","results","status","OK","Geocoder","ngInjectableDef","factory","AgmGeocoder_Factory","token","providedIn","WindowRef","getNativeWindow","window","DocumentRef","getNativeDocument","document","BROWSER_GLOBALS_PROVIDERS","GoogleMapsScriptProtocol","LAZY_MAPS_API_CONFIG","LazyMapsAPILoader","config","localeId","_SCRIPT_ID","callbackName","_config","_windowRef","_documentRef","_scriptLoadingPromise","scriptOnPage","getElementById","_assignScriptLoadingPromise","script","createElement","async","defer","src","_getScriptSrc","body","appendChild","scriptElem","onerror","error","protocolType","protocol","HTTPS","AUTO","HTTP","hostAndPath","queryParams","v","apiVersion","apiKey","client","clientId","channel","libraries","region","language","params","isArray","join","entry","NoOpMapsAPILoader","AgmCoreModule_1","coreDirectives","AgmCoreModule","forRoot","lazyMapsAPILoaderConfig","ngModule","useClass","useValue","declarations","exports","ɵa","ɵb","ɵc","ɵd","ɵe"],"sources":["C:/Users/perez/OneDrive/Escritorio/map/node_modules/@agm/core/fesm2015/agm-core.js"],"sourcesContent":["import { __decorate, __metadata, __param, __awaiter } from 'tslib';\nimport { Injectable, NgZone, Input, Directive, EventEmitter, Output, Self, ElementRef, Component, Inject, PLATFORM_ID, QueryList, ContentChildren, forwardRef, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Optional, LOCALE_ID, NgModule } from '@angular/core';\nimport { Observable, BehaviorSubject, from, timer, Subject, fromEventPattern, merge, ReplaySubject, bindCallback, of, throwError } from 'rxjs';\nimport { flatMap, sample, switchMap, map, shareReplay, distinctUntilChanged, takeUntil, startWith, skip, multicast } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\n\nlet MapsAPILoader = class MapsAPILoader {\n};\nMapsAPILoader = __decorate([\n    Injectable()\n], MapsAPILoader);\n\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nlet GoogleMapsAPIWrapper = class GoogleMapsAPIWrapper {\n    constructor(_loader, _zone) {\n        this._loader = _loader;\n        this._zone = _zone;\n        this._map =\n            new Promise((resolve) => { this._mapResolver = resolve; });\n    }\n    createMap(el, mapOptions) {\n        return this._zone.runOutsideAngular(() => {\n            return this._loader.load().then(() => {\n                const map = new google.maps.Map(el, mapOptions);\n                this._mapResolver(map);\n                return;\n            });\n        });\n    }\n    setMapOptions(options) {\n        return this._zone.runOutsideAngular(() => {\n            this._map.then((m) => { m.setOptions(options); });\n        });\n    }\n    /**\n     * Creates a google map marker with the map context\n     */\n    createMarker(options = {}, addToMap = true) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                if (addToMap) {\n                    options.map = map;\n                }\n                return new google.maps.Marker(options);\n            });\n        });\n    }\n    createInfoWindow(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then(() => { return new google.maps.InfoWindow(options); });\n        });\n    }\n    /**\n     * Creates a google.map.Circle for the current map.\n     */\n    createCircle(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                if (typeof options.strokePosition === 'string') {\n                    options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n                }\n                options.map = map;\n                return new google.maps.Circle(options);\n            });\n        });\n    }\n    /**\n     * Creates a google.map.Rectangle for the current map.\n     */\n    createRectangle(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                options.map = map;\n                return new google.maps.Rectangle(options);\n            });\n        });\n    }\n    createPolyline(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this.getNativeMap().then((map) => {\n                let line = new google.maps.Polyline(options);\n                line.setMap(map);\n                return line;\n            });\n        });\n    }\n    createPolygon(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this.getNativeMap().then((map) => {\n                let polygon = new google.maps.Polygon(options);\n                polygon.setMap(map);\n                return polygon;\n            });\n        });\n    }\n    /**\n     * Creates a new google.map.Data layer for the current map\n     */\n    createDataLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then(m => {\n                let data = new google.maps.Data(options);\n                data.setMap(m);\n                return data;\n            });\n        });\n    }\n    /**\n     * Creates a TransitLayer instance for a map\n     * @param {TransitLayerOptions} options - used for setting layer options\n     * @returns {Promise<TransitLayer>} a new transit layer object\n     */\n    createTransitLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                let newLayer = new google.maps.TransitLayer();\n                newLayer.setMap(options.visible ? map : null);\n                return newLayer;\n            });\n        });\n    }\n    /**\n     * Creates a BicyclingLayer instance for a map\n     * @param {BicyclingLayerOptions} options - used for setting layer options\n     * @returns {Promise<BicyclingLayer>} a new bicycling layer object\n     */\n    createBicyclingLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                let newLayer = new google.maps.BicyclingLayer();\n                newLayer.setMap(options.visible ? map : null);\n                return newLayer;\n            });\n        });\n    }\n    /**\n     * Determines if given coordinates are insite a Polygon path.\n     */\n    containsLocation(latLng, polygon) {\n        return google.maps.geometry.poly.containsLocation(latLng, polygon);\n    }\n    subscribeToMapEvent(eventName) {\n        return new Observable((observer) => {\n            this._map.then((m) => {\n                m.addListener(eventName, (arg) => { this._zone.run(() => observer.next(arg)); });\n            });\n        });\n    }\n    clearInstanceListeners() {\n        return this._zone.runOutsideAngular(() => {\n            this._map.then((map) => {\n                google.maps.event.clearInstanceListeners(map);\n            });\n        });\n    }\n    setCenter(latLng) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.setCenter(latLng));\n        });\n    }\n    getZoom() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getZoom());\n        });\n    }\n    getBounds() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getBounds());\n        });\n    }\n    getMapTypeId() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getMapTypeId());\n        });\n    }\n    setZoom(zoom) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.setZoom(zoom));\n        });\n    }\n    getCenter() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getCenter());\n        });\n    }\n    panTo(latLng) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panTo(latLng));\n        });\n    }\n    panBy(x, y) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panBy(x, y));\n        });\n    }\n    fitBounds(latLng, padding) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.fitBounds(latLng, padding));\n        });\n    }\n    panToBounds(latLng, padding) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panToBounds(latLng, padding));\n        });\n    }\n    /**\n     * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n     */\n    getNativeMap() { return this._map; }\n    /**\n     * Triggers the given event name on the map instance.\n     */\n    triggerMapEvent(eventName) {\n        return this._map.then((m) => google.maps.event.trigger(m, eventName));\n    }\n};\nGoogleMapsAPIWrapper.ctorParameters = () => [\n    { type: MapsAPILoader },\n    { type: NgZone }\n];\nGoogleMapsAPIWrapper = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [MapsAPILoader, NgZone])\n], GoogleMapsAPIWrapper);\n\n/**\n * This class manages Transit and Bicycling Layers for a Google Map instance.\n */\nlet LayerManager = class LayerManager {\n    constructor(_wrapper) {\n        this._wrapper = _wrapper;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a transit layer to a map instance.\n     * @param {AgmTransitLayer} layer - a TransitLayer object\n     * @param {TransitLayerOptions} options - TransitLayerOptions options\n     * @returns void\n     */\n    addTransitLayer(layer, options) {\n        const newLayer = this._wrapper.createTransitLayer(options);\n        this._layers.set(layer, newLayer);\n    }\n    /**\n     * Adds a bicycling layer to a map instance.\n     * @param {AgmBicyclingLayer} layer - a bicycling layer object\n     * @param {BicyclingLayerOptions} options - BicyclingLayer options\n     * @returns void\n     */\n    addBicyclingLayer(layer, options) {\n        const newLayer = this._wrapper.createBicyclingLayer(options);\n        this._layers.set(layer, newLayer);\n    }\n    /**\n     * Deletes a map layer\n     * @param {AgmTransitLayer|AgmBicyclingLayer} layer - the layer to delete\n     * @returns  Promise<void>\n     */\n    deleteLayer(layer) {\n        return this._layers.get(layer).then(currentLayer => {\n            currentLayer.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    /**\n     * Hide/Show a google map layer\n     * @param { AgmTransitLayer|AgmBicyclingLayer} layer - the layer to hide/show\n     * @param {TransitLayerOptions|BicyclingLayerOptions} options - used to set visibility of the layer\n     * @returns Promise<void>\n     */\n    toggleLayerVisibility(layer, options) {\n        return this._layers.get(layer).then(currentLayer => {\n            if (!options.visible) {\n                currentLayer.setMap(null);\n                return;\n            }\n            else {\n                return this._wrapper.getNativeMap().then((map) => {\n                    currentLayer.setMap(map);\n                });\n            }\n        });\n    }\n};\nLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper }\n];\nLayerManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper])\n], LayerManager);\n\nlet layerId = 0;\n/*\n * This directive adds a bicycling layer to a google map instance\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\n * */\nlet AgmBicyclingLayer = class AgmBicyclingLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId++).toString();\n        /**\n         * Hide/show bicycling layer\n         */\n        this.visible = true;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addBicyclingLayer(this, { visible: this.visible });\n        this._addedToManager = true;\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        if (changes['visible'] != null) {\n            this._manager.toggleLayerVisibility(this, { visible: changes['visible'].currentValue });\n        }\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmBicyclingLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n};\nAgmBicyclingLayer.ctorParameters = () => [\n    { type: LayerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmBicyclingLayer.prototype, \"visible\", void 0);\nAgmBicyclingLayer = __decorate([\n    Directive({\n        selector: 'agm-bicycling-layer',\n    }),\n    __metadata(\"design:paramtypes\", [LayerManager])\n], AgmBicyclingLayer);\n\nlet CircleManager = class CircleManager {\n    constructor(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._circles = new Map();\n    }\n    addCircle(circle) {\n        this._circles.set(circle, this._apiWrapper.createCircle({\n            center: { lat: circle.latitude, lng: circle.longitude },\n            clickable: circle.clickable,\n            draggable: circle.draggable,\n            editable: circle.editable,\n            fillColor: circle.fillColor,\n            fillOpacity: circle.fillOpacity,\n            radius: circle.radius,\n            strokeColor: circle.strokeColor,\n            strokeOpacity: circle.strokeOpacity,\n            strokePosition: circle.strokePosition,\n            strokeWeight: circle.strokeWeight,\n            visible: circle.visible,\n            zIndex: circle.zIndex,\n        }));\n    }\n    /**\n     * Removes the given circle from the map.\n     */\n    removeCircle(circle) {\n        return this._circles.get(circle).then((c) => {\n            c.setMap(null);\n            this._circles.delete(circle);\n        });\n    }\n    setOptions(circle, options) {\n        return this._circles.get(circle).then((c) => {\n            if (typeof options.strokePosition === 'string') {\n                options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n            }\n            c.setOptions(options);\n        });\n    }\n    getBounds(circle) {\n        return this._circles.get(circle).then((c) => c.getBounds());\n    }\n    getCenter(circle) {\n        return this._circles.get(circle).then((c) => c.getCenter());\n    }\n    getRadius(circle) {\n        return this._circles.get(circle).then((c) => c.getRadius());\n    }\n    setCenter(circle) {\n        return this._circles.get(circle).then((c) => { return c.setCenter({ lat: circle.latitude, lng: circle.longitude }); });\n    }\n    setEditable(circle) {\n        return this._circles.get(circle).then((c) => { return c.setEditable(circle.editable); });\n    }\n    setDraggable(circle) {\n        return this._circles.get(circle).then((c) => { return c.setDraggable(circle.draggable); });\n    }\n    setVisible(circle) {\n        return this._circles.get(circle).then((c) => { return c.setVisible(circle.visible); });\n    }\n    setRadius(circle) {\n        return this._circles.get(circle).then((c) => { return c.setRadius(circle.radius); });\n    }\n    getNativeCircle(circle) {\n        return this._circles.get(circle);\n    }\n    createEventObservable(eventName, circle) {\n        return new Observable((observer) => {\n            let listener = null;\n            this._circles.get(circle).then((c) => {\n                listener = c.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n            return () => {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    }\n};\nCircleManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nCircleManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], CircleManager);\n\nvar AgmCircle_1;\nlet AgmCircle = AgmCircle_1 = class AgmCircle {\n    constructor(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Circle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this circle over the map. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this circle by dragging the control points shown at\n         * the center and around the circumference of the circle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The radius in meters on the Earth's surface.\n         */\n        this.radius = 0;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this circle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the circle's center is changed.\n         */\n        this.centerChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the circle.\n         */\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the circle.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the circle.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the circle.\n         */\n        this.mouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the circle.\n         */\n        this.mouseMove = new EventEmitter();\n        /**\n         * This event is fired on circle mouseout.\n         */\n        this.mouseOut = new EventEmitter();\n        /**\n         * This event is fired on circle mouseover.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the circle.\n         */\n        this.mouseUp = new EventEmitter();\n        /**\n         * This event is fired when the circle's radius is changed.\n         */\n        this.radiusChange = new EventEmitter();\n        /**\n         * This event is fired when the circle is right-clicked on.\n         */\n        this.rightClick = new EventEmitter();\n        this._circleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    ngOnInit() {\n        this._manager.addCircle(this);\n        this._circleAddedToManager = true;\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._circleAddedToManager) {\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._manager.setCenter(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        if (changes['radius']) {\n            this._manager.setRadius(this);\n        }\n        this._updateCircleOptionsChanges(changes);\n    }\n    _updateCircleOptionsChanges(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmCircle_1._mapOptions.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _registerEventListeners() {\n        let events = new Map();\n        events.set('center_changed', this.centerChange);\n        events.set('click', this.circleClick);\n        events.set('dblclick', this.circleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragstart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('radius_changed', this.radiusChange);\n        events.set('rightclick', this.rightClick);\n        events.forEach((eventEmitter, eventName) => {\n            this._eventSubscriptions.push(this._manager.createEventObservable(eventName, this).subscribe((value) => {\n                switch (eventName) {\n                    case 'radius_changed':\n                        this._manager.getRadius(this).then((radius) => eventEmitter.emit(radius));\n                        break;\n                    case 'center_changed':\n                        this._manager.getCenter(this).then((center) => eventEmitter.emit({ lat: center.lat(), lng: center.lng() }));\n                        break;\n                    default:\n                        eventEmitter.emit({ coords: { lat: value.latLng.lat(), lng: value.latLng.lng() } });\n                }\n            }));\n        });\n    }\n    /** @internal */\n    ngOnDestroy() {\n        this._eventSubscriptions.forEach(function (s) { s.unsubscribe(); });\n        this._eventSubscriptions = null;\n        this._manager.removeCircle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Circle.\n     */\n    getBounds() { return this._manager.getBounds(this); }\n    getCenter() { return this._manager.getCenter(this); }\n};\nAgmCircle._mapOptions = [\n    'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n    'visible', 'zIndex', 'clickable',\n];\nAgmCircle.ctorParameters = () => [\n    { type: CircleManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"clickable\", void 0);\n__decorate([\n    Input('circleDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmCircle.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"radius\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmCircle.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmCircle.prototype, \"strokePosition\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"centerChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"circleClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"circleDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"drag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"dragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"dragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"radiusChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"rightClick\", void 0);\nAgmCircle = AgmCircle_1 = __decorate([\n    Directive({\n        selector: 'agm-circle',\n    }),\n    __metadata(\"design:paramtypes\", [CircleManager])\n], AgmCircle);\n\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nlet DataLayerManager = class DataLayerManager {\n    constructor(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new Data Layer to the map.\n     */\n    addDataLayer(layer) {\n        const newLayer = this._wrapper.createDataLayer({\n            style: layer.style,\n        })\n            .then(d => {\n            if (layer.geoJson) {\n                this.getDataFeatures(d, layer.geoJson).then(features => d.features = features);\n            }\n            return d;\n        });\n        this._layers.set(layer, newLayer);\n    }\n    deleteDataLayer(layer) {\n        this._layers.get(layer).then(l => {\n            l.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    updateGeoJson(layer, geoJson) {\n        this._layers.get(layer).then(l => {\n            l.forEach(function (feature) {\n                l.remove(feature);\n                var index = l.features.indexOf(feature, 0);\n                if (index > -1) {\n                    l.features.splice(index, 1);\n                }\n            });\n            this.getDataFeatures(l, geoJson).then(features => l.features = features);\n        });\n    }\n    setDataOptions(layer, options) {\n        this._layers.get(layer).then(l => {\n            l.setControlPosition(options.controlPosition);\n            l.setControls(options.controls);\n            l.setDrawingMode(options.drawingMode);\n            l.setStyle(options.style);\n        });\n    }\n    /**\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\n     */\n    createEventObservable(eventName, layer) {\n        return new Observable((observer) => {\n            this._layers.get(layer).then((d) => {\n                d.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    /**\n     * Extract features from a geoJson using google.maps Data Class\n     * @param d : google.maps.Data class instance\n     * @param geoJson : url or geojson object\n     */\n    getDataFeatures(d, geoJson) {\n        return new Promise((resolve, reject) => {\n            if (typeof geoJson === 'object') {\n                try {\n                    const features = d.addGeoJson(geoJson);\n                    resolve(features);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n            else if (typeof geoJson === 'string') {\n                d.loadGeoJson(geoJson, null, resolve);\n            }\n            else {\n                reject(`Impossible to extract features from geoJson: wrong argument type`);\n            }\n        });\n    }\n};\nDataLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nDataLayerManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], DataLayerManager);\n\nvar AgmDataLayer_1;\nlet layerId$1 = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\nlet AgmDataLayer = AgmDataLayer_1 = class AgmDataLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$1++).toString();\n        this._subscriptions = [];\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new EventEmitter();\n        /**\n         * The geoJson to be displayed\n         */\n        this.geoJson = null;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addDataLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const listeners = [\n            { name: 'click', handler: (ev) => this.layerClick.emit(ev) },\n        ];\n        listeners.forEach((obj) => {\n            const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmDataLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteDataLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(s => s.unsubscribe());\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        var geoJsonChange = changes['geoJson'];\n        if (geoJsonChange) {\n            this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n        }\n        let dataOptions = {};\n        AgmDataLayer_1._dataOptionsAttributes.forEach(k => dataOptions[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : this[k]);\n        this._manager.setDataOptions(this, dataOptions);\n    }\n};\nAgmDataLayer._dataOptionsAttributes = ['style'];\nAgmDataLayer.ctorParameters = () => [\n    { type: DataLayerManager }\n];\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmDataLayer.prototype, \"layerClick\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmDataLayer.prototype, \"geoJson\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Function)\n], AgmDataLayer.prototype, \"style\", void 0);\nAgmDataLayer = AgmDataLayer_1 = __decorate([\n    Directive({\n        selector: 'agm-data-layer',\n    }),\n    __metadata(\"design:paramtypes\", [DataLayerManager])\n], AgmDataLayer);\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nclass FitBoundsAccessor {\n}\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\nlet FitBoundsService = class FitBoundsService {\n    constructor(loader) {\n        this._boundsChangeSampleTime$ = new BehaviorSubject(200);\n        this._includeInBounds$ = new BehaviorSubject(new Map());\n        this.bounds$ = from(loader.load()).pipe(flatMap(() => this._includeInBounds$), sample(this._boundsChangeSampleTime$.pipe(switchMap(time => timer(0, time)))), map(includeInBounds => this._generateBounds(includeInBounds)), shareReplay(1));\n    }\n    _generateBounds(includeInBounds) {\n        const bounds = new google.maps.LatLngBounds();\n        includeInBounds.forEach(b => bounds.extend(b));\n        return bounds;\n    }\n    addToBounds(latLng) {\n        const id = this._createIdentifier(latLng);\n        if (this._includeInBounds$.value.has(id)) {\n            return;\n        }\n        const map = this._includeInBounds$.value;\n        map.set(id, latLng);\n        this._includeInBounds$.next(map);\n    }\n    removeFromBounds(latLng) {\n        const map = this._includeInBounds$.value;\n        map.delete(this._createIdentifier(latLng));\n        this._includeInBounds$.next(map);\n    }\n    changeFitBoundsChangeSampleTime(timeMs) {\n        this._boundsChangeSampleTime$.next(timeMs);\n    }\n    getBounds$() {\n        return this.bounds$;\n    }\n    _createIdentifier(latLng) {\n        return `${latLng.lat}+${latLng.lng}`;\n    }\n};\nFitBoundsService.ctorParameters = () => [\n    { type: MapsAPILoader }\n];\nFitBoundsService = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [MapsAPILoader])\n], FitBoundsService);\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\nlet AgmFitBounds = class AgmFitBounds {\n    constructor(_fitBoundsAccessor, _fitBoundsService) {\n        this._fitBoundsAccessor = _fitBoundsAccessor;\n        this._fitBoundsService = _fitBoundsService;\n        /**\n         * If the value is true, the element gets added to the bounds of the map.\n         * Default: true.\n         */\n        this.agmFitBounds = true;\n        this._destroyed$ = new Subject();\n        this._latestFitBoundsDetails = null;\n    }\n    /**\n     * @internal\n     */\n    ngOnChanges() {\n        this._updateBounds();\n    }\n    /**\n     * @internal\n     */\n    ngOnInit() {\n        this._fitBoundsAccessor\n            .getFitBoundsDetails$()\n            .pipe(distinctUntilChanged((x, y) => x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng), takeUntil(this._destroyed$))\n            .subscribe(details => this._updateBounds(details));\n    }\n    /*\n     Either the location changed, or visible status changed.\n     Possible state changes are\n     invisible -> visible\n     visible -> invisible\n     visible -> visible (new location)\n    */\n    _updateBounds(newFitBoundsDetails) {\n        // either visibility will change, or location, so remove the old one anyway\n        if (this._latestFitBoundsDetails) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n            // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n            // true -> false -> true, in which case we still need old value cached here\n        }\n        if (newFitBoundsDetails) {\n            this._latestFitBoundsDetails = newFitBoundsDetails;\n        }\n        if (!this._latestFitBoundsDetails) {\n            return;\n        }\n        if (this.agmFitBounds === true) {\n            this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n        }\n    }\n    /**\n     * @internal\n     */\n    ngOnDestroy() {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n        if (this._latestFitBoundsDetails !== null) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n        }\n    }\n};\nAgmFitBounds.ctorParameters = () => [\n    { type: FitBoundsAccessor, decorators: [{ type: Self }] },\n    { type: FitBoundsService }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmFitBounds.prototype, \"agmFitBounds\", void 0);\nAgmFitBounds = __decorate([\n    Directive({\n        selector: '[agmFitBounds]',\n    }),\n    __param(0, Self()),\n    __metadata(\"design:paramtypes\", [FitBoundsAccessor,\n        FitBoundsService])\n], AgmFitBounds);\n\nlet MarkerManager = class MarkerManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markers = new Map();\n    }\n    convertAnimation(uiAnim) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (uiAnim === null) {\n                return null;\n            }\n            else {\n                return this._mapsWrapper.getNativeMap().then(() => google.maps.Animation[uiAnim]);\n            }\n        });\n    }\n    deleteMarker(marker) {\n        const m = this._markers.get(marker);\n        if (m == null) {\n            // marker already deleted\n            return Promise.resolve();\n        }\n        return m.then((m) => {\n            return this._zone.run(() => {\n                m.setMap(null);\n                this._markers.delete(marker);\n            });\n        });\n    }\n    updateMarkerPosition(marker) {\n        return this._markers.get(marker).then((m) => m.setPosition({ lat: marker.latitude, lng: marker.longitude }));\n    }\n    updateTitle(marker) {\n        return this._markers.get(marker).then((m) => m.setTitle(marker.title));\n    }\n    updateLabel(marker) {\n        return this._markers.get(marker).then((m) => { m.setLabel(marker.label); });\n    }\n    updateDraggable(marker) {\n        return this._markers.get(marker).then((m) => m.setDraggable(marker.draggable));\n    }\n    updateIcon(marker) {\n        return this._markers.get(marker).then((m) => m.setIcon(marker.iconUrl));\n    }\n    updateOpacity(marker) {\n        return this._markers.get(marker).then((m) => m.setOpacity(marker.opacity));\n    }\n    updateVisible(marker) {\n        return this._markers.get(marker).then((m) => m.setVisible(marker.visible));\n    }\n    updateZIndex(marker) {\n        return this._markers.get(marker).then((m) => m.setZIndex(marker.zIndex));\n    }\n    updateClickable(marker) {\n        return this._markers.get(marker).then((m) => m.setClickable(marker.clickable));\n    }\n    updateAnimation(marker) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const m = yield this._markers.get(marker);\n            m.setAnimation(yield this.convertAnimation(marker.animation));\n        });\n    }\n    addMarker(marker) {\n        const markerPromise = new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n            return this._mapsWrapper.createMarker({\n                position: { lat: marker.latitude, lng: marker.longitude },\n                label: marker.label,\n                draggable: marker.draggable,\n                icon: marker.iconUrl,\n                opacity: marker.opacity,\n                visible: marker.visible,\n                zIndex: marker.zIndex,\n                title: marker.title,\n                clickable: marker.clickable,\n                animation: yield this.convertAnimation(marker.animation),\n            }).then(resolve);\n        }));\n        this._markers.set(marker, markerPromise);\n    }\n    getNativeMarker(marker) {\n        return this._markers.get(marker);\n    }\n    createEventObservable(eventName, marker) {\n        return new Observable((observer) => {\n            this._markers.get(marker).then((m) => {\n                m.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n};\nMarkerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nMarkerManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], MarkerManager);\n\nlet InfoWindowManager = class InfoWindowManager {\n    constructor(_mapsWrapper, _zone, _markerManager) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markerManager = _markerManager;\n        this._infoWindows = new Map();\n    }\n    deleteInfoWindow(infoWindow) {\n        const iWindow = this._infoWindows.get(infoWindow);\n        if (iWindow == null) {\n            // info window already deleted\n            return Promise.resolve();\n        }\n        return iWindow.then((i) => {\n            return this._zone.run(() => {\n                i.close();\n                this._infoWindows.delete(infoWindow);\n            });\n        });\n    }\n    setPosition(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((i) => i.setPosition({\n            lat: infoWindow.latitude,\n            lng: infoWindow.longitude,\n        }));\n    }\n    setZIndex(infoWindow) {\n        return this._infoWindows.get(infoWindow)\n            .then((i) => i.setZIndex(infoWindow.zIndex));\n    }\n    open(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((w) => {\n            if (infoWindow.hostMarker != null) {\n                return this._markerManager.getNativeMarker(infoWindow.hostMarker).then((marker) => {\n                    return this._mapsWrapper.getNativeMap().then((map) => w.open(map, marker));\n                });\n            }\n            return this._mapsWrapper.getNativeMap().then((map) => w.open(map));\n        });\n    }\n    close(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((w) => w.close());\n    }\n    setOptions(infoWindow, options) {\n        return this._infoWindows.get(infoWindow).then((i) => i.setOptions(options));\n    }\n    addInfoWindow(infoWindow) {\n        const options = {\n            content: infoWindow.content,\n            maxWidth: infoWindow.maxWidth,\n            zIndex: infoWindow.zIndex,\n            disableAutoPan: infoWindow.disableAutoPan,\n        };\n        if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n            options.position = { lat: infoWindow.latitude, lng: infoWindow.longitude };\n        }\n        const infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n        this._infoWindows.set(infoWindow, infoWindowPromise);\n    }\n    /**\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\n     */\n    createEventObservable(eventName, infoWindow) {\n        return new Observable((observer) => {\n            this._infoWindows.get(infoWindow).then((i) => {\n                i.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n};\nInfoWindowManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone },\n    { type: MarkerManager }\n];\nInfoWindowManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone,\n        MarkerManager])\n], InfoWindowManager);\n\nvar AgmInfoWindow_1;\nlet infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmInfoWindow = AgmInfoWindow_1 = class AgmInfoWindow {\n    constructor(_infoWindowManager, _el) {\n        this._infoWindowManager = _infoWindowManager;\n        this._el = _el;\n        /**\n         * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n         */\n        this.isOpen = false;\n        /**\n         * Emits an event when the info window is closed.\n         */\n        this.infoWindowClose = new EventEmitter();\n        this._infoWindowAddedToManager = false;\n        this._id = (infoWindowId++).toString();\n    }\n    ngOnInit() {\n        this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n        this._infoWindowManager.addInfoWindow(this);\n        this._infoWindowAddedToManager = true;\n        this._updateOpenState();\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._infoWindowAddedToManager) {\n            return;\n        }\n        if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\n            typeof this.longitude === 'number') {\n            this._infoWindowManager.setPosition(this);\n        }\n        if (changes['zIndex']) {\n            this._infoWindowManager.setZIndex(this);\n        }\n        if (changes['isOpen']) {\n            this._updateOpenState();\n        }\n        this._setInfoWindowOptions(changes);\n    }\n    _registerEventListeners() {\n        this._infoWindowManager.createEventObservable('closeclick', this).subscribe(() => {\n            this.isOpen = false;\n            this.infoWindowClose.emit();\n        });\n    }\n    _updateOpenState() {\n        this.isOpen ? this.open() : this.close();\n    }\n    _setInfoWindowOptions(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmInfoWindow_1._infoWindowOptionsInputs.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        this._infoWindowManager.setOptions(this, options);\n    }\n    /**\n     * Opens the info window.\n     */\n    open() { return this._infoWindowManager.open(this); }\n    /**\n     * Closes the info window.\n     */\n    close() {\n        return this._infoWindowManager.close(this).then(() => { this.infoWindowClose.emit(); });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return 'AgmInfoWindow-' + this._id.toString(); }\n    /** @internal */\n    ngOnDestroy() { this._infoWindowManager.deleteInfoWindow(this); }\n};\nAgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\nAgmInfoWindow.ctorParameters = () => [\n    { type: InfoWindowManager },\n    { type: ElementRef }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmInfoWindow.prototype, \"disableAutoPan\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"zIndex\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"maxWidth\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmInfoWindow.prototype, \"isOpen\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmInfoWindow.prototype, \"infoWindowClose\", void 0);\nAgmInfoWindow = AgmInfoWindow_1 = __decorate([\n    Component({\n        selector: 'agm-info-window',\n        template: `<div class='agm-info-window-content'>\n      <ng-content></ng-content>\n    </div>\n  `\n    }),\n    __metadata(\"design:paramtypes\", [InfoWindowManager, ElementRef])\n], AgmInfoWindow);\n\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nlet KmlLayerManager = class KmlLayerManager {\n    constructor(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new KML Layer to the map.\n     */\n    addKmlLayer(layer) {\n        const newLayer = this._wrapper.getNativeMap().then(m => {\n            return new google.maps.KmlLayer({\n                clickable: layer.clickable,\n                map: m,\n                preserveViewport: layer.preserveViewport,\n                screenOverlays: layer.screenOverlays,\n                suppressInfoWindows: layer.suppressInfoWindows,\n                url: layer.url,\n                zIndex: layer.zIndex,\n            });\n        });\n        this._layers.set(layer, newLayer);\n    }\n    setOptions(layer, options) {\n        this._layers.get(layer).then(l => l.setOptions(options));\n    }\n    deleteKmlLayer(layer) {\n        this._layers.get(layer).then(l => {\n            l.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    /**\n     * Creates a Google Maps event listener for the given KmlLayer as an Observable\n     */\n    createEventObservable(eventName, layer) {\n        return new Observable((observer) => {\n            this._layers.get(layer).then((m) => {\n                m.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n};\nKmlLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nKmlLayerManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], KmlLayerManager);\n\nvar AgmKmlLayer_1;\nlet layerId$2 = 0;\nlet AgmKmlLayer = AgmKmlLayer_1 = class AgmKmlLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$2++).toString();\n        this._subscriptions = [];\n        /**\n         * If true, the layer receives mouse events. Default value is true.\n         */\n        this.clickable = true;\n        /**\n         * By default, the input map is centered and zoomed to the bounding box of the contents of the\n         * layer.\n         * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n         * were never set.\n         */\n        this.preserveViewport = false;\n        /**\n         * Whether to render the screen overlays. Default true.\n         */\n        this.screenOverlays = true;\n        /**\n         * Suppress the rendering of info windows when layer features are clicked.\n         */\n        this.suppressInfoWindows = false;\n        /**\n         * The URL of the KML document to display.\n         */\n        this.url = null;\n        /**\n         * The z-index of the layer.\n         */\n        this.zIndex = null;\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new EventEmitter();\n        /**\n         * This event is fired when the KML layers default viewport has changed.\n         */\n        this.defaultViewportChange = new EventEmitter();\n        /**\n         * This event is fired when the KML layer has finished loading.\n         * At this point it is safe to read the status property to determine if the layer loaded\n         * successfully.\n         */\n        this.statusChange = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addKmlLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        this._updatePolygonOptions(changes);\n    }\n    _updatePolygonOptions(changes) {\n        const options = Object.keys(changes)\n            .filter(k => AgmKmlLayer_1._kmlLayerOptions.indexOf(k) !== -1)\n            .reduce((obj, k) => {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n        if (Object.keys(options).length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _addEventListeners() {\n        const listeners = [\n            { name: 'click', handler: (ev) => this.layerClick.emit(ev) },\n            { name: 'defaultviewport_changed', handler: () => this.defaultViewportChange.emit() },\n            { name: 'status_changed', handler: () => this.statusChange.emit() },\n        ];\n        listeners.forEach((obj) => {\n            const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmKmlLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteKmlLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(s => s.unsubscribe());\n    }\n};\nAgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\nAgmKmlLayer.ctorParameters = () => [\n    { type: KmlLayerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"clickable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"preserveViewport\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"screenOverlays\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"suppressInfoWindows\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmKmlLayer.prototype, \"url\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmKmlLayer.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmKmlLayer.prototype, \"layerClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmKmlLayer.prototype, \"defaultViewportChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmKmlLayer.prototype, \"statusChange\", void 0);\nAgmKmlLayer = AgmKmlLayer_1 = __decorate([\n    Directive({\n        selector: 'agm-kml-layer',\n    }),\n    __metadata(\"design:paramtypes\", [KmlLayerManager])\n], AgmKmlLayer);\n\nfunction createMVCEventObservable(array) {\n    const eventNames = ['insert_at', 'remove_at', 'set_at'];\n    return fromEventPattern((handler) => eventNames.map(evName => array.addListener(evName, (index, previous) => handler.apply(array, [{ 'newArr': array.getArray(), evName, index, previous }]))), (_handler, evListeners) => evListeners.forEach(evListener => evListener.remove()));\n}\nclass MvcArrayMock {\n    constructor() {\n        this.vals = [];\n        this.listeners = {\n            'remove_at': [],\n            'insert_at': [],\n            'set_at': [],\n        };\n    }\n    clear() {\n        for (let i = this.vals.length - 1; i >= 0; i--) {\n            this.removeAt(i);\n        }\n    }\n    getArray() {\n        return [...this.vals];\n    }\n    getAt(i) {\n        return this.vals[i];\n    }\n    getLength() {\n        return this.vals.length;\n    }\n    insertAt(i, elem) {\n        this.vals.splice(i, 0, elem);\n        this.listeners.insert_at.map(listener => listener(i));\n    }\n    pop() {\n        const deleted = this.vals.pop();\n        this.listeners.remove_at.map(listener => listener(this.vals.length, deleted));\n        return deleted;\n    }\n    push(elem) {\n        this.vals.push(elem);\n        this.listeners.insert_at.map(listener => listener(this.vals.length - 1));\n        return this.vals.length;\n    }\n    removeAt(i) {\n        const deleted = this.vals.splice(i, 1)[0];\n        this.listeners.remove_at.map(listener => listener(i, deleted));\n        return deleted;\n    }\n    setAt(i, elem) {\n        const deleted = this.vals[i];\n        this.vals[i] = elem;\n        this.listeners.set_at.map(listener => listener(i, deleted));\n    }\n    forEach(callback) {\n        this.vals.forEach(callback);\n    }\n    addListener(eventName, handler) {\n        const listenerArr = this.listeners[eventName];\n        listenerArr.push(handler);\n        return {\n            remove: () => {\n                listenerArr.splice(listenerArr.indexOf(handler), 1);\n            },\n        };\n    }\n}\n\nlet PolygonManager = class PolygonManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polygons = new Map();\n    }\n    addPolygon(path) {\n        const polygonPromise = this._mapsWrapper.createPolygon({\n            clickable: path.clickable,\n            draggable: path.draggable,\n            editable: path.editable,\n            fillColor: path.fillColor,\n            fillOpacity: path.fillOpacity,\n            geodesic: path.geodesic,\n            paths: path.paths,\n            strokeColor: path.strokeColor,\n            strokeOpacity: path.strokeOpacity,\n            strokeWeight: path.strokeWeight,\n            visible: path.visible,\n            zIndex: path.zIndex,\n        });\n        this._polygons.set(path, polygonPromise);\n    }\n    updatePolygon(polygon) {\n        const m = this._polygons.get(polygon);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => this._zone.run(() => { l.setPaths(polygon.paths); }));\n    }\n    setPolygonOptions(path, options) {\n        return this._polygons.get(path).then((l) => { l.setOptions(options); });\n    }\n    deletePolygon(paths) {\n        const m = this._polygons.get(paths);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => {\n            return this._zone.run(() => {\n                l.setMap(null);\n                this._polygons.delete(paths);\n            });\n        });\n    }\n    getPath(polygon) {\n        return this._polygons.get(polygon)\n            .then((polygon) => polygon.getPath().getArray());\n    }\n    getPaths(polygon) {\n        return this._polygons.get(polygon)\n            .then((polygon) => polygon.getPaths().getArray().map((p) => p.getArray()));\n    }\n    createEventObservable(eventName, path) {\n        return new Observable((observer) => {\n            this._polygons.get(path).then((l) => {\n                l.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    createPathEventObservable(agmPolygon) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const polygon = yield this._polygons.get(agmPolygon);\n            const paths = polygon.getPaths();\n            const pathsChanges$ = createMVCEventObservable(paths);\n            return pathsChanges$.pipe(startWith({ newArr: paths.getArray() }), // in order to subscribe to them all\n            switchMap(parentMVEvent => merge(... // rest parameter\n            parentMVEvent.newArr.map((chMVC, index) => createMVCEventObservable(chMVC)\n                .pipe(map(chMVCEvent => ({ parentMVEvent, chMVCEvent, pathIndex: index })))))\n                .pipe(startWith({ parentMVEvent, chMVCEvent: null, pathIndex: null }))), // start the merged ob with an event signinifing change to parent\n            skip(1), // skip the manually added event\n            map(({ parentMVEvent, chMVCEvent, pathIndex }) => {\n                let retVal;\n                if (!chMVCEvent) {\n                    retVal = {\n                        newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n                        eventName: parentMVEvent.evName,\n                        index: parentMVEvent.index,\n                    };\n                    if (parentMVEvent.previous) {\n                        retVal.previous = parentMVEvent.previous.getArray();\n                    }\n                }\n                else {\n                    retVal = {\n                        newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n                        pathIndex,\n                        eventName: chMVCEvent.evName,\n                        index: chMVCEvent.index,\n                    };\n                    if (chMVCEvent.previous) {\n                        retVal.previous = chMVCEvent.previous;\n                    }\n                }\n                return retVal;\n            }));\n        });\n    }\n};\nPolygonManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nPolygonManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], PolygonManager);\n\nvar PolylineManager_1;\nlet PolylineManager = PolylineManager_1 = class PolylineManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polylines = new Map();\n    }\n    static _convertPoints(line) {\n        const path = line._getPoints().map((point) => {\n            return { lat: point.latitude, lng: point.longitude };\n        });\n        return path;\n    }\n    static _convertPath(path) {\n        const symbolPath = google.maps.SymbolPath[path];\n        if (typeof symbolPath === 'number') {\n            return symbolPath;\n        }\n        else {\n            return path;\n        }\n    }\n    static _convertIcons(line) {\n        const icons = line._getIcons().map(agmIcon => ({\n            fixedRotation: agmIcon.fixedRotation,\n            offset: agmIcon.offset,\n            repeat: agmIcon.repeat,\n            icon: {\n                anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\n                fillColor: agmIcon.fillColor,\n                fillOpacity: agmIcon.fillOpacity,\n                path: PolylineManager_1._convertPath(agmIcon.path),\n                rotation: agmIcon.rotation,\n                scale: agmIcon.scale,\n                strokeColor: agmIcon.strokeColor,\n                strokeOpacity: agmIcon.strokeOpacity,\n                strokeWeight: agmIcon.strokeWeight,\n            },\n        }));\n        // prune undefineds;\n        icons.forEach(icon => {\n            Object.entries(icon).forEach(([key, val]) => {\n                if (typeof val === 'undefined') {\n                    delete icon[key];\n                }\n            });\n            if (typeof icon.icon.anchor.x === 'undefined' ||\n                typeof icon.icon.anchor.y === 'undefined') {\n                delete icon.icon.anchor;\n            }\n        });\n        return icons;\n    }\n    addPolyline(line) {\n        const polylinePromise = this._mapsWrapper.getNativeMap()\n            .then(() => [PolylineManager_1._convertPoints(line),\n            PolylineManager_1._convertIcons(line)])\n            .then(([path, icons]) => this._mapsWrapper.createPolyline({\n            clickable: line.clickable,\n            draggable: line.draggable,\n            editable: line.editable,\n            geodesic: line.geodesic,\n            strokeColor: line.strokeColor,\n            strokeOpacity: line.strokeOpacity,\n            strokeWeight: line.strokeWeight,\n            visible: line.visible,\n            zIndex: line.zIndex,\n            path: path,\n            icons: icons,\n        }));\n        this._polylines.set(line, polylinePromise);\n    }\n    updatePolylinePoints(line) {\n        const path = PolylineManager_1._convertPoints(line);\n        const m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => { return this._zone.run(() => { l.setPath(path); }); });\n    }\n    updateIconSequences(line) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._mapsWrapper.getNativeMap();\n            const icons = PolylineManager_1._convertIcons(line);\n            const m = this._polylines.get(line);\n            if (m == null) {\n                return;\n            }\n            return m.then(l => this._zone.run(() => l.setOptions({ icons: icons })));\n        });\n    }\n    setPolylineOptions(line, options) {\n        return this._polylines.get(line).then((l) => { l.setOptions(options); });\n    }\n    deletePolyline(line) {\n        const m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => {\n            return this._zone.run(() => {\n                l.setMap(null);\n                this._polylines.delete(line);\n            });\n        });\n    }\n    getMVCPath(agmPolyline) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const polyline = yield this._polylines.get(agmPolyline);\n            return polyline.getPath();\n        });\n    }\n    getPath(agmPolyline) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.getMVCPath(agmPolyline)).getArray();\n        });\n    }\n    createEventObservable(eventName, line) {\n        return new Observable((observer) => {\n            this._polylines.get(line).then((l) => {\n                l.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    createPathEventObservable(line) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const mvcPath = yield this.getMVCPath(line);\n            return createMVCEventObservable(mvcPath);\n        });\n    }\n};\nPolylineManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nPolylineManager = PolylineManager_1 = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], PolylineManager);\n\nlet RectangleManager = class RectangleManager {\n    constructor(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._rectangles = new Map();\n    }\n    addRectangle(rectangle) {\n        this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n            bounds: {\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west,\n            },\n            clickable: rectangle.clickable,\n            draggable: rectangle.draggable,\n            editable: rectangle.editable,\n            fillColor: rectangle.fillColor,\n            fillOpacity: rectangle.fillOpacity,\n            strokeColor: rectangle.strokeColor,\n            strokeOpacity: rectangle.strokeOpacity,\n            strokePosition: rectangle.strokePosition,\n            strokeWeight: rectangle.strokeWeight,\n            visible: rectangle.visible,\n            zIndex: rectangle.zIndex,\n        }));\n    }\n    /**\n     * Removes the given rectangle from the map.\n     */\n    removeRectangle(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            r.setMap(null);\n            this._rectangles.delete(rectangle);\n        });\n    }\n    setOptions(rectangle, options) {\n        return this._rectangles.get(rectangle).then((r) => r.setOptions(options));\n    }\n    getBounds(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => r.getBounds());\n    }\n    setBounds(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setBounds({\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west,\n            });\n        });\n    }\n    setEditable(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setEditable(rectangle.editable);\n        });\n    }\n    setDraggable(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setDraggable(rectangle.draggable);\n        });\n    }\n    setVisible(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setVisible(rectangle.visible);\n        });\n    }\n    createEventObservable(eventName, rectangle) {\n        return Observable.create((observer) => {\n            let listener = null;\n            this._rectangles.get(rectangle).then((r) => {\n                listener = r.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n            return () => {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    }\n};\nRectangleManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nRectangleManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], RectangleManager);\n\nvar AgmMap_1;\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmMap = AgmMap_1 = class AgmMap {\n    constructor(_elem, _mapsWrapper, _platformId, _fitBoundsService, _zone) {\n        this._elem = _elem;\n        this._mapsWrapper = _mapsWrapper;\n        this._platformId = _platformId;\n        this._fitBoundsService = _fitBoundsService;\n        this._zone = _zone;\n        /**\n         * The longitude that defines the center of the map.\n         */\n        this.longitude = 0;\n        /**\n         * The latitude that defines the center of the map.\n         */\n        this.latitude = 0;\n        /**\n         * The zoom level of the map. The default zoom level is 8.\n         */\n        this.zoom = 8;\n        /**\n         * Enables/disables if map is draggable.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = true;\n        /**\n         * Enables/disables zoom and center on double click. Enabled by default.\n         */\n        this.disableDoubleClickZoom = false;\n        /**\n         * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n         * value cannot get updated.\n         */\n        this.disableDefaultUI = false;\n        /**\n         * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n         */\n        this.scrollwheel = true;\n        /**\n         * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n         * enabled by default.\n         */\n        this.keyboardShortcuts = true;\n        /**\n         * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n         * modes, these styles will only apply to labels and geometry.\n         */\n        this.styles = [];\n        /**\n         * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n         * used to\n         * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n         */\n        this.usePanning = false;\n        /**\n         * Sets the viewport to contain the given bounds.\n         * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n         */\n        this.fitBounds = false;\n        /**\n         * The initial enabled/disabled state of the Scale control. This is disabled by default.\n         */\n        this.scaleControl = false;\n        /**\n         * The initial enabled/disabled state of the Map type control.\n         */\n        this.mapTypeControl = false;\n        /**\n         * The initial enabled/disabled state of the Pan control.\n         */\n        this.panControl = false;\n        /**\n         * The initial enabled/disabled state of the Rotate control.\n         */\n        this.rotateControl = false;\n        /**\n         * The initial enabled/disabled state of the Fullscreen control.\n         */\n        this.fullscreenControl = false;\n        /**\n         * The map mapTypeId. Defaults to 'roadmap'.\n         */\n        this.mapTypeId = 'roadmap';\n        /**\n         * When false, map icons are not clickable. A map icon represents a point of interest,\n         * also known as a POI. By default map icons are clickable.\n         */\n        this.clickableIcons = true;\n        /**\n         * A map icon represents a point of interest, also known as a POI.\n         * When map icons are clickable by default, an info window is displayed.\n         * When this property is set to false, the info window will not be shown but the click event\n         * will still fire\n         */\n        this.showDefaultInfoWindow = true;\n        /**\n         * This setting controls how gestures on the map are handled.\n         * Allowed values:\n         * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n         * - 'greedy'      (All touch gestures pan or zoom the map.)\n         * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n         * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n         */\n        this.gestureHandling = 'auto';\n        /**\n         * Controls the automatic switching behavior for the angle of incidence of\n         * the map. The only allowed values are 0 and 45. The value 0 causes the map\n         * to always use a 0° overhead view regardless of the zoom level and\n         * viewport. The value 45 causes the tilt angle to automatically switch to\n         * 45 whenever 45° imagery is available for the current zoom level and\n         * viewport, and switch back to 0 whenever 45° imagery is not available\n         * (this is the default behavior). 45° imagery is only available for\n         * satellite and hybrid map types, within some locations, and at some zoom\n         * levels. Note: getTilt returns the current tilt angle, not the value\n         * specified by this option. Because getTilt and this option refer to\n         * different things, do not bind() the tilt property; doing so may yield\n         * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\n         */\n        this.tilt = 0;\n        this._observableSubscriptions = [];\n        /**\n         * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n         * marker or infoWindow).\n         */\n        this.mapClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapRightClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapDblClick = new EventEmitter();\n        /**\n         * This event emitter is fired when the map center changes.\n         */\n        this.centerChange = new EventEmitter();\n        /**\n         * This event is fired when the viewport bounds have changed.\n         */\n        this.boundsChange = new EventEmitter();\n        /**\n         * This event is fired when the mapTypeId property changes.\n         */\n        this.mapTypeIdChange = new EventEmitter();\n        /**\n         * This event is fired when the map becomes idle after panning or zooming.\n         */\n        this.idle = new EventEmitter();\n        /**\n         * This event is fired when the zoom level has changed.\n         */\n        this.zoomChange = new EventEmitter();\n        /**\n         * This event is fired when the google map is fully initialized.\n         * You get the google.maps.Map instance as a result of this EventEmitter.\n         */\n        this.mapReady = new EventEmitter();\n        /**\n         * This event is fired when the visible tiles have finished loading.\n         */\n        this.tilesLoaded = new EventEmitter();\n    }\n    /** @internal */\n    ngOnInit() {\n        if (isPlatformServer(this._platformId)) {\n            // The code is running on the server, do nothing\n            return;\n        }\n        // todo: this should be solved with a new component and a viewChild decorator\n        const container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n        this._initMapInstance(container);\n    }\n    _initMapInstance(el) {\n        this._mapsWrapper.createMap(el, {\n            center: { lat: this.latitude || 0, lng: this.longitude || 0 },\n            zoom: this.zoom,\n            minZoom: this.minZoom,\n            maxZoom: this.maxZoom,\n            controlSize: this.controlSize,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            scrollwheel: this.scrollwheel,\n            backgroundColor: this.backgroundColor,\n            draggable: this.draggable,\n            draggableCursor: this.draggableCursor,\n            draggingCursor: this.draggingCursor,\n            keyboardShortcuts: this.keyboardShortcuts,\n            styles: this.styles,\n            zoomControl: this.zoomControl,\n            zoomControlOptions: this.zoomControlOptions,\n            streetViewControl: this.streetViewControl,\n            streetViewControlOptions: this.streetViewControlOptions,\n            scaleControl: this.scaleControl,\n            scaleControlOptions: this.scaleControlOptions,\n            mapTypeControl: this.mapTypeControl,\n            mapTypeControlOptions: this.mapTypeControlOptions,\n            panControl: this.panControl,\n            panControlOptions: this.panControlOptions,\n            rotateControl: this.rotateControl,\n            rotateControlOptions: this.rotateControlOptions,\n            fullscreenControl: this.fullscreenControl,\n            fullscreenControlOptions: this.fullscreenControlOptions,\n            mapTypeId: this.mapTypeId,\n            clickableIcons: this.clickableIcons,\n            gestureHandling: this.gestureHandling,\n            tilt: this.tilt,\n            restriction: this.restriction,\n        })\n            .then(() => this._mapsWrapper.getNativeMap())\n            .then(map => this.mapReady.emit(map));\n        // register event listeners\n        this._handleMapCenterChange();\n        this._handleMapZoomChange();\n        this._handleMapMouseEvents();\n        this._handleBoundsChange();\n        this._handleMapTypeIdChange();\n        this._handleTilesLoadedEvent();\n        this._handleIdleEvent();\n    }\n    /** @internal */\n    ngOnDestroy() {\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach((s) => s.unsubscribe());\n        // remove all listeners from the map instance\n        this._mapsWrapper.clearInstanceListeners();\n        if (this._fitBoundsSubscription) {\n            this._fitBoundsSubscription.unsubscribe();\n        }\n    }\n    /* @internal */\n    ngOnChanges(changes) {\n        this._updateMapOptionsChanges(changes);\n        this._updatePosition(changes);\n    }\n    _updateMapOptionsChanges(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmMap_1._mapOptionsAttributes.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        this._mapsWrapper.setMapOptions(options);\n    }\n    /**\n     * Triggers a resize event on the google map instance.\n     * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n     * Returns a promise that gets resolved after the event was triggered.\n     */\n    triggerResize(recenter = true) {\n        // Note: When we would trigger the resize event and show the map in the same turn (which is a\n        // common case for triggering a resize event), then the resize event would not\n        // work (to show the map), so we trigger the event in a timeout.\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                return this._mapsWrapper.triggerMapEvent('resize').then(() => {\n                    if (recenter) {\n                        this.fitBounds != null ? this._fitBounds() : this._setCenter();\n                    }\n                    resolve();\n                });\n            });\n        });\n    }\n    _updatePosition(changes) {\n        if (changes['latitude'] == null && changes['longitude'] == null &&\n            !changes['fitBounds']) {\n            // no position update needed\n            return;\n        }\n        // we prefer fitBounds in changes\n        if ('fitBounds' in changes) {\n            this._fitBounds();\n            return;\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        this._setCenter();\n    }\n    _setCenter() {\n        let newCenter = {\n            lat: this.latitude,\n            lng: this.longitude,\n        };\n        if (this.usePanning) {\n            this._mapsWrapper.panTo(newCenter);\n        }\n        else {\n            this._mapsWrapper.setCenter(newCenter);\n        }\n    }\n    _fitBounds() {\n        switch (this.fitBounds) {\n            case true:\n                this._subscribeToFitBoundsUpdates();\n                break;\n            case false:\n                if (this._fitBoundsSubscription) {\n                    this._fitBoundsSubscription.unsubscribe();\n                }\n                break;\n            default:\n                this._updateBounds(this.fitBounds, this.fitBoundsPadding);\n        }\n    }\n    _subscribeToFitBoundsUpdates() {\n        this._zone.runOutsideAngular(() => {\n            this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(b => {\n                this._zone.run(() => this._updateBounds(b, this.fitBoundsPadding));\n            });\n        });\n    }\n    _updateBounds(bounds, padding) {\n        if (!bounds) {\n            return;\n        }\n        if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\n            const newBounds = new google.maps.LatLngBounds();\n            newBounds.union(bounds);\n            bounds = newBounds;\n        }\n        if (this.usePanning) {\n            this._mapsWrapper.panToBounds(bounds, padding);\n            return;\n        }\n        this._mapsWrapper.fitBounds(bounds, padding);\n    }\n    _isLatLngBoundsLiteral(bounds) {\n        return bounds != null && bounds.extend === undefined;\n    }\n    _handleMapCenterChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(() => {\n            this._mapsWrapper.getCenter().then((center) => {\n                this.latitude = center.lat();\n                this.longitude = center.lng();\n                this.centerChange.emit({ lat: this.latitude, lng: this.longitude });\n            });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleBoundsChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(() => {\n            this._mapsWrapper.getBounds().then((bounds) => { this.boundsChange.emit(bounds); });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapTypeIdChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('maptypeid_changed').subscribe(() => {\n            this._mapsWrapper.getMapTypeId().then((mapTypeId) => { this.mapTypeIdChange.emit(mapTypeId); });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapZoomChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(() => {\n            this._mapsWrapper.getZoom().then((z) => {\n                this.zoom = z;\n                this.zoomChange.emit(z);\n            });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleIdleEvent() {\n        const s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(() => { this.idle.emit(void 0); });\n        this._observableSubscriptions.push(s);\n    }\n    _handleTilesLoadedEvent() {\n        const s = this._mapsWrapper.subscribeToMapEvent('tilesloaded').subscribe(() => this.tilesLoaded.emit(void 0));\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapMouseEvents() {\n        const events = [\n            { name: 'click', emitter: this.mapClick },\n            { name: 'rightclick', emitter: this.mapRightClick },\n            { name: 'dblclick', emitter: this.mapDblClick },\n        ];\n        events.forEach((e) => {\n            const s = this._mapsWrapper.subscribeToMapEvent(e.name).subscribe((event) => {\n                let value = {\n                    coords: {\n                        lat: event.latLng.lat(),\n                        lng: event.latLng.lng(),\n                    },\n                    placeId: event.placeId,\n                };\n                // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\n                if (value.placeId && !this.showDefaultInfoWindow) {\n                    event.stop();\n                }\n                e.emitter.emit(value);\n            });\n            this._observableSubscriptions.push(s);\n        });\n    }\n};\n/**\n * Map option attributes that can change over time\n */\nAgmMap._mapOptionsAttributes = [\n    'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\n    'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl',\n    'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom',\n    'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions',\n    'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions',\n    'mapTypeId', 'clickableIcons', 'gestureHandling', 'tilt', 'restriction',\n];\nAgmMap.ctorParameters = () => [\n    { type: ElementRef },\n    { type: GoogleMapsAPIWrapper },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: FitBoundsService },\n    { type: NgZone }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"zoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMap.prototype, \"minZoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMap.prototype, \"maxZoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMap.prototype, \"controlSize\", void 0);\n__decorate([\n    Input('mapDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"disableDoubleClickZoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"disableDefaultUI\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"scrollwheel\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"backgroundColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"draggableCursor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"draggingCursor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"keyboardShortcuts\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmMap.prototype, \"zoomControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"zoomControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array)\n], AgmMap.prototype, \"styles\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"usePanning\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmMap.prototype, \"streetViewControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"streetViewControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fitBounds\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fitBoundsPadding\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"scaleControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"scaleControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"mapTypeControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"mapTypeControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"panControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"panControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"rotateControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"rotateControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fullscreenControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fullscreenControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"mapTypeId\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"clickableIcons\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"showDefaultInfoWindow\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"gestureHandling\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"tilt\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"restriction\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"centerChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"boundsChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapTypeIdChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"idle\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"zoomChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapReady\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"tilesLoaded\", void 0);\nAgmMap = AgmMap_1 = __decorate([\n    Component({\n        selector: 'agm-map',\n        providers: [\n            CircleManager,\n            DataLayerManager,\n            DataLayerManager,\n            FitBoundsService,\n            GoogleMapsAPIWrapper,\n            InfoWindowManager,\n            KmlLayerManager,\n            LayerManager,\n            MarkerManager,\n            PolygonManager,\n            PolylineManager,\n            RectangleManager,\n        ],\n        host: {\n            // todo: deprecated - we will remove it with the next version\n            '[class.sebm-google-map-container]': 'true',\n        },\n        template: `\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\n              <div class='agm-map-content'>\n                <ng-content></ng-content>\n              </div>\n  `,\n        styles: [`\n    .agm-map-container-inner {\n      width: inherit;\n      height: inherit;\n    }\n    .agm-map-content {\n      display:none;\n    }\n  `]\n    }),\n    __param(2, Inject(PLATFORM_ID)),\n    __metadata(\"design:paramtypes\", [ElementRef,\n        GoogleMapsAPIWrapper,\n        Object,\n        FitBoundsService,\n        NgZone])\n], AgmMap);\n\nvar AgmMarker_1;\nlet markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmMarker = AgmMarker_1 = class AgmMarker {\n    constructor(_markerManager) {\n        this._markerManager = _markerManager;\n        /**\n         * If true, the marker can be dragged. Default value is false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If true, the marker is visible\n         */\n        this.visible = true;\n        /**\n         * Whether to automatically open the child info window when the marker is clicked.\n         */\n        this.openInfoWindow = true;\n        /**\n         * The marker's opacity between 0.0 and 1.0.\n         */\n        this.opacity = 1;\n        /**\n         * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n         * front of markers with lower values. By default, markers are displayed according to their\n         * vertical position on screen, with lower markers appearing in front of markers further up the\n         * screen.\n         */\n        this.zIndex = 1;\n        /**\n         * If true, the marker can be clicked. Default value is true.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.clickable = true;\n        /**\n         * This event is fired when the marker's animation property changes.\n         *\n         * @memberof AgmMarker\n         */\n        this.animationChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the marker.\n         */\n        this.markerClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks twice on the marker.\n         */\n        this.markerDblClick = new EventEmitter();\n        /**\n         * This event is fired when the user rightclicks on the marker.\n         */\n        this.markerRightClick = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the marker.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the marker.\n         */\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the marker.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user mouses over the marker.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the user mouses outside the marker.\n         */\n        this.mouseOut = new EventEmitter();\n        /** @internal */\n        this.infoWindow = new QueryList();\n        this._markerAddedToManger = false;\n        this._observableSubscriptions = [];\n        this._fitBoundsDetails$ = new ReplaySubject(1);\n        this._id = (markerId++).toString();\n    }\n    /* @internal */\n    ngAfterContentInit() {\n        this.handleInfoWindowUpdate();\n        this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n    }\n    handleInfoWindowUpdate() {\n        if (this.infoWindow.length > 1) {\n            throw new Error('Expected no more than one info window.');\n        }\n        this.infoWindow.forEach(marker => {\n            marker.hostMarker = this;\n        });\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (typeof this.latitude === 'string') {\n            this.latitude = Number(this.latitude);\n        }\n        if (typeof this.longitude === 'string') {\n            this.longitude = Number(this.longitude);\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        if (!this._markerAddedToManger) {\n            this._markerManager.addMarker(this);\n            this._updateFitBoundsDetails();\n            this._markerAddedToManger = true;\n            this._addEventListeners();\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._markerManager.updateMarkerPosition(this);\n            this._updateFitBoundsDetails();\n        }\n        if (changes['title']) {\n            this._markerManager.updateTitle(this);\n        }\n        if (changes['label']) {\n            this._markerManager.updateLabel(this);\n        }\n        if (changes['draggable']) {\n            this._markerManager.updateDraggable(this);\n        }\n        if (changes['iconUrl']) {\n            this._markerManager.updateIcon(this);\n        }\n        if (changes['opacity']) {\n            this._markerManager.updateOpacity(this);\n        }\n        if (changes['visible']) {\n            this._markerManager.updateVisible(this);\n        }\n        if (changes['zIndex']) {\n            this._markerManager.updateZIndex(this);\n        }\n        if (changes['clickable']) {\n            this._markerManager.updateClickable(this);\n        }\n        if (changes['animation']) {\n            this._markerManager.updateAnimation(this);\n        }\n    }\n    /** @internal */\n    getFitBoundsDetails$() {\n        return this._fitBoundsDetails$.asObservable();\n    }\n    _updateFitBoundsDetails() {\n        this._fitBoundsDetails$.next({ latLng: { lat: this.latitude, lng: this.longitude } });\n    }\n    _addEventListeners() {\n        const cs = this._markerManager.createEventObservable('click', this).subscribe(() => {\n            if (this.openInfoWindow) {\n                this.infoWindow.forEach(infoWindow => infoWindow.open());\n            }\n            this.markerClick.emit(this);\n        });\n        this._observableSubscriptions.push(cs);\n        const dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(() => {\n            this.markerDblClick.emit(null);\n        });\n        this._observableSubscriptions.push(dcs);\n        const rc = this._markerManager.createEventObservable('rightclick', this).subscribe(() => {\n            this.markerRightClick.emit(null);\n        });\n        this._observableSubscriptions.push(rc);\n        const ds = this._markerManager.createEventObservable('dragstart', this)\n            .subscribe((e) => {\n            this.dragStart.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(ds);\n        const d = this._markerManager.createEventObservable('drag', this)\n            .subscribe((e) => {\n            this.drag.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(d);\n        const de = this._markerManager.createEventObservable('dragend', this)\n            .subscribe((e) => {\n            this.dragEnd.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(de);\n        const mover = this._markerManager.createEventObservable('mouseover', this)\n            .subscribe((e) => {\n            this.mouseOver.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mover);\n        const mout = this._markerManager.createEventObservable('mouseout', this)\n            .subscribe((e) => {\n            this.mouseOut.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mout);\n        const anChng = this._markerManager.createEventObservable('animation_changed', this)\n            .subscribe(() => {\n            this.animationChange.emit(this.animation);\n        });\n        this._observableSubscriptions.push(anChng);\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return 'AgmMarker-' + this._id.toString(); }\n    /** @internal */\n    ngOnDestroy() {\n        this._markerManager.deleteMarker(this);\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach((s) => s.unsubscribe());\n    }\n};\nAgmMarker.ctorParameters = () => [\n    { type: MarkerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMarker.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMarker.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarker.prototype, \"title\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"label\", void 0);\n__decorate([\n    Input('markerDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarker.prototype, \"iconUrl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"openInfoWindow\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"opacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"zIndex\", void 0);\n__decorate([\n    Input('markerClickable'),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"clickable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarker.prototype, \"animation\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"animationChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"markerClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"markerDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"markerRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"dragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"drag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"dragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"mouseOut\", void 0);\n__decorate([\n    ContentChildren(AgmInfoWindow),\n    __metadata(\"design:type\", QueryList)\n], AgmMarker.prototype, \"infoWindow\", void 0);\nAgmMarker = AgmMarker_1 = __decorate([\n    Directive({\n        selector: 'agm-marker',\n        providers: [\n            { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmMarker_1) },\n        ],\n        inputs: [\n            'latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl',\n            'openInfoWindow', 'opacity', 'visible', 'zIndex', 'animation',\n        ],\n        outputs: ['markerClick', 'dragStart', 'drag', 'dragEnd', 'mouseOver', 'mouseOut'],\n    }),\n    __metadata(\"design:paramtypes\", [MarkerManager])\n], AgmMarker);\n\nvar AgmPolygon_1;\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array<LatLngLiteral> = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\nlet AgmPolygon = AgmPolygon_1 = class AgmPolygon {\n    constructor(_polygonManager) {\n        this._polygonManager = _polygonManager;\n        /**\n         * Indicates whether this Polygon handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic\n         * property defines the mode of dragging. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control\n         * points shown at the vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will\n         * follow the curvature of the Earth. When false, edges of the polygon are\n         * rendered as straight lines in screen space. Note that the shape of a\n         * geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * The ordered sequence of coordinates that designates a closed loop.\n         * Unlike polylines, a polygon may consist of one or more paths.\n         *  As a result, the paths property may specify one or more arrays of\n         * LatLng coordinates. Paths are closed automatically; do not repeat the\n         * first vertex of the path as the last vertex. Simple polygons may be\n         * defined using a single array of LatLngs. More complex polygons may\n         * specify an array of arrays. Any simple arrays are converted into Arrays.\n         * Inserting or removing LatLngs from the Array will automatically update\n         * the polygon on the map.\n         */\n        this.paths = [];\n        /**\n         * This event is fired when the DOM click event is fired on the Polygon.\n         */\n        this.polyClick = new EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polygon.\n         */\n        this.polyDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polygon.\n         */\n        this.polyDrag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polygon.\n         */\n        this.polyDragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polygon.\n         */\n        this.polyDragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polygon.\n         */\n        this.polyMouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polygon.\n         */\n        this.polyMouseMove = new EventEmitter();\n        /**\n         * This event is fired on Polygon mouseout.\n         */\n        this.polyMouseOut = new EventEmitter();\n        /**\n         * This event is fired on Polygon mouseover.\n         */\n        this.polyMouseOver = new EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polygon\n         */\n        this.polyMouseUp = new EventEmitter();\n        /**\n         * This event is fired when the Polygon is right-clicked on.\n         */\n        this.polyRightClick = new EventEmitter();\n        /**\n         * This event is fired after Polygon first path changes.\n         */\n        this.polyPathsChange = new EventEmitter();\n        this._polygonAddedToManager = false;\n        this._subscriptions = [];\n    }\n    /** @internal */\n    ngAfterContentInit() {\n        if (!this._polygonAddedToManager) {\n            this._init();\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this._polygonAddedToManager) {\n            this._init();\n            return;\n        }\n        this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n    }\n    _init() {\n        this._polygonManager.addPolygon(this);\n        this._polygonAddedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const handlers = [\n            { name: 'click', handler: (ev) => this.polyClick.emit(ev) },\n            { name: 'dblclick', handler: (ev) => this.polyDblClick.emit(ev) },\n            { name: 'drag', handler: (ev) => this.polyDrag.emit(ev) },\n            { name: 'dragend', handler: (ev) => this.polyDragEnd.emit(ev) },\n            { name: 'dragstart', handler: (ev) => this.polyDragStart.emit(ev) },\n            { name: 'mousedown', handler: (ev) => this.polyMouseDown.emit(ev) },\n            { name: 'mousemove', handler: (ev) => this.polyMouseMove.emit(ev) },\n            { name: 'mouseout', handler: (ev) => this.polyMouseOut.emit(ev) },\n            { name: 'mouseover', handler: (ev) => this.polyMouseOver.emit(ev) },\n            { name: 'mouseup', handler: (ev) => this.polyMouseUp.emit(ev) },\n            { name: 'rightclick', handler: (ev) => this.polyRightClick.emit(ev) },\n        ];\n        handlers.forEach((obj) => {\n            const os = this._polygonManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n        this._polygonManager.createPathEventObservable(this)\n            .then(paths$ => {\n            const os = paths$.subscribe(pathEvent => this.polyPathsChange.emit(pathEvent));\n            this._subscriptions.push(os);\n        });\n    }\n    _updatePolygonOptions(changes) {\n        return Object.keys(changes)\n            .filter(k => AgmPolygon_1._polygonOptionsAttributes.indexOf(k) !== -1)\n            .reduce((obj, k) => {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    ngOnDestroy() {\n        this._polygonManager.deletePolygon(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach((s) => s.unsubscribe());\n    }\n    getPath() {\n        return this._polygonManager.getPath(this);\n    }\n    getPaths() {\n        return this._polygonManager.getPaths(this);\n    }\n};\nAgmPolygon._polygonOptionsAttributes = [\n    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',\n    'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',\n    'editable', 'visible',\n];\nAgmPolygon.ctorParameters = () => [\n    { type: PolygonManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"clickable\", void 0);\n__decorate([\n    Input('polyDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolygon.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"geodesic\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array)\n], AgmPolygon.prototype, \"paths\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolygon.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmPolygon.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDrag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"polyPathsChange\", void 0);\nAgmPolygon = AgmPolygon_1 = __decorate([\n    Directive({\n        selector: 'agm-polygon',\n    }),\n    __metadata(\"design:paramtypes\", [PolygonManager])\n], AgmPolygon);\n\n/**\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\n * or custom icons either along the entire line, or in a specific part of it.\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\n *\n * ### Example\n * ```html\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\n *          </agm-icon-sequence>\n *      </agm-polyline>\n *    </agm-map>\n * ```\n *\n * @export\n * @class AgmPolylineIcon\n */\nlet AgmPolylineIcon = class AgmPolylineIcon {\n    ngOnInit() {\n        if (this.path == null) {\n            throw new Error('Icon Sequence path is required');\n        }\n    }\n};\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmPolylineIcon.prototype, \"fixedRotation\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"offset\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"repeat\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"anchorX\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"anchorY\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"path\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"rotation\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"scale\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"strokeWeight\", void 0);\nAgmPolylineIcon = __decorate([\n    Directive({ selector: 'agm-polyline agm-icon-sequence' })\n], AgmPolylineIcon);\n\nvar AgmPolylinePoint_1;\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * AgmPolyline}\n */\nlet AgmPolylinePoint = AgmPolylinePoint_1 = class AgmPolylinePoint {\n    constructor() {\n        /**\n         * This event emitter gets emitted when the position of the point changed.\n         */\n        this.positionChanged = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        if (changes['latitude'] || changes['longitude']) {\n            const position = {\n                lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\n                lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude,\n            };\n            this.positionChanged.emit(position);\n        }\n    }\n    /** @internal */\n    getFitBoundsDetails$() {\n        return this.positionChanged.pipe(startWith({ lat: this.latitude, lng: this.longitude }), map(position => ({ latLng: position })));\n    }\n};\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylinePoint.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylinePoint.prototype, \"longitude\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolylinePoint.prototype, \"positionChanged\", void 0);\nAgmPolylinePoint = AgmPolylinePoint_1 = __decorate([\n    Directive({\n        selector: 'agm-polyline-point',\n        providers: [\n            { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmPolylinePoint_1) },\n        ],\n    }),\n    __metadata(\"design:paramtypes\", [])\n], AgmPolylinePoint);\n\nvar AgmPolyline_1;\nlet polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmPolyline = AgmPolyline_1 = class AgmPolyline {\n    constructor(_polylineManager) {\n        this._polylineManager = _polylineManager;\n        /**\n         * Indicates whether this Polyline handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic property defines the\n         * mode of dragging. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control points shown at the\n         * vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n         * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n         * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * Whether this polyline is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the DOM click event is fired on the Polyline.\n         */\n        this.lineClick = new EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polyline.\n         */\n        this.lineDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polyline.\n         */\n        this.lineDrag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polyline.\n         */\n        this.lineDragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polyline.\n         */\n        this.lineDragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polyline.\n         */\n        this.lineMouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polyline.\n         */\n        this.lineMouseMove = new EventEmitter();\n        /**\n         * This event is fired on Polyline mouseout.\n         */\n        this.lineMouseOut = new EventEmitter();\n        /**\n         * This event is fired on Polyline mouseover.\n         */\n        this.lineMouseOver = new EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polyline\n         */\n        this.lineMouseUp = new EventEmitter();\n        /**\n         * This event is fired when the Polyline is right-clicked on.\n         */\n        this.lineRightClick = new EventEmitter();\n        /**\n         * This event is fired after Polyline's path changes.\n         */\n        this.polyPathChange = new EventEmitter();\n        this._polylineAddedToManager = false;\n        this._subscriptions = [];\n        this._id = (polylineId++).toString();\n    }\n    /** @internal */\n    ngAfterContentInit() {\n        if (this.points.length) {\n            this.points.forEach((point) => {\n                const s = point.positionChanged.subscribe(() => { this._polylineManager.updatePolylinePoints(this); });\n                this._subscriptions.push(s);\n            });\n        }\n        if (!this._polylineAddedToManager) {\n            this._init();\n        }\n        const pointSub = this.points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\n        this._subscriptions.push(pointSub);\n        this._polylineManager.updatePolylinePoints(this);\n        const iconSub = this.iconSequences.changes.subscribe(() => this._polylineManager.updateIconSequences(this));\n        this._subscriptions.push(iconSub);\n    }\n    ngOnChanges(changes) {\n        if (!this._polylineAddedToManager) {\n            this._init();\n            return;\n        }\n        let options = {};\n        const optionKeys = Object.keys(changes).filter(k => AgmPolyline_1._polylineOptionsAttributes.indexOf(k) !== -1);\n        optionKeys.forEach(k => options[k] = changes[k].currentValue);\n        this._polylineManager.setPolylineOptions(this, options);\n    }\n    getPath() {\n        return this._polylineManager.getPath(this);\n    }\n    _init() {\n        this._polylineManager.addPolyline(this);\n        this._polylineAddedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const handlers = [\n            { name: 'click', handler: (ev) => this.lineClick.emit(ev) },\n            { name: 'dblclick', handler: (ev) => this.lineDblClick.emit(ev) },\n            { name: 'drag', handler: (ev) => this.lineDrag.emit(ev) },\n            { name: 'dragend', handler: (ev) => this.lineDragEnd.emit(ev) },\n            { name: 'dragstart', handler: (ev) => this.lineDragStart.emit(ev) },\n            { name: 'mousedown', handler: (ev) => this.lineMouseDown.emit(ev) },\n            { name: 'mousemove', handler: (ev) => this.lineMouseMove.emit(ev) },\n            { name: 'mouseout', handler: (ev) => this.lineMouseOut.emit(ev) },\n            { name: 'mouseover', handler: (ev) => this.lineMouseOver.emit(ev) },\n            { name: 'mouseup', handler: (ev) => this.lineMouseUp.emit(ev) },\n            { name: 'rightclick', handler: (ev) => this.lineRightClick.emit(ev) },\n        ];\n        handlers.forEach((obj) => {\n            const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n        this._polylineManager.createPathEventObservable(this).then((ob$) => {\n            const os = ob$.subscribe(pathEvent => this.polyPathChange.emit(pathEvent));\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    _getPoints() {\n        if (this.points) {\n            return this.points.toArray();\n        }\n        return [];\n    }\n    _getIcons() {\n        if (this.iconSequences) {\n            return this.iconSequences.toArray();\n        }\n        return [];\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    ngOnDestroy() {\n        this._polylineManager.deletePolyline(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach((s) => s.unsubscribe());\n    }\n};\nAgmPolyline._polylineOptionsAttributes = [\n    'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\n    'zIndex',\n];\nAgmPolyline.ctorParameters = () => [\n    { type: PolylineManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"clickable\", void 0);\n__decorate([\n    Input('polylineDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"geodesic\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolyline.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolyline.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolyline.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolyline.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDrag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"polyPathChange\", void 0);\n__decorate([\n    ContentChildren(AgmPolylinePoint),\n    __metadata(\"design:type\", QueryList)\n], AgmPolyline.prototype, \"points\", void 0);\n__decorate([\n    ContentChildren(AgmPolylineIcon),\n    __metadata(\"design:type\", QueryList)\n], AgmPolyline.prototype, \"iconSequences\", void 0);\nAgmPolyline = AgmPolyline_1 = __decorate([\n    Directive({\n        selector: 'agm-polyline',\n    }),\n    __metadata(\"design:paramtypes\", [PolylineManager])\n], AgmPolyline);\n\nvar AgmRectangle_1;\nlet AgmRectangle = AgmRectangle_1 = class AgmRectangle {\n    constructor(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Rectangle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this rectangle over the map. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this rectangle by dragging the control points shown at\n         * the center and around the circumference of the rectangle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this rectangle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the rectangle's is changed.\n         */\n        this.boundsChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the rectangle.\n         */\n        this.rectangleClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the rectangle.\n         */\n        this.rectangleDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the rectangle.\n         */\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the rectangle.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the rectangle.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the rectangle.\n         */\n        this.mouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the rectangle.\n         */\n        this.mouseMove = new EventEmitter();\n        /**\n         * This event is fired on rectangle mouseout.\n         */\n        this.mouseOut = new EventEmitter();\n        /**\n         * This event is fired on rectangle mouseover.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the rectangle.\n         */\n        this.mouseUp = new EventEmitter();\n        /**\n         * This event is fired when the rectangle is right-clicked on.\n         */\n        this.rightClick = new EventEmitter();\n        this._rectangleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    ngOnInit() {\n        this._manager.addRectangle(this);\n        this._rectangleAddedToManager = true;\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._rectangleAddedToManager) {\n            return;\n        }\n        if (changes['north'] ||\n            changes['east'] ||\n            changes['south'] ||\n            changes['west']) {\n            this._manager.setBounds(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        this._updateRectangleOptionsChanges(changes);\n    }\n    _updateRectangleOptionsChanges(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmRectangle_1._mapOptions.indexOf(k) !== -1);\n        optionKeys.forEach(k => {\n            options[k] = changes[k].currentValue;\n        });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _registerEventListeners() {\n        let events = new Map();\n        events.set('bounds_changed', this.boundsChange);\n        events.set('click', this.rectangleClick);\n        events.set('dblclick', this.rectangleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragStart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('rightclick', this.rightClick);\n        events.forEach((eventEmitter, eventName) => {\n            this._eventSubscriptions.push(this._manager\n                .createEventObservable(eventName, this)\n                .subscribe(value => {\n                switch (eventName) {\n                    case 'bounds_changed':\n                        this._manager.getBounds(this).then(bounds => eventEmitter.emit({\n                            north: bounds.getNorthEast().lat(),\n                            east: bounds.getNorthEast().lng(),\n                            south: bounds.getSouthWest().lat(),\n                            west: bounds.getSouthWest().lng(),\n                        }));\n                        break;\n                    default:\n                        eventEmitter.emit({\n                            coords: { lat: value.latLng.lat(), lng: value.latLng.lng() },\n                        });\n                }\n            }));\n        });\n    }\n    /** @internal */\n    ngOnDestroy() {\n        this._eventSubscriptions.forEach(function (s) {\n            s.unsubscribe();\n        });\n        this._eventSubscriptions = null;\n        this._manager.removeRectangle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Rectangle.\n     */\n    getBounds() {\n        return this._manager.getBounds(this);\n    }\n};\nAgmRectangle._mapOptions = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n];\nAgmRectangle.ctorParameters = () => [\n    { type: RectangleManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"north\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"east\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"south\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"west\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"clickable\", void 0);\n__decorate([\n    Input('rectangleDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmRectangle.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmRectangle.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmRectangle.prototype, \"strokePosition\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"boundsChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"rectangleClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"rectangleDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"drag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"dragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"dragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"rightClick\", void 0);\nAgmRectangle = AgmRectangle_1 = __decorate([\n    Directive({\n        selector: 'agm-rectangle',\n    }),\n    __metadata(\"design:paramtypes\", [RectangleManager])\n], AgmRectangle);\n\nlet layerId$3 = 0;\n/*\n * This directive adds a transit layer to a google map instance\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\n * */\nlet AgmTransitLayer = class AgmTransitLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$3++).toString();\n        /**\n         * Hide/show transit layer\n         */\n        this.visible = true;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addTransitLayer(this, { visible: this.visible });\n        this._addedToManager = true;\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        if (changes['visible'] != null) {\n            this._manager.toggleLayerVisibility(this, { visible: changes['visible'].currentValue });\n        }\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmTransitLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n};\nAgmTransitLayer.ctorParameters = () => [\n    { type: LayerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmTransitLayer.prototype, \"visible\", void 0);\nAgmTransitLayer = __decorate([\n    Directive({\n        selector: 'agm-transit-layer',\n    }),\n    __metadata(\"design:paramtypes\", [LayerManager])\n], AgmTransitLayer);\n\nvar google$1;\nvar SymbolPath;\n(function (SymbolPath) {\n    SymbolPath[SymbolPath[\"BACKWARD_CLOSED_ARROW\"] = 3] = \"BACKWARD_CLOSED_ARROW\";\n    SymbolPath[SymbolPath[\"BACKWARD_OPEN_ARROW\"] = 4] = \"BACKWARD_OPEN_ARROW\";\n    SymbolPath[SymbolPath[\"CIRCLE\"] = 0] = \"CIRCLE\";\n    SymbolPath[SymbolPath[\"FORWARD_CLOSED_ARROW\"] = 1] = \"FORWARD_CLOSED_ARROW\";\n    SymbolPath[SymbolPath[\"FORWARD_OPEN_ARROW\"] = 2] = \"FORWARD_OPEN_ARROW\";\n})(SymbolPath || (SymbolPath = {}));\n/**\n * Identifiers used to specify the placement of controls on the map. Controls are\n * positioned relative to other controls in the same layout position. Controls that\n * are added first are positioned closer to the edge of the map.\n */\nvar ControlPosition;\n(function (ControlPosition) {\n    ControlPosition[ControlPosition[\"RIGHT_BOTTOM\"] = 0] = \"RIGHT_BOTTOM\";\n    ControlPosition[ControlPosition[\"TOP_LEFT\"] = 1] = \"TOP_LEFT\";\n    ControlPosition[ControlPosition[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n    ControlPosition[ControlPosition[\"TOP_RIGHT\"] = 3] = \"TOP_RIGHT\";\n    ControlPosition[ControlPosition[\"LEFT_CENTER\"] = 4] = \"LEFT_CENTER\";\n    ControlPosition[ControlPosition[\"LEFT_TOP\"] = 5] = \"LEFT_TOP\";\n    ControlPosition[ControlPosition[\"LEFT_BOTTOM\"] = 6] = \"LEFT_BOTTOM\";\n    ControlPosition[ControlPosition[\"RIGHT_TOP\"] = 7] = \"RIGHT_TOP\";\n    ControlPosition[ControlPosition[\"RIGHT_CENTER\"] = 8] = \"RIGHT_CENTER\";\n    ControlPosition[ControlPosition[\"BOTTOM_RIGHT\"] = 9] = \"BOTTOM_RIGHT\";\n    ControlPosition[ControlPosition[\"BOTTOM_LEFT\"] = 10] = \"BOTTOM_LEFT\";\n    ControlPosition[ControlPosition[\"BOTTOM_CENTER\"] = 11] = \"BOTTOM_CENTER\";\n})(ControlPosition || (ControlPosition = {}));\nvar MapTypeId;\n(function (MapTypeId) {\n    /** This map type displays a transparent layer of major streets on satellite images. */\n    MapTypeId[MapTypeId[\"HYBRID\"] = 0] = \"HYBRID\";\n    /** This map type displays a normal street map. */\n    MapTypeId[MapTypeId[\"ROADMAP\"] = 1] = \"ROADMAP\";\n    /** This map type displays satellite images. */\n    MapTypeId[MapTypeId[\"SATELLITE\"] = 2] = \"SATELLITE\";\n    /** This map type displays maps with physical features such as terrain and vegetation. */\n    MapTypeId[MapTypeId[\"TERRAIN\"] = 3] = \"TERRAIN\";\n})(MapTypeId || (MapTypeId = {}));\nvar MapTypeControlStyle;\n(function (MapTypeControlStyle) {\n    MapTypeControlStyle[MapTypeControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    MapTypeControlStyle[MapTypeControlStyle[\"DROPDOWN_MENU\"] = 2] = \"DROPDOWN_MENU\";\n    MapTypeControlStyle[MapTypeControlStyle[\"HORIZONTAL_BAR\"] = 1] = \"HORIZONTAL_BAR\";\n})(MapTypeControlStyle || (MapTypeControlStyle = {}));\nvar ScaleControlStyle;\n(function (ScaleControlStyle) {\n    ScaleControlStyle[ScaleControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(ScaleControlStyle || (ScaleControlStyle = {}));\nvar ZoomControlStyle;\n(function (ZoomControlStyle) {\n    ZoomControlStyle[ZoomControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    ZoomControlStyle[ZoomControlStyle[\"LARGE\"] = 1] = \"LARGE\";\n    ZoomControlStyle[ZoomControlStyle[\"SMALL\"] = 2] = \"SMALL\";\n})(ZoomControlStyle || (ZoomControlStyle = {}));\nvar GeocoderLocationType;\n(function (GeocoderLocationType) {\n    GeocoderLocationType[\"APPROXIMATE\"] = \"APPROXIMATE\";\n    GeocoderLocationType[\"GEOMETRIC_CENTER\"] = \"GEOMETRIC_CENTER\";\n    GeocoderLocationType[\"RANGE_INTERPOLATED\"] = \"RANGE_INTERPOLATED\";\n    GeocoderLocationType[\"ROOFTOP\"] = \"ROOFTOP\";\n})(GeocoderLocationType || (GeocoderLocationType = {}));\nvar GeocoderStatus;\n(function (GeocoderStatus) {\n    GeocoderStatus[\"ERROR\"] = \"ERROR\";\n    GeocoderStatus[\"INVALID_REQUEST\"] = \"INVALID_REQUEST\";\n    GeocoderStatus[\"OK\"] = \"OK\";\n    GeocoderStatus[\"OVER_QUERY_LIMIT\"] = \"OVER_QUERY_LIMIT\";\n    GeocoderStatus[\"REQUEST_DENIED\"] = \"REQUEST_DENIED\";\n    GeocoderStatus[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    GeocoderStatus[\"ZERO_RESULTS\"] = \"ZERO_RESULTS\";\n})(GeocoderStatus || (GeocoderStatus = {}));\n\nlet AgmGeocoder = class AgmGeocoder {\n    constructor(loader) {\n        const connectableGeocoder$ = new Observable(subscriber => {\n            loader.load().then(() => subscriber.next());\n        })\n            .pipe(map(() => this._createGeocoder()), multicast(new ReplaySubject(1)));\n        connectableGeocoder$.connect(); // ignore the subscription\n        // since we will remain subscribed till application exits\n        this.geocoder$ = connectableGeocoder$;\n    }\n    geocode(request) {\n        return this.geocoder$.pipe(switchMap((geocoder) => this._getGoogleResults(geocoder, request)));\n    }\n    _getGoogleResults(geocoder, request) {\n        const geocodeObservable = bindCallback(geocoder.geocode);\n        return geocodeObservable(request).pipe(switchMap(([results, status]) => {\n            if (status === GeocoderStatus.OK) {\n                return of(results);\n            }\n            return throwError(status);\n        }));\n    }\n    _createGeocoder() {\n        return new google.maps.Geocoder();\n    }\n};\nAgmGeocoder.ctorParameters = () => [\n    { type: MapsAPILoader }\n];\nAgmGeocoder.ngInjectableDef = ɵɵdefineInjectable({ factory: function AgmGeocoder_Factory() { return new AgmGeocoder(ɵɵinject(MapsAPILoader)); }, token: AgmGeocoder, providedIn: \"root\" });\nAgmGeocoder = __decorate([\n    Injectable({ providedIn: 'root' }),\n    __metadata(\"design:paramtypes\", [MapsAPILoader])\n], AgmGeocoder);\n\nclass WindowRef {\n    getNativeWindow() { return window; }\n}\nclass DocumentRef {\n    getNativeDocument() { return document; }\n}\nconst BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\n\nvar GoogleMapsScriptProtocol;\n(function (GoogleMapsScriptProtocol) {\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nconst LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\nlet LazyMapsAPILoader = class LazyMapsAPILoader extends MapsAPILoader {\n    constructor(config = null, w, d, localeId) {\n        super();\n        this.localeId = localeId;\n        this._SCRIPT_ID = 'agmGoogleMapsApiScript';\n        this.callbackName = `agmLazyMapsAPILoader`;\n        this._config = config || {};\n        this._windowRef = w;\n        this._documentRef = d;\n    }\n    load() {\n        const window = this._windowRef.getNativeWindow();\n        if (window.google && window.google.maps) {\n            // Google maps already loaded on the page.\n            return Promise.resolve();\n        }\n        if (this._scriptLoadingPromise) {\n            return this._scriptLoadingPromise;\n        }\n        // this can happen in HMR situations or Stackblitz.io editors.\n        const scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n        if (scriptOnPage) {\n            this._assignScriptLoadingPromise(scriptOnPage);\n            return this._scriptLoadingPromise;\n        }\n        const script = this._documentRef.getNativeDocument().createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.defer = true;\n        script.id = this._SCRIPT_ID;\n        script.src = this._getScriptSrc(this.callbackName);\n        this._assignScriptLoadingPromise(script);\n        this._documentRef.getNativeDocument().body.appendChild(script);\n        return this._scriptLoadingPromise;\n    }\n    _assignScriptLoadingPromise(scriptElem) {\n        this._scriptLoadingPromise = new Promise((resolve, reject) => {\n            this._windowRef.getNativeWindow()[this.callbackName] = () => {\n                resolve();\n            };\n            scriptElem.onerror = (error) => {\n                reject(error);\n            };\n        });\n    }\n    _getScriptSrc(callbackName) {\n        let protocolType = (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n        let protocol;\n        switch (protocolType) {\n            case GoogleMapsScriptProtocol.AUTO:\n                protocol = '';\n                break;\n            case GoogleMapsScriptProtocol.HTTP:\n                protocol = 'http:';\n                break;\n            case GoogleMapsScriptProtocol.HTTPS:\n                protocol = 'https:';\n                break;\n        }\n        const hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n        const queryParams = {\n            v: this._config.apiVersion || 'quarterly',\n            callback: callbackName,\n            key: this._config.apiKey,\n            client: this._config.clientId,\n            channel: this._config.channel,\n            libraries: this._config.libraries,\n            region: this._config.region,\n            language: this._config.language || this.localeId !== 'en-US' ? this.localeId : null,\n        };\n        const params = Object.keys(queryParams)\n            .filter((k) => queryParams[k] != null)\n            .filter((k) => {\n            // remove empty arrays\n            return !Array.isArray(queryParams[k]) ||\n                (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n        })\n            .map((k) => {\n            // join arrays as comma seperated strings\n            let i = queryParams[k];\n            if (Array.isArray(i)) {\n                return { key: k, value: i.join(',') };\n            }\n            return { key: k, value: queryParams[k] };\n        })\n            .map((entry) => {\n            return `${entry.key}=${entry.value}`;\n        })\n            .join('&');\n        return `${protocol}//${hostAndPath}?${params}`;\n    }\n};\nLazyMapsAPILoader.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LAZY_MAPS_API_CONFIG,] }] },\n    { type: WindowRef },\n    { type: DocumentRef },\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nLazyMapsAPILoader = __decorate([\n    Injectable(),\n    __param(0, Optional()), __param(0, Inject(LAZY_MAPS_API_CONFIG)),\n    __param(3, Inject(LOCALE_ID)),\n    __metadata(\"design:paramtypes\", [Object, WindowRef, DocumentRef, String])\n], LazyMapsAPILoader);\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nclass NoOpMapsAPILoader {\n    load() {\n        if (!window.google || !window.google.maps) {\n            throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n        }\n        return Promise.resolve();\n    }\n}\n\n// exported map types\n\nvar AgmCoreModule_1;\n/**\n * @internal\n */\nfunction coreDirectives() {\n    return [\n        AgmBicyclingLayer,\n        AgmCircle,\n        AgmDataLayer,\n        AgmFitBounds,\n        AgmInfoWindow,\n        AgmKmlLayer,\n        AgmMap,\n        AgmMarker,\n        AgmPolygon,\n        AgmPolyline,\n        AgmPolylineIcon,\n        AgmPolylinePoint,\n        AgmRectangle,\n        AgmTransitLayer,\n    ];\n}\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\nlet AgmCoreModule = AgmCoreModule_1 = class AgmCoreModule {\n    /**\n     * Please use this method when you register the module at the root level.\n     */\n    static forRoot(lazyMapsAPILoaderConfig) {\n        return {\n            ngModule: AgmCoreModule_1,\n            providers: [\n                ...BROWSER_GLOBALS_PROVIDERS, { provide: MapsAPILoader, useClass: LazyMapsAPILoader },\n                { provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig },\n            ],\n        };\n    }\n};\nAgmCoreModule = AgmCoreModule_1 = __decorate([\n    NgModule({ declarations: coreDirectives(), exports: coreDirectives() })\n], AgmCoreModule);\n\n// main modules\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AgmBicyclingLayer, AgmCircle, AgmCoreModule, AgmDataLayer, AgmFitBounds, AgmGeocoder, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer, CircleManager, ControlPosition, DataLayerManager, FitBoundsAccessor, GeocoderLocationType, GeocoderStatus, GoogleMapsAPIWrapper, GoogleMapsScriptProtocol, InfoWindowManager, KmlLayerManager, LAZY_MAPS_API_CONFIG, LayerManager, LazyMapsAPILoader, MapTypeId, MapsAPILoader, MarkerManager, NoOpMapsAPILoader, PolygonManager, PolylineManager, RectangleManager, ScaleControlStyle, ZoomControlStyle, FitBoundsService as ɵa, coreDirectives as ɵb, WindowRef as ɵc, DocumentRef as ɵd, BROWSER_GLOBALS_PROVIDERS as ɵe };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
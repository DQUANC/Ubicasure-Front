{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/fire/compat/auth\";\nimport * as i3 from \"../userRest/user-rest.service\";\nexport let StationRestService = /*#__PURE__*/(() => {\n  class StationRestService {\n    constructor(http, fireAuth, userRest) {\n      this.http = http;\n      this.fireAuth = fireAuth;\n      this.userRest = userRest;\n      this.httpOptions = new HttpHeaders().set('Content-Type', 'application/json');\n    }\n\n    createStation(params) {\n      return this.http.post(environment.baseUri + 'station/createStation', params, {\n        headers: this.httpOptions.set('Authorization', this.userRest.getToken())\n      });\n    }\n\n    getVolunteerStationsF() {\n      return this.http.get(environment.baseUri + 'station/getVolunteerStationsF', {\n        headers: this.httpOptions.set('Authorization', this.userRest.getToken())\n      });\n    }\n\n    getStations() {\n      return this.http.get(environment.baseUri + 'station/getStations', {\n        headers: this.httpOptions.set('Authorization', this.userRest.getToken())\n      });\n    }\n\n    getMunicipalStationsF() {\n      return this.http.get(environment.baseUri + 'station/getMunicipalStationsF', {\n        headers: this.httpOptions.set('Authorization', this.userRest.getToken())\n      });\n    }\n\n    getFireStations() {\n      return this.http.get(environment.baseUri + 'station/getFireStations', {\n        headers: this.httpOptions.set('Authorization', this.userRest.getToken())\n      });\n    }\n\n    getPoliceStations() {\n      return this.http.get(environment.baseUri + 'station/getPoliceStations', {\n        headers: this.httpOptions.set('Authorization', this.userRest.getToken())\n      });\n    }\n\n    getNationalStationsP() {\n      return this.http.get(environment.baseUri + 'station/getNationalStationsP', {\n        headers: this.httpOptions.set('Authorization', this.userRest.getToken())\n      });\n    }\n\n    getMunicipalStationsP() {\n      return this.http.get(environment.baseUri + 'station/getMunicipalStationsP', {\n        headers: this.httpOptions.set('Authorization', this.userRest.getToken())\n      });\n    }\n\n    updateStation(id, params) {\n      return this.http.put(environment.baseUri + 'station/updateStation/' + id, params, {\n        headers: this.httpOptions.set('Authorization', this.userRest.getToken())\n      });\n    }\n\n    deleteStation(id) {\n      return this.http.delete(environment.baseUri + 'station/deleteStation/' + id, {\n        headers: this.httpOptions.set('Authorization', this.userRest.getToken())\n      });\n    }\n\n  }\n\n  StationRestService.ɵfac = function StationRestService_Factory(t) {\n    return new (t || StationRestService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AngularFireAuth), i0.ɵɵinject(i3.UserRestService));\n  };\n\n  StationRestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StationRestService,\n    factory: StationRestService.ɵfac,\n    providedIn: 'root'\n  });\n  return StationRestService;\n})();","map":null,"metadata":{},"sourceType":"module"}
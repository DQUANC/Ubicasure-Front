{"ast":null,"code":"import { StationModel } from 'src/app/models/station.model';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/stationRest/station-rest.service\";\nimport * as i2 from \"src/app/services/userRest/user-rest.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction BomberosComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"button\", 37);\n    i0.ɵɵtext(2, \"Agregar\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction BomberosComponent_form_53_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function BomberosComponent_form_53_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.updateStation());\n    });\n    i0.ɵɵelementStart(1, \"div\", 38)(2, \"label\", 39);\n    i0.ɵɵtext(3, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 40);\n    i0.ɵɵlistener(\"ngModelChange\", function BomberosComponent_form_53_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.stationUpdated.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 38)(6, \"label\", 39);\n    i0.ɵɵtext(7, \"Tel\\u00E9fono\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 41);\n    i0.ɵɵlistener(\"ngModelChange\", function BomberosComponent_form_53_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.stationUpdated.phone = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 38)(10, \"label\", 39);\n    i0.ɵɵtext(11, \"Clasificaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 42);\n    i0.ɵɵlistener(\"ngModelChange\", function BomberosComponent_form_53_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.stationUpdated.rating = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 38)(14, \"label\", 39);\n    i0.ɵɵtext(15, \"Horario\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 43);\n    i0.ɵɵlistener(\"ngModelChange\", function BomberosComponent_form_53_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.stationUpdated.businessHours = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 44)(18, \"button\", 45);\n    i0.ɵɵtext(19, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"a\", 46);\n    i0.ɵɵtext(21, \"Close\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.stationUpdated.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.stationUpdated.phone);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.stationUpdated.rating);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.stationUpdated.businessHours);\n  }\n}\n\nexport let BomberosComponent = /*#__PURE__*/(() => {\n  class BomberosComponent {\n    constructor(stationRest, userRest) {\n      this.stationRest = stationRest;\n      this.userRest = userRest;\n      this.marker = new google.maps.Marker();\n      this.locations = [];\n      this.stationModel = new StationModel('', 0, 0, '', '', '', '', 0, '', '');\n    }\n\n    ngOnInit() {\n      this.role = this.userRest.getIdentity().role;\n      navigator.geolocation.getCurrentPosition(position => {\n        const pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        var map = new google.maps.Map(document.getElementById('map'), {\n          zoom: 14,\n          center: pos,\n          mapId: 'c7ce922149e4c42d'\n        });\n        this.initMap(map);\n        this.set(map);\n        this.getStations(map);\n        const locationButton = document.createElement(\"button\");\n        locationButton.id = 'center';\n        locationButton.textContent = \"Centrar Mapa\";\n        locationButton.title = 'Centra el mapa';\n        locationButton.classList.add(\"custom-map-control-button\");\n        map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);\n        locationButton.addEventListener(\"click\", () => {\n          map.setOptions({\n            center: pos,\n            zoom: 14\n          });\n        });\n\n        if (this.role == 'ADMIN') {\n          let agregar = document.getElementById('Abutton');\n          agregar.classList.add(\"custom-map-control-button\");\n          agregar.title = 'Agrega una estación';\n          map.controls[1].push(agregar);\n        }\n      });\n    }\n\n    set(map) {\n      this.map = map;\n    }\n\n    address(map) {\n      if (this.listener) {} else {\n        this.listener = google.maps.event.addListener(map, \"click\", ele => {\n          this.marker.setMap(null);\n          this.marker = new google.maps.Marker({\n            map: map,\n            position: ele.latLng\n          });\n          this.stationModel.lat = ele.latLng.lat();\n          this.stationModel.lng = ele.latLng.lng();\n        });\n      }\n    }\n\n    createStation(createStationForm) {\n      this.stationRest.createStation(this.stationModel).subscribe({\n        next: res => {\n          Swal.fire({\n            title: res.message,\n            icon: 'success',\n            position: 'center',\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true\n          });\n          createStationForm.reset();\n          google.maps.event.removeListener(this.listener);\n          this.listener = undefined;\n          this.marker.setMap(null);\n          this.getStations(this.map);\n        },\n        error: err => {\n          console.error();\n          Swal.fire({\n            title: err.error.message || err.error,\n            icon: 'error',\n            position: 'center',\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true\n          });\n        }\n      });\n    }\n\n    initMap(map) {\n      var service;\n      var coords = {\n        lat: 14.6465219,\n        lng: -90.5352448\n      };\n      var request = {\n        location: coords,\n        map,\n        name: 'Bombero Voluntario',\n        radius: 5000\n      };\n      var coords1 = {\n        lat: 14.652111,\n        lng: -90.593456\n      };\n      var request1 = {\n        location: coords1,\n        map,\n        name: 'Bombero Voluntario',\n        radius: 4000\n      };\n      var coords2 = {\n        lat: 14.547564,\n        lng: -90.562434\n      };\n      var request2 = {\n        location: coords2,\n        map,\n        name: 'Bombero Voluntario',\n        radius: 4000\n      };\n      var coords3 = {\n        lat: 14.563847,\n        lng: -90.487933\n      };\n      var request3 = {\n        location: coords3,\n        map,\n        name: 'Bombero Voluntario',\n        radius: 4000\n      };\n      var request4 = {\n        location: coords,\n        map,\n        name: 'Bombero Municipal',\n        radius: 5000\n      };\n      var request5 = {\n        location: coords1,\n        map,\n        name: 'Bombero Municipal',\n        radius: 4000\n      };\n      var request6 = {\n        location: coords2,\n        map,\n        name: 'Bombero Municipal',\n        radius: 4000\n      };\n      var request7 = {\n        location: coords3,\n        map,\n        name: 'Bombero Municipal',\n        radius: 4000\n      };\n      service = new google.maps.places.PlacesService(map);\n      service.nearbySearch(request, (results, status) => {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          for (var i = 0; i < results.length; i++) {\n            this.createMarkerV(results[i]);\n          }\n        }\n      });\n      service.nearbySearch(request1, (results, status) => {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          for (var i = 0; i < results.length; i++) {\n            this.createMarkerV(results[i]);\n          }\n        }\n      });\n      service.nearbySearch(request2, (results, status) => {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          for (var i = 0; i < results.length; i++) {\n            this.createMarkerV(results[i]);\n          }\n        }\n      });\n      service.nearbySearch(request3, (results, status) => {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          for (var i = 0; i < results.length; i++) {\n            this.createMarkerV(results[i]);\n          }\n        }\n      });\n      service.nearbySearch(request4, (results, status) => {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          for (var i = 0; i < results.length; i++) {\n            this.createMarkerM(results[i]);\n          }\n        }\n      });\n      service.nearbySearch(request5, (results, status) => {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          for (var i = 0; i < results.length; i++) {\n            this.createMarkerM(results[i]);\n          }\n        }\n      });\n      service.nearbySearch(request6, (results, status) => {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          for (var i = 0; i < results.length; i++) {\n            this.createMarkerM(results[i]);\n          }\n        }\n      });\n      service.nearbySearch(request7, (results, status) => {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          for (var i = 0; i < results.length; i++) {\n            this.createMarkerM(results[i]);\n          }\n        }\n      });\n    }\n\n    createMarkerV(place) {\n      if (!place.geometry || !place.geometry.location) return;\n\n      for (let location of this.locations) {\n        if (location.lat() == place.geometry.location.lat() && location.lng() == place.geometry.location.lng()) return;\n      }\n\n      var infowindow;\n      var map = this.map;\n      const marker = new google.maps.Marker({\n        map,\n        position: place.geometry.location,\n        icon: '../../assets/img/volunteerFire.png',\n        optimized: true,\n        animation: google.maps.Animation.DROP\n      });\n      this.locations.push(place.geometry.location);\n      google.maps.event.addListener(marker, \"click\", () => {\n        if (this.infoWindow) {\n          this.infoWindow.close();\n        }\n\n        let id = {\n          placeId: place.place_id\n        };\n        new google.maps.places.PlacesService(map).getDetails(id, result => {\n          if (!result.rating) {\n            result.rating = '';\n          }\n\n          if (!result.formatted_phone_number) {\n            result.formatted_phone_number = '';\n          } else {\n            result.formatted_phone_number = `<b>Télefono:</b> ${result.formatted_phone_number}`;\n          }\n\n          if (!result.rating || result.rating == undefined) {\n            result.rating = '';\n          } else {\n            result.rating = `<b>Clasificación:</b> ${result.rating}`;\n          }\n\n          if (!result.opening_hours) {\n            var horario = '';\n            result.opening_hours = '';\n          } else {\n            horario = `<h3><b>Horario:</b></h3>`;\n            result.opening_hours = result.opening_hours.weekday_text;\n\n            if (result.opening_hours.toString().includes(',')) {\n              result.opening_hours = result.opening_hours.toString().replace(/,/g, '<br>');\n            }\n          }\n\n          let content = `<h3><b>Nombre:</b> ${result.name}</h3>` + `<h3><b>Dirección:</b> ${result.adr_address}</h3>` + `<h3>${result.formatted_phone_number}</h3>` + `<h3>${result.rating}</h3>` + `${horario}<h4>${result.opening_hours}</h4>`;\n          infowindow = new google.maps.InfoWindow();\n          infowindow.setContent(content);\n          infowindow.open({\n            anchor: marker,\n            map\n          });\n          this.infoWindow = infowindow;\n        });\n      });\n    }\n\n    createMarkerM(place) {\n      if (!place.geometry || !place.geometry.location) return;\n\n      for (let location of this.locations) {\n        if (location.lat() == place.geometry.location.lat() && location.lng() == place.geometry.location.lng()) return;\n      }\n\n      var infowindow;\n      var map = this.map;\n      const marker = new google.maps.Marker({\n        map,\n        position: place.geometry.location,\n        icon: '../../assets/img/municipalFire.png',\n        optimized: true,\n        animation: google.maps.Animation.DROP\n      });\n      this.locations.push(place.geometry.location);\n      google.maps.event.addListener(marker, \"click\", () => {\n        if (this.infoWindow) {\n          this.infoWindow.close();\n        }\n\n        let id = {\n          placeId: place.place_id\n        };\n        new google.maps.places.PlacesService(map).getDetails(id, result => {\n          if (!result.rating) {\n            result.rating = '';\n          }\n\n          if (!result.formatted_phone_number) {\n            result.formatted_phone_number = '';\n          } else {\n            result.formatted_phone_number = `<b>Télefono:</b> ${result.formatted_phone_number}`;\n          }\n\n          if (!result.rating || result.rating == undefined) {\n            result.rating = '';\n          } else {\n            result.rating = `<b>Clasificación:</b> ${result.rating}`;\n          }\n\n          if (!result.opening_hours) {\n            var horario = '';\n            result.opening_hours = '';\n          } else {\n            horario = `<h3><b>Horario:</b></h3>`;\n            result.opening_hours = result.opening_hours.weekday_text;\n\n            if (result.opening_hours.toString().includes(',')) {\n              result.opening_hours = result.opening_hours.toString().replace(/,/g, '<br>');\n            }\n          }\n\n          let content = `<h3><b>Nombre:</b> ${result.name}</h3>` + `<h3><b>Dirección:</b> ${result.adr_address}</h3>` + `<h3>${result.formatted_phone_number}</h3>` + `<h3>${result.rating}</h3>` + `${horario}<h4>${result.opening_hours}</h4>`;\n          infowindow = new google.maps.InfoWindow();\n          infowindow.setContent(content);\n          infowindow.open({\n            anchor: marker,\n            map\n          });\n          this.infoWindow = infowindow;\n        });\n      });\n    }\n\n    deleteStation() {\n      Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!',\n        allowOutsideClick: false,\n        showCloseButton: true\n      }).then(result => {\n        if (result.isConfirmed) {\n          this.stationRest.deleteStation(this.station._id).subscribe({\n            next: res => {\n              Swal.fire({\n                title: 'Deleted!',\n                text: res.message,\n                icon: 'success',\n                timer: 3000,\n                showConfirmButton: false,\n                timerProgressBar: true\n              });\n              this.getStations(this.map);\n              this.infoWindow.close();\n              this.open.setMap(null);\n            },\n            error: err => {\n              Swal.fire({\n                title: err.error.message || err.error,\n                icon: 'error',\n                position: 'center',\n                showConfirmButton: false,\n                timer: 3000,\n                timerProgressBar: true\n              });\n            }\n          });\n        }\n      });\n    }\n\n    updateStation() {\n      this.stationUpdated.user = undefined, this.stationUpdated.address = undefined, this.stationUpdated.lat = undefined, this.stationUpdated.lng = undefined;\n      this.stationRest.updateStation(this.stationUpdated._id, this.stationUpdated).subscribe({\n        next: res => {\n          Swal.fire({\n            title: res.message,\n            icon: 'success',\n            position: 'center',\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true\n          });\n          this.infoWindow.close();\n          this.id = this.stationUpdated._id;\n          this.getStations(this.map);\n        },\n        error: err => {\n          console.error();\n          Swal.fire({\n            title: err.error.message || err.error,\n            icon: 'error',\n            position: 'center',\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: true\n          });\n        }\n      });\n    }\n\n    createMarker(location, place, map) {\n      var img;\n      var infowindow;\n\n      if (place.type == 'Bombero Municipal') {\n        img = '../../assets/img/municipalFire.png';\n      } else {\n        img = '../../assets/img/volunteerFire.png';\n      }\n\n      const marker = new google.maps.Marker({\n        map,\n        position: location,\n        icon: img,\n        optimized: true,\n        animation: google.maps.Animation.DROP\n      });\n      let content;\n\n      if (this.userRest.getIdentity().role == 'ADMIN') {\n        if (place.businessHours.includes(',')) {\n          place.businessHours = place.businessHours.toString().replace(/,/g, '<br>');\n        }\n\n        content = `<h3><b>Nombre:</b> ${place.name}</h3>` + `<h3><b>Dirección:</b> ${place.address}</h3>` + `<h3><b>Teléfono:</b> ${place.phone}</h3>` + `<h3><b>Clasificación:</b> ${place.rating}</h3>` + `<h3>Horario:<br></h3><h4>${place.businessHours}</h4>` + `<h3><b>Usuario que la creo:</b> ${place.user.name}</h3>` + `<button id=\"get\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvas\"\n        aria-controls=\"offcanvas\" type=\"button\" class=\"btn btn-primary\">Actualizar</button>` + `<button id=\"delete\" type=\"button\" class=\"btn btn-danger ms-3\">Borrar</button>`;\n      } else {\n        content = `<h3><b>Nombre:</b> ${place.name}</h3>` + `<h3><b>Dirección:</b> ${place.address}</h3>` + `<h3><b>Teléfono:</b> ${place.phone}</h3>` + `<h3><b>Clasificación:</b> ${place.rating}</h3>` + `<h3>Horario:<br></h3><h4>${place.businessHours}</h4>` + `<h3><b>Usuario que la creo:</b> ${place.user.name}</h3>`;\n      }\n\n      google.maps.event.addListener(marker, \"click\", () => {\n        if (this.infoWindow) {\n          this.infoWindow.close();\n        }\n\n        setTimeout(() => {\n          document.getElementById('get')?.addEventListener(\"click\", () => {\n            this.stationUpdated = place;\n            this.infoWindow = infowindow;\n            this.open = marker;\n          });\n          document.getElementById('delete')?.addEventListener(\"click\", () => {\n            this.station = place;\n            this.infoWindow = infowindow;\n            this.open = marker;\n            this.deleteStation();\n          });\n        }, 500);\n        infowindow = new google.maps.InfoWindow();\n        infowindow.setContent(content);\n        infowindow.open({\n          anchor: marker,\n          map\n        });\n        this.infoWindow = infowindow;\n      });\n\n      if (this.id == place._id) {\n        infowindow = new google.maps.InfoWindow();\n        infowindow.setContent(content);\n        infowindow.open({\n          anchor: marker,\n          map\n        });\n        this.infoWindow = infowindow;\n        this.id = undefined;\n      }\n    }\n\n    getStations(map) {\n      this.stationRest.getFireStations().subscribe({\n        next: res => {\n          for (let station of res.stations) {\n            var location = {\n              lat: station.lat,\n              lng: station.lng\n            };\n            this.createMarker(location, station, map);\n          }\n        },\n        error: err => {}\n      });\n    }\n\n  }\n\n  BomberosComponent.ɵfac = function BomberosComponent_Factory(t) {\n    return new (t || BomberosComponent)(i0.ɵɵdirectiveInject(i1.StationRestService), i0.ɵɵdirectiveInject(i2.UserRestService));\n  };\n\n  BomberosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BomberosComponent,\n    selectors: [[\"app-bomberos\"]],\n    decls: 54,\n    vars: 8,\n    consts: [[\"id\", \"map\"], [\"id\", \"agregar\", 4, \"ngIf\"], [\"id\", \"exampleModal\", \"tabindex\", \"5\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"ngSubmit\"], [\"createStationForm\", \"ngForm\"], [1, \"mb-2\"], [\"for\", \"name\", 1, \"form-label\"], [\"name\", \"name\", \"id\", \"name\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"type\", 1, \"form-label\"], [\"name\", \"type\", \"aria-label\", \"Default select example\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\", \"disabled\", \"\"], [\"value\", \"Bombero Municipal\"], [\"value\", \"Bombero Voluntario\"], [\"for\", \"phone\", 1, \"form-label\"], [\"name\", \"phone\", \"id\", \"phone\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"address\", 1, \"form-label\"], [\"name\", \"address\", \"id\", \"address\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"rating\", 1, \"form-label\"], [\"name\", \"rating\", \"id\", \"rating\", \"type\", \"number\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"businessHours\", 1, \"form-label\"], [\"name\", \"businessHours\", \"id\", \"businessHours\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-primary\"], [\"tabindex\", \"-1\", \"id\", \"offcanvas\", \"aria-labelledby\", \"offcanvasLabel\", 1, \"offcanvas\", \"offcanvas-start\", 2, \"background-color\", \"#F5F6F7\"], [1, \"offcanvas-header\"], [\"id\", \"offcanvasLabel\", 1, \"offcanvas-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"offcanvas\", \"aria-label\", \"Close\", 1, \"btn-close\", \"text-reset\"], [1, \"offcanvas-body\"], [3, \"ngSubmit\", 4, \"ngIf\"], [\"id\", \"agregar\"], [\"id\", \"Abutton\", \"type\", \"submit\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModal\"], [1, \"form-group\", \"mb-3\"], [1, \"form-label\"], [\"name\", \"name\", \"id\", \"inputEmail\", \"type\", \"text\", \"required\", \"\", \"autofocus\", \"\", 1, \"form-control\", \"rounded-pill\", \"border-0\", \"shadow-sm\", \"px-4\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"phone\", \"id\", \"inputPassword\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", \"rounded-pill\", \"border-0\", \"shadow-sm\", \"px-4\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"rating\", \"id\", \"rating\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", \"rounded-pill\", \"border-0\", \"shadow-sm\", \"px-4\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"businessHours\", \"id\", \"businessHours\", \"type\", \"text\", \"required\", \"\", 1, \"form-control\", \"rounded-pill\", \"border-0\", \"shadow-sm\", \"px-4\", 3, \"ngModel\", \"ngModelChange\"], [1, \"text-center\"], [\"type\", \"submit\", \"data-bs-dismiss\", \"offcanvas\", 1, \"btn\", \"btn-info\", \"me-5\"], [\"type\", \"button\", \"data-bs-dismiss\", \"offcanvas\", 1, \"btn\", \"btn-secondary\", \"ms-2\"]],\n    template: function BomberosComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r9 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵtemplate(1, BomberosComponent_div_1_Template, 3, 0, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h5\", 6);\n        i0.ɵɵtext(7, \"Agregar estaci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"button\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"form\", 9, 10);\n        i0.ɵɵlistener(\"ngSubmit\", function BomberosComponent_Template_form_ngSubmit_10_listener() {\n          i0.ɵɵrestoreView(_r9);\n\n          const _r1 = i0.ɵɵreference(11);\n\n          return i0.ɵɵresetView(ctx.createStation(_r1));\n        });\n        i0.ɵɵelementStart(12, \"div\", 11)(13, \"label\", 12);\n        i0.ɵɵtext(14, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function BomberosComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.stationModel.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 11)(17, \"label\", 14);\n        i0.ɵɵtext(18, \"Tipo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"select\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function BomberosComponent_Template_select_ngModelChange_19_listener($event) {\n          return ctx.stationModel.type = $event;\n        });\n        i0.ɵɵelementStart(20, \"option\", 16);\n        i0.ɵɵtext(21, \"Open this select menu\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"option\", 17);\n        i0.ɵɵtext(23, \"Bombero Municipal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"option\", 18);\n        i0.ɵɵtext(25, \"Bombero Voluntario\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 11)(27, \"label\", 19);\n        i0.ɵɵtext(28, \"Tel\\u00E9fono\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"input\", 20);\n        i0.ɵɵlistener(\"ngModelChange\", function BomberosComponent_Template_input_ngModelChange_29_listener($event) {\n          return ctx.stationModel.phone = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 11)(31, \"label\", 21);\n        i0.ɵɵtext(32, \"Direcci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"input\", 22);\n        i0.ɵɵlistener(\"ngModelChange\", function BomberosComponent_Template_input_ngModelChange_33_listener($event) {\n          return ctx.stationModel.address = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"div\", 11)(35, \"label\", 23);\n        i0.ɵɵtext(36, \"Clasificaci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"input\", 24);\n        i0.ɵɵlistener(\"ngModelChange\", function BomberosComponent_Template_input_ngModelChange_37_listener($event) {\n          return ctx.stationModel.rating = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(38, \"div\", 11)(39, \"label\", 25);\n        i0.ɵɵtext(40, \"Horario\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"input\", 26);\n        i0.ɵɵlistener(\"ngModelChange\", function BomberosComponent_Template_input_ngModelChange_41_listener($event) {\n          return ctx.stationModel.businessHours = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(42, \"div\", 27)(43, \"button\", 28);\n        i0.ɵɵlistener(\"click\", function BomberosComponent_Template_button_click_43_listener() {\n          return ctx.address(ctx.map);\n        });\n        i0.ɵɵtext(44, \"Agregar ubicaci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"button\", 29);\n        i0.ɵɵtext(46, \"Save changes\");\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(47, \"div\", 30)(48, \"div\", 31)(49, \"h2\", 32);\n        i0.ɵɵtext(50, \"Actualizar Estaci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(51, \"button\", 33);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"div\", 34);\n        i0.ɵɵtemplate(53, BomberosComponent_form_53_Template, 22, 4, \"form\", 35);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.role == \"ADMIN\");\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngModel\", ctx.stationModel.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.stationModel.type);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.stationModel.phone);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.stationModel.address);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.stationModel.rating);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.stationModel.businessHours);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.stationUpdated);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm]\n  });\n  return BomberosComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
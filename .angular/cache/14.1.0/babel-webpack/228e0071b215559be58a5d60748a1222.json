{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/fire/compat/auth\";\nexport let UserRestService = /*#__PURE__*/(() => {\n  class UserRestService {\n    constructor(http, fireAuth) {\n      this.http = http;\n      this.fireAuth = fireAuth;\n      this.httpOptions = new HttpHeaders().set('Content-Type', 'application/json');\n    }\n\n    getToken() {\n      let globalToken = localStorage.getItem('token');\n      let token;\n\n      if (globalToken != undefined) {\n        token = globalToken;\n      } else {\n        token = '';\n      }\n\n      return token;\n    }\n\n    getIdentity() {\n      let globalIdentity = localStorage.getItem('identity');\n      let identity;\n\n      if (globalIdentity != undefined) {\n        identity = JSON.parse(globalIdentity);\n      } else {\n        identity = '';\n      }\n\n      return identity;\n    }\n\n    register(params) {\n      return this.http.post(environment.baseUri + 'user/register', params, {\n        headers: this.httpOptions\n      });\n    }\n\n    login(params) {\n      return this.http.post(environment.baseUri + 'user/login', params, {\n        headers: this.httpOptions\n      });\n    }\n\n    logOut() {\n      this.fireAuth.signOut();\n    }\n\n  }\n\n  UserRestService.ɵfac = function UserRestService_Factory(t) {\n    return new (t || UserRestService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AngularFireAuth));\n  };\n\n  UserRestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserRestService,\n    factory: UserRestService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserRestService;\n})();","map":null,"metadata":{},"sourceType":"module"}